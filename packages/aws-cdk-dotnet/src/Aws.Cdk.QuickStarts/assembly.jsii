{
  "schema": "jsii/1.0",
  "types": {
    "jsii$_aws_cdk_quickstarts$.SqlServerProps": {
      "kind": "interface",
      "properties": [
        {
          "name": "instanceClass",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "name": "engine",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "name": "engineVersion",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "name": "licenseModel",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "name": "masterUsername",
          "type": {
            "primitive": "string"
          }
        },
        {
          "name": "masterPassword",
          "type": {
            "primitive": "string"
          }
        },
        {
          "name": "allocatedStorage",
          "type": {
            "primitive": "number",
            "optional": true
          }
        },
        {
          "name": "vpc",
          "type": {
            "fqn": "jsii$_aws_cdk_ec2$.VpcNetworkRef"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_quickstarts$.SqlServerProps",
      "module": "jsii$_aws_cdk_quickstarts$",
      "namespace": "jsii$_aws_cdk_quickstarts$",
      "name": "SqlServerProps",
      "datatype": true
    },
    "jsii$_aws_cdk_quickstarts$.SqlServer": {
      "docs": {
        "comment": "An instance of Microsoft SQL server with associated security groups"
      },
      "kind": "class",
      "properties": [
        {
          "name": "connections",
          "type": {
            "fqn": "jsii$_aws_cdk_ec2$.DefaultConnections"
          },
          "immutable": true
        },
        {
          "name": "defaultPortRange",
          "type": {
            "fqn": "jsii$_aws_cdk_ec2$.IPortRange"
          },
          "immutable": true
        }
      ],
      "interfaces": [
        {
          "fqn": "jsii$_aws_cdk_ec2$.IConnectable"
        }
      ],
      "fqn": "jsii$_aws_cdk_quickstarts$.SqlServer",
      "module": "jsii$_aws_cdk_quickstarts$",
      "namespace": "jsii$_aws_cdk_quickstarts$",
      "name": "SqlServer",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_quickstarts$.SqlServerProps"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_quickstarts$.RemoteDesktopGatewayProps": {
      "kind": "interface",
      "properties": [
        {
          "name": "rdgwCIDR",
          "type": {
            "primitive": "string"
          }
        },
        {
          "name": "vpc",
          "type": {
            "fqn": "jsii$_aws_cdk_ec2$.VpcNetworkRef"
          }
        },
        {
          "name": "keyPairName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "name": "adminPassword",
          "type": {
            "primitive": "string"
          }
        },
        {
          "name": "adminUser",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "name": "domainDNSName",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "name": "numberOfRDGWHosts",
          "type": {
            "primitive": "number",
            "optional": true
          }
        },
        {
          "name": "qss3BucketName",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "name": "qss3KeyPrefix",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "name": "rdgwInstanceType",
          "type": {
            "primitive": "string",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_quickstarts$.RemoteDesktopGatewayProps",
      "module": "jsii$_aws_cdk_quickstarts$",
      "namespace": "jsii$_aws_cdk_quickstarts$",
      "name": "RemoteDesktopGatewayProps",
      "datatype": true
    },
    "jsii$_aws_cdk_quickstarts$.RemoteDesktopGateway": {
      "docs": {
        "comment": "Embed the Remote Desktop Gateway AWS QuickStart"
      },
      "kind": "class",
      "properties": [
        {
          "name": "connections",
          "type": {
            "fqn": "jsii$_aws_cdk_ec2$.DefaultConnections"
          },
          "immutable": true
        },
        {
          "name": "defaultPortRange",
          "type": {
            "fqn": "jsii$_aws_cdk_ec2$.IPortRange"
          },
          "immutable": true
        }
      ],
      "interfaces": [
        {
          "fqn": "jsii$_aws_cdk_ec2$.IDefaultConnectable"
        }
      ],
      "fqn": "jsii$_aws_cdk_quickstarts$.RemoteDesktopGateway",
      "module": "jsii$_aws_cdk_quickstarts$",
      "namespace": "jsii$_aws_cdk_quickstarts$",
      "name": "RemoteDesktopGateway",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_quickstarts$.RemoteDesktopGatewayProps"
            }
          }
        ],
        "initializer": true
      }
    }
  },
  "nametree": {
    "jsii$_aws_cdk_quickstarts$": {
      "SqlServerProps": {
        "_": "jsii$_aws_cdk_quickstarts$.SqlServerProps"
      },
      "SqlServer": {
        "_": "jsii$_aws_cdk_quickstarts$.SqlServer"
      },
      "RemoteDesktopGatewayProps": {
        "_": "jsii$_aws_cdk_quickstarts$.RemoteDesktopGatewayProps"
      },
      "RemoteDesktopGateway": {
        "_": "jsii$_aws_cdk_quickstarts$.RemoteDesktopGateway"
      }
    }
  },
  "typecount": 4,
  "externalTypes": {
    "jsii$_aws_cdk_ec2$.VpcNetworkRef": {
      "docs": {
        "comment": "A new or imported VPC"
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "Identifier for this VPC"
          },
          "name": "vpcId",
          "type": {
            "fqn": "jsii$_aws_cdk_ec2$.VpcNetworkId"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "List of public subnets in this VPC"
          },
          "name": "publicSubnets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_ec2$.VpcSubnetRef"
              },
              "kind": "array"
            }
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "List of private subnets in this VPC"
          },
          "name": "privateSubnets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_ec2$.VpcSubnetRef"
              },
              "kind": "array"
            }
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "Parts of the VPC that constitute full construction"
          },
          "name": "dependencyElements",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.IDependable"
              },
              "kind": "array"
            }
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "name": "parent",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "jsii$_aws_cdk_ec2$.VpcNetworkRefProps"
              }
            }
          ],
          "docs": {
            "comment": "Import an exported VPC"
          },
          "name": "import",
          "static": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_ec2$.VpcNetworkRef"
          }
        },
        {
          "parameters": [
            {
              "name": "placement",
              "type": {
                "fqn": "jsii$_aws_cdk_ec2$.VpcPlacementStrategy",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Return the subnets appropriate for the placement strategy"
          },
          "name": "subnets",
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_ec2$.VpcSubnetRef"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Export this VPC from the stack"
          },
          "name": "export",
          "returns": {
            "fqn": "jsii$_aws_cdk_ec2$.VpcNetworkRefProps"
          }
        }
      ],
      "interfaces": [
        {
          "fqn": "jsii$_aws_cdk_core$.IDependable"
        }
      ],
      "fqn": "jsii$_aws_cdk_ec2$.VpcNetworkRef",
      "module": "jsii$_aws_cdk_ec2$",
      "namespace": "jsii$_aws_cdk_ec2$",
      "name": "VpcNetworkRef",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "abstract": true,
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_core$.Construct": {
      "docs": {
        "comment": "Represents the building block of the construct graph.\nWhen a construct is created, it is always added as a child"
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "Returns the parent of this node or undefined if this is a root node."
          },
          "name": "parent",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.Construct",
            "optional": true
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The name of this construct"
          },
          "name": "name",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "All direct children of this construct."
          },
          "name": "children",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              },
              "kind": "array"
            }
          },
          "immutable": true
        },
        {
          "docs": {
            "returns": "/-separated path of this Construct.",
            "comment": "Returns the path of all constructs from root to this construct, in string form."
          },
          "name": "path",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "An array of metadata objects associated with this construct.\nThis can be used, for example, to implement support for deprecation notices, source mapping, etc."
          },
          "name": "metadata",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.MetadataEntry"
              },
              "kind": "array"
            }
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "docs": {
            "comment": "Returns a string representation of this construct."
          },
          "name": "toString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "parameters": [
            {
              "name": "depth",
              "type": {
                "primitive": "number",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Returns a string with a tree representation of this construct and it's children."
          },
          "name": "toTreeString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "a child by path or undefined if not found.",
            "comment": "Return a descendant by path, or undefined"
          },
          "name": "tryFindChild",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct",
            "optional": true
          }
        },
        {
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "Child with the given path.",
            "comment": "Return a descendant by path\n\nThrows an exception if the descendant is not found."
          },
          "name": "findChild",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "key The context key",
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "value The context value",
                "comment": "The context value"
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "This can be used to set contextual values.\nContext must be set before any children are added, since children may consult context info during construction.\nIf the key already exists, it will be overridden."
          },
          "name": "setContext"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "key The context key",
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "The context value or undefined",
            "comment": "Retrieves a value from tree context.\n\nContext is usually initialized at the root, but can be overridden at any point in the tree."
          },
          "name": "getContext",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Retrieve a value from tree-global context\n\nIt is an error if the context object is not available."
          },
          "name": "requireContext",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "type a string denoting the type of metadata",
                "comment": "a string denoting the type of metadata"
              },
              "name": "type",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "data the value of the metadata (can be a Token). If null/undefined, metadata will not be added.",
                "comment": "the value of the metadata (can be a Token). If null/undefined, metadata will not be added."
              },
              "name": "data",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "param": "from a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)",
                "comment": "a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)"
              },
              "name": "from",
              "type": {
                "primitive": "any",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Adds a metadata entry to this construct.\nEntries are arbitrary values and will also include a stack trace to allow tracing back to\nthe code location for when the entry was added. It can be used, for example, to include source\nmapping in CloudFormation templates to improve diagnostics."
          },
          "name": "addMetadata",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "message The warning message.",
                "comment": "The warning message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Adds a { warning: <message> } metadata entry to this construct."
          },
          "name": "addWarning",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "docs": {
            "returns": "An array of validation error messages, or an empty array if there the construct is valid.",
            "comment": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis."
          },
          "name": "validate",
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "returns": "A list of validation errors. If the list is empty, all constructs are valid.",
            "comment": "Invokes 'validate' on all child constructs and then on this construct (depth-first)."
          },
          "name": "validateTree",
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.ValidationError"
              },
              "kind": "array"
            }
          }
        },
        {
          "parameters": [
            {
              "name": "upTo",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Return the ancestors (including self) of this Construct up until and excluding the indicated component"
          },
          "name": "ancestors",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              },
              "kind": "array"
            }
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "props The props bag.",
                "comment": "The props bag."
              },
              "name": "props",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "param": "name The name of the required property.",
                "comment": "The name of the required property."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Throws if the `props` bag doesn't include the property `name`.\nIn the future we can add some type-checking here, maybe even auto-generate during compilation."
          },
          "name": "required",
          "protected": true,
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "child The child construct",
                "comment": "The child construct"
              },
              "name": "child",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "name": "childName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "The resolved path part name of the child",
            "comment": "Adds a child construct to this node."
          },
          "name": "addChild",
          "protected": true
        },
        {
          "docs": {
            "comment": "Locks this construct from allowing more children to be added. After this\ncall, no more children can be added to this construct or to any children."
          },
          "name": "lock",
          "protected": true
        },
        {
          "docs": {
            "comment": "Unlocks this costruct and allows mutations (adding children)."
          },
          "name": "unlock",
          "protected": true
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.Construct",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "Construct",
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_ec2$.IConnectable": {
      "docs": {
        "comment": "The goal of this module is to make possible to write statements like this:\n\n    ```ts\n *    database.connections.allowFrom(fleet);\n *    fleet.connections.allowTo(database);\n *    rdgw.connections.allowFromCidrIp('0.3.1.5/86');\n *    rgdw.connections.allowTrafficTo(fleet, new AllPorts());\n *    ```\n\nThe insight here is that some connecting peers have information on what ports should\nbe involved in the connection, and some don't.\n\nConstructs will make their `connections` property to be equal to an instance of\neither `Connections` or `ConnectionsWithDefault`.\nAn object that has a Connections object"
      },
      "kind": "interface",
      "properties": [
        {
          "name": "connections",
          "type": {
            "fqn": "jsii$_aws_cdk_ec2$.IConnections"
          },
          "immutable": true
        }
      ],
      "fqn": "jsii$_aws_cdk_ec2$.IConnectable",
      "module": "jsii$_aws_cdk_ec2$",
      "namespace": "jsii$_aws_cdk_ec2$",
      "name": "IConnectable",
      "datatype": true
    },
    "jsii$_aws_cdk_ec2$.DefaultConnections": {
      "docs": {
        "comment": "A class to orchestrate connections that already has default ports"
      },
      "kind": "class",
      "properties": [
        {
          "name": "defaultPortRange",
          "type": {
            "fqn": "jsii$_aws_cdk_ec2$.IPortRange"
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "name": "other",
              "type": {
                "fqn": "jsii$_aws_cdk_ec2$.IConnectable"
              }
            },
            {
              "name": "description",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Allow connections from the peer on our default port\n\nEven if the peer has a default port, we will always use our default port."
          },
          "name": "allowDefaultPortFrom"
        },
        {
          "parameters": [
            {
              "name": "description",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Allow hosts inside the security group to connect to each other"
          },
          "name": "allowDefaultPortInternally"
        },
        {
          "parameters": [
            {
              "name": "description",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Allow default connections from all IPv4 ranges"
          },
          "name": "allowDefaultPortFromAnyIpv4"
        }
      ],
      "fqn": "jsii$_aws_cdk_ec2$.DefaultConnections",
      "module": "jsii$_aws_cdk_ec2$",
      "namespace": "jsii$_aws_cdk_ec2$",
      "name": "DefaultConnections",
      "base": {
        "fqn": "jsii$_aws_cdk_ec2$.Connections"
      },
      "initializer": {
        "parameters": [
          {
            "name": "securityGroup",
            "type": {
              "fqn": "jsii$_aws_cdk_ec2$.ISecurityGroup"
            }
          },
          {
            "name": "defaultPortRangeProvider",
            "type": {
              "fqn": "jsii$_aws_cdk_ec2$.IDefaultConnectable"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_ec2$.IPortRange": {
      "docs": {
        "comment": "Interface for classes that provide the connection-specification parts of a security group rule"
      },
      "kind": "interface",
      "methods": [
        {
          "docs": {
            "comment": "Produce the ingress/egress rule JSON for the given connection"
          },
          "name": "toRuleJSON",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "properties": [
        {
          "name": "canInlineRule",
          "type": {
            "primitive": "boolean"
          },
          "immutable": true
        }
      ],
      "fqn": "jsii$_aws_cdk_ec2$.IPortRange",
      "module": "jsii$_aws_cdk_ec2$",
      "namespace": "jsii$_aws_cdk_ec2$",
      "name": "IPortRange"
    },
    "jsii$_aws_cdk_ec2$.IDefaultConnectable": {
      "docs": {
        "comment": "An object that has a Connections object as well as a default port range."
      },
      "kind": "interface",
      "interfaces": [
        {
          "fqn": "jsii$_aws_cdk_ec2$.IConnectable"
        }
      ],
      "properties": [
        {
          "name": "defaultPortRange",
          "type": {
            "fqn": "jsii$_aws_cdk_ec2$.IPortRange"
          },
          "immutable": true
        }
      ],
      "fqn": "jsii$_aws_cdk_ec2$.IDefaultConnectable",
      "module": "jsii$_aws_cdk_ec2$",
      "namespace": "jsii$_aws_cdk_ec2$",
      "name": "IDefaultConnectable",
      "datatype": true
    }
  },
  "name": "jsii$_aws_cdk_quickstarts$",
  "package": "@aws-cdk/quickstarts",
  "version": "0.7.2-beta",
  "dependencies": {
    "jsii$_aws_cdk_core$": {
      "package": "@aws-cdk/core",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_ec2$": {
      "package": "@aws-cdk/ec2",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_iam$": {
      "package": "@aws-cdk/iam",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_resources$": {
      "package": "@aws-cdk/resources",
      "version": "0.7.2-beta"
    }
  },
  "bundled": {
    "@aws-cdk/util": "^0.7.2-beta"
  },
  "names": {
    "java": "com.amazonaws.cdk.quickstarts",
    "dotnet": "Aws.Cdk.QuickStarts",
    "js": "@aws-cdk/quickstarts"
  },
  "nativenames": {
    "jsii$_aws_cdk_core$": {
      "java": "com.amazonaws.cdk",
      "dotnet": "Aws.Cdk",
      "js": "@aws-cdk/core"
    },
    "jsii$_aws_cdk_ec2$": {
      "java": "com.amazonaws.cdk.ec2",
      "dotnet": "Aws.Cdk.Ec2",
      "js": "@aws-cdk/ec2"
    },
    "jsii$_aws_cdk_iam$": {
      "java": "com.amazonaws.cdk.iam",
      "dotnet": "Aws.Cdk.Iam",
      "js": "@aws-cdk/iam"
    },
    "jsii$_aws_cdk_resources$": {
      "java": "com.amazonaws.cdk.resources",
      "dotnet": "Aws.Cdk.Resources",
      "js": "@aws-cdk/resources"
    },
    "jsii$_aws_cdk_quickstarts$": {
      "java": "com.amazonaws.cdk.quickstarts",
      "dotnet": "Aws.Cdk.QuickStarts",
      "js": "@aws-cdk/quickstarts"
    }
  },
  "code": "var jsii$_aws_cdk_quickstarts$ =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_core$;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_ec2$;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_resources$;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Return whether the given value is an object\n *\n * Even though arrays technically are objects, we usually want to treat them differently,\n * so we return false in those cases.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === 'object' && !exports.isArray(x);\n}\nexports.isObject = isObject;\n/**\n * Return whether the given value is an array\n */\nexports.isArray = Array.isArray;\n/**\n * Return the value of the first argument if it's not undefined, otherwise the default\n */\nfunction ifDefined(x, def) {\n    return typeof x !== 'undefined' ? x : def;\n}\nexports.ifDefined = ifDefined;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(5));\n__export(__webpack_require__(9));\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(0);\nconst ec2_1 = __webpack_require__(1);\nconst resources_1 = __webpack_require__(2);\nconst util_1 = __webpack_require__(6);\n/**\n * An instance of Microsoft SQL server with associated security groups\n */\nclass SqlServer extends core_1.Construct {\n    constructor(parent, name, props) {\n        super(parent, name);\n        this.securityGroup = new ec2_1.SecurityGroup(this, 'SecurityGroup', {\n            vpc: props.vpc,\n            description: 'Database security group',\n        });\n        const subnetGroup = new resources_1.rds.DBSubnetGroupResource(this, 'Subnet', {\n            subnetIds: props.vpc.privateSubnets.map(privateSubnet => privateSubnet.subnetId),\n            dbSubnetGroupDescription: 'Database subnet group',\n        });\n        const p = util_1.applyDefaults(props, {\n            instanceClass: 'db.m4.large',\n            engine: 'sqlserver-se',\n            engineVersion: '13.00.4422.0.v1',\n            licenseModel: 'license-included',\n            allocatedStorage: 200\n        });\n        new resources_1.rds.DBInstanceResource(this, 'Resource', {\n            allocatedStorage: p.allocatedStorage.toString(),\n            dbInstanceClass: p.instanceClass,\n            engine: p.engine,\n            engineVersion: p.engineVersion,\n            licenseModel: p.licenseModel,\n            masterUsername: p.masterUsername,\n            masterUserPassword: p.masterPassword,\n            port: SqlServer.PORT.toString(),\n            dbSubnetGroupName: subnetGroup.ref,\n            vpcSecurityGroups: [this.securityGroup.securityGroupId]\n        });\n        this.defaultPortRange = new ec2_1.TcpPort(SqlServer.PORT);\n        this.connections = new ec2_1.DefaultConnections(this.securityGroup, this);\n    }\n}\nSqlServer.PORT = 1433;\nexports.SqlServer = SqlServer;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(7));\n__export(__webpack_require__(8));\n__export(__webpack_require__(3));\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Map a function over an array and concatenate the results\n */\nfunction flatMap(xs, fn) {\n    return flatten(xs.map(fn));\n}\nexports.flatMap = flatMap;\n/**\n * Flatten a list of lists into a list of elements\n */\nfunction flatten(xs) {\n    return Array.prototype.concat.apply([], xs);\n}\nexports.flatten = flatten;\n/**\n * Partition a collection by removing and returning all elements that match a predicate\n *\n * Note: the input collection is modified in-place!\n */\nfunction partition(collection, pred) {\n    const ret = [];\n    let i = 0;\n    while (i < collection.length) {\n        if (pred(collection[i])) {\n            ret.push(collection.splice(i, 1)[0]);\n        }\n        else {\n            i++;\n        }\n    }\n    return ret;\n}\nexports.partition = partition;\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst types_1 = __webpack_require__(3);\n/**\n * Return a new object by adding missing keys into another object\n */\nfunction applyDefaults(hash, defaults) {\n    const result = {};\n    Object.keys(hash).forEach(k => result[k] = hash[k]);\n    Object.keys(defaults)\n        .filter(k => !(k in result))\n        .forEach(k => result[k] = defaults[k]);\n    return result;\n}\nexports.applyDefaults = applyDefaults;\n/**\n * Return whether the given parameter is an empty object or empty list.\n */\nfunction isEmpty(x) {\n    if (x == null) {\n        return false;\n    }\n    if (types_1.isArray(x)) {\n        return x.length === 0;\n    }\n    return Object.keys(x).length === 0;\n}\nexports.isEmpty = isEmpty;\n/**\n * Deep clone a tree of objects, lists or scalars\n *\n * Does not support cycles.\n */\nfunction deepClone(x) {\n    if (typeof x === 'undefined') {\n        return undefined;\n    }\n    if (x === null) {\n        return null;\n    }\n    if (types_1.isArray(x)) {\n        return x.map(deepClone);\n    }\n    if (types_1.isObject(x)) {\n        return makeObject(mapObject(x, (k, v) => [k, deepClone(v)]));\n    }\n    return x;\n}\nexports.deepClone = deepClone;\n/**\n * Map over an object, treating it as a dictionary\n */\nfunction mapObject(x, fn) {\n    const ret = [];\n    Object.keys(x).forEach(key => {\n        ret.push(fn(key, x[key]));\n    });\n    return ret;\n}\nexports.mapObject = mapObject;\n/**\n * Construct an object from a list of (k, v) pairs\n */\nfunction makeObject(pairs) {\n    const ret = {};\n    for (const pair of pairs) {\n        ret[pair[0]] = pair[1];\n    }\n    return ret;\n}\nexports.makeObject = makeObject;\n/**\n * Deep get a value from a tree of nested objects\n *\n * Returns undefined if any part of the path was unset or\n * not an object.\n */\nfunction deepGet(x, path) {\n    path = path.slice();\n    while (path.length > 0 && types_1.isObject(x)) {\n        const key = path.shift();\n        x = x[key];\n    }\n    return path.length === 0 ? x : undefined;\n}\nexports.deepGet = deepGet;\n/**\n * Deep set a value in a tree of nested objects\n *\n * Throws an error if any part of the path is not an object.\n */\nfunction deepSet(x, path, value) {\n    path = path.slice();\n    if (path.length === 0) {\n        throw new Error('Path may not be empty');\n    }\n    while (path.length > 1 && types_1.isObject(x)) {\n        const key = path.shift();\n        if (!(key in x)) {\n            x[key] = {};\n        }\n        x = x[key];\n    }\n    if (!types_1.isObject(x)) {\n        throw new Error(`Expected an object, got '${x}'`);\n    }\n    x[path[0]] = value;\n}\nexports.deepSet = deepSet;\n/**\n * Recursively merge objects together\n *\n * The leftmost object is mutated and returned. Arrays are not merged\n * but overwritten just like scalars.\n *\n * If an object is merged into a non-object, the non-object is lost.\n */\nfunction deepMerge(...objects) {\n    function mergeOne(target, source) {\n        for (const key of Object.keys(source)) {\n            const value = source[key];\n            if (types_1.isObject(value)) {\n                if (!types_1.isObject(target[key])) {\n                    target[key] = {};\n                } // Overwrite on purpose\n                mergeOne(target[key], value);\n            }\n            else if (typeof value !== 'undefined') {\n                target[key] = value;\n            }\n        }\n    }\n    const others = objects.filter(x => x != null);\n    if (others.length === 0) {\n        return {};\n    }\n    const into = others.splice(0, 1)[0];\n    others.forEach(other => mergeOne(into, other));\n    return into;\n}\nexports.deepMerge = deepMerge;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(0);\nconst ec2_1 = __webpack_require__(1);\nconst resources_1 = __webpack_require__(2);\n/**\n * Embed the Remote Desktop Gateway AWS QuickStart\n */\nclass RemoteDesktopGateway extends core_1.Construct {\n    constructor(parent, name, props) {\n        super(parent, name);\n        const params = {\n            RDGWCIDR: props.rdgwCIDR,\n            VPCID: props.vpc.vpcId,\n            PublicSubnet1ID: props.vpc.publicSubnets[0].subnetId,\n            PublicSubnet2ID: props.vpc.publicSubnets[1].subnetId,\n            AdminPassword: props.adminPassword,\n            AdminUser: props.adminUser,\n            DomainDNSName: props.domainDNSName,\n            KeyPairName: props.keyPairName,\n            NumberOfRDGWHosts: props.numberOfRDGWHosts,\n            QSS3BucketName: props.qss3BucketName,\n            QSS3KeyPrefix: props.qss3KeyPrefix,\n            RDGWInstanceType: props.rdgwInstanceType,\n        };\n        const nestedStack = new resources_1.cloudformation.StackResource(this, 'Resource', {\n            templateUrl: 'https://s3.amazonaws.com/quickstart-reference/microsoft/rdgateway/latest/templates/rdgw-standalone.template',\n            parameters: params\n        });\n        const securityGroup = new ec2_1.SecurityGroupRef(this, 'SecurityGroup', {\n            securityGroupId: nestedStack.getAtt('Outputs.RemoteDesktopGatewaySGID')\n        });\n        this.defaultPortRange = new ec2_1.TcpPort(RemoteDesktopGateway.PORT);\n        this.connections = new ec2_1.DefaultConnections(securityGroup, this);\n    }\n}\nRemoteDesktopGateway.PORT = 3389;\nexports.RemoteDesktopGateway = RemoteDesktopGateway;\n\n\n/***/ })\n/******/ ]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"
}
