{
  "schema": "jsii/1.0",
  "types": {
    "jsii$_aws_cdk_codebuild$.BuildProjectRefProps": {
      "docs": {
        "see": "BuildProjectRef.export",
        "comment": "Properties of a reference to a CodeBuild Project."
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "The human-readable name of the CodeBuild Project we're referencing.\nThe Project must be in the same account and region as the root Stack."
          },
          "name": "projectName",
          "type": {
            "fqn": "jsii$_aws_cdk_codebuild$.ProjectName"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codebuild$.BuildProjectRefProps",
      "module": "jsii$_aws_cdk_codebuild$",
      "namespace": "jsii$_aws_cdk_codebuild$",
      "name": "BuildProjectRefProps",
      "datatype": true
    },
    "jsii$_aws_cdk_codebuild$.BuildProjectRef": {
      "docs": {
        "comment": "Represents a reference to a CodeBuild Project.\n\nIf you're managing the Project alongside the rest of your CDK resources,\nuse the {@link BuildProject} class.\n\nIf you want to reference an already existing Project\n(or one defined in a different CDK Stack),\nuse the {@link import} method."
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of this Project. "
          },
          "name": "projectArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.codebuild.ProjectArn"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "The human-visible name of this Project. "
          },
          "name": "projectName",
          "type": {
            "fqn": "jsii$_aws_cdk_codebuild$.ProjectName"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "The IAM service Role of this Project. Undefined for imported Projects. "
          },
          "name": "role",
          "type": {
            "fqn": "jsii$_aws_cdk_iam$.Role",
            "optional": true
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "Allows using build projects as event rule targets."
          },
          "name": "eventRuleTarget",
          "type": {
            "fqn": "jsii$_aws_cdk_events$.EventRuleTarget"
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "docs": {
                "param": "parent the parent Construct for this Construct",
                "comment": "the parent Construct for this Construct"
              },
              "name": "parent",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "docs": {
                "param": "name the logical name of this Construct",
                "comment": "the logical name of this Construct"
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "props the properties of the referenced Project",
                "comment": "the properties of the referenced Project"
              },
              "name": "props",
              "type": {
                "fqn": "jsii$_aws_cdk_codebuild$.BuildProjectRefProps"
              }
            }
          ],
          "docs": {
            "note": "if you're importing a CodeBuild Project for use\nin a CodePipeline, make sure the existing Project\nhas permissions to access the S3 Bucket of that Pipeline -\notherwise, builds in that Pipeline will always fail.",
            "returns": "a reference to the existing Project",
            "comment": "Import a Project defined either outside the CDK,\nor in a different CDK Stack\n(and exported using the {@link export} method)."
          },
          "name": "import",
          "static": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_codebuild$.BuildProjectRef"
          }
        },
        {
          "docs": {
            "comment": "Export this Project. Allows referencing this Project in a different CDK Stack."
          },
          "name": "export",
          "returns": {
            "fqn": "jsii$_aws_cdk_codebuild$.BuildProjectRefProps"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
                "optional": true
              }
            }
          ],
          "docs": {
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/sample-build-notifications.html",
            "comment": "Defines a CloudWatch event rule triggered when the build project state\nchanges. You can filter specific build status events using an event\npattern filter on the `build-status` detail field:\n\n      const rule = project.onStateChange('OnBuildStarted', target);\n      rule.addEventPattern({\n          detail: {\n              'build-status': [\n                  \"IN_PROGRESS\",\n                  \"SUCCEEDED\",\n                  \"FAILED\",\n                  \"STOPPED\"\n              ]\n          }\n      });\n\nYou can also use the methods `onBuildFailed` and `onBuildSucceeded` to define rules for\nthese specific state changes."
          },
          "name": "onStateChange",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
                "optional": true
              }
            }
          ],
          "docs": {
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/sample-build-notifications.html",
            "comment": "Defines a CloudWatch event rule that triggers upon phase change of this\nbuild project."
          },
          "name": "onPhaseChange",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Defines an event rule which triggers when a build starts."
          },
          "name": "onBuildStarted",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Defines an event rule which triggers when a build fails."
          },
          "name": "onBuildFailed",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Defines an event rule which triggers when a build completes successfully."
          },
          "name": "onBuildSucceeded",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        }
      ],
      "interfaces": [
        {
          "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget"
        }
      ],
      "fqn": "jsii$_aws_cdk_codebuild$.BuildProjectRef",
      "module": "jsii$_aws_cdk_codebuild$",
      "namespace": "jsii$_aws_cdk_codebuild$",
      "name": "BuildProjectRef",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "abstract": true,
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codebuild$.BuildProjectProps": {
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "The source of the build."
          },
          "name": "source",
          "type": {
            "fqn": "jsii$_aws_cdk_codebuild$.BuildSource"
          }
        },
        {
          "docs": {
            "comment": "A description of the project. Use the description to identify the purpose\nof the project."
          },
          "name": "description",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec-ref-example",
            "comment": "Filename or contents of buildspec in JSON format."
          },
          "name": "buildSpec",
          "type": {
            "primitive": "json",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Service Role to assume while running the build.\nIf not specified, a role will be created."
          },
          "name": "role",
          "type": {
            "fqn": "jsii$_aws_cdk_iam$.Role",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Encryption key to use to read and write artifacts\nIf not specified, a role will be created."
          },
          "name": "encryptionKey",
          "type": {
            "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyRef",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Bucket to store cached source artifacts\nIf not specified, source artifacts will not be cached."
          },
          "name": "cacheBucket",
          "type": {
            "fqn": "jsii$_aws_cdk_s3$.BucketRef",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Subdirectory to store cached artifacts"
          },
          "name": "cacheDir",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Build environment to use for the build."
          },
          "name": "environment",
          "type": {
            "fqn": "jsii$_aws_cdk_codebuild$.BuildEnvironment",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Indicates whether AWS CodeBuild generates a publicly accessible URL for\nyour project's build badge. For more information, see Build Badges Sample\nin the AWS CodeBuild User Guide."
          },
          "name": "badge",
          "type": {
            "primitive": "boolean",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The number of minutes after which AWS CodeBuild stops the build if it's\nnot complete. For valid values, see the timeoutInMinutes field in the AWS\nCodeBuild User Guide."
          },
          "name": "timeout",
          "type": {
            "primitive": "number",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "NoBuildArtifacts",
            "comment": "Defines where build artifacts will be stored.\nCould be: PipelineBuildArtifacts, NoBuildArtifacts and S3BucketBuildArtifacts."
          },
          "name": "artifacts",
          "type": {
            "fqn": "jsii$_aws_cdk_codebuild$.BuildArtifacts",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Additional environment variables to add to the build environment."
          },
          "name": "environmentVariables",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_codebuild$.BuildEnvironmentVariable"
              },
              "kind": "map"
            },
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codebuild$.BuildProjectProps",
      "module": "jsii$_aws_cdk_codebuild$",
      "namespace": "jsii$_aws_cdk_codebuild$",
      "name": "BuildProjectProps",
      "datatype": true
    },
    "jsii$_aws_cdk_codebuild$.BuildProject": {
      "docs": {
        "comment": "A CodeBuild project that is completely driven\nfrom CodePipeline (does not hot have its own input or output)"
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The IAM role for this project."
          },
          "name": "role",
          "type": {
            "fqn": "jsii$_aws_cdk_iam$.Role"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The ARN of the project."
          },
          "name": "projectArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.codebuild.ProjectArn"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The name of the project."
          },
          "name": "projectName",
          "type": {
            "fqn": "jsii$_aws_cdk_codebuild$.ProjectName"
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "docs": {
                "param": "statement The permissions statement to add",
                "comment": "The permissions statement to add"
              },
              "name": "statement",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              }
            }
          ],
          "docs": {
            "comment": "Add a permission only if there's a policy attached."
          },
          "name": "addToRolePolicy"
        }
      ],
      "fqn": "jsii$_aws_cdk_codebuild$.BuildProject",
      "module": "jsii$_aws_cdk_codebuild$",
      "namespace": "jsii$_aws_cdk_codebuild$",
      "name": "BuildProject",
      "base": {
        "fqn": "jsii$_aws_cdk_codebuild$.BuildProjectRef"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_codebuild$.BuildProjectProps"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codebuild$.BuildEnvironment": {
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "default": "LINUX_CONTAINER",
            "comment": "The type of build environment. The only allowed value is LINUX_CONTAINER."
          },
          "name": "type",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html",
            "default": "aws/codebuild/ubuntu-base:14.04",
            "comment": "The Docker image identifier that the build environment uses."
          },
          "name": "image",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "ComputeType.Small",
            "comment": "The type of compute to use for this build. See the\nComputeType enum for options."
          },
          "name": "computeType",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "false",
            "comment": "Indicates how the project builds Docker images. Specify true to enable\nrunning the Docker daemon inside a Docker container. This value must be\nset to true only if this build project will be used to build Docker\nimages, and the specified build environment image is not one provided by\nAWS CodeBuild with Docker support. Otherwise, all associated builds that\nattempt to interact with the Docker daemon will fail."
          },
          "name": "priviledged",
          "type": {
            "primitive": "boolean",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The environment variables that your builds can use."
          },
          "name": "environmentVariables",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_codebuild$.BuildEnvironmentVariable"
              },
              "kind": "map"
            },
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codebuild$.BuildEnvironment",
      "module": "jsii$_aws_cdk_codebuild$",
      "namespace": "jsii$_aws_cdk_codebuild$",
      "name": "BuildEnvironment",
      "datatype": true
    },
    "jsii$_aws_cdk_codebuild$.BuildEnvironmentVariable": {
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "default": "PlainText",
            "comment": "The type of environment variable."
          },
          "name": "type",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The value of the environment variable (or the name of the parameter in\nthe SSM parameter store.)"
          },
          "name": "value",
          "type": {
            "primitive": "any"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codebuild$.BuildEnvironmentVariable",
      "module": "jsii$_aws_cdk_codebuild$",
      "namespace": "jsii$_aws_cdk_codebuild$",
      "name": "BuildEnvironmentVariable",
      "datatype": true
    },
    "jsii$_aws_cdk_codebuild$.BuildEnvironmentVariableType": {
      "kind": "enum",
      "members": [
        {
          "name": "PlainText"
        },
        {
          "name": "ParameterStore"
        }
      ],
      "fqn": "jsii$_aws_cdk_codebuild$.BuildEnvironmentVariableType",
      "module": "jsii$_aws_cdk_codebuild$",
      "namespace": "jsii$_aws_cdk_codebuild$",
      "name": "BuildEnvironmentVariableType"
    },
    "jsii$_aws_cdk_codebuild$.ComputeType": {
      "docs": {
        "comment": "Build machine compute type."
      },
      "kind": "enum",
      "members": [
        {
          "name": "Small"
        },
        {
          "name": "Medium"
        },
        {
          "name": "Large"
        }
      ],
      "fqn": "jsii$_aws_cdk_codebuild$.ComputeType",
      "module": "jsii$_aws_cdk_codebuild$",
      "namespace": "jsii$_aws_cdk_codebuild$",
      "name": "ComputeType"
    },
    "jsii$_aws_cdk_codebuild$.ProjectName": {
      "kind": "class",
      "fqn": "jsii$_aws_cdk_codebuild$.ProjectName",
      "module": "jsii$_aws_cdk_codebuild$",
      "namespace": "jsii$_aws_cdk_codebuild$",
      "name": "ProjectName",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codebuild$.BuildSource": {
      "docs": {
        "comment": "Source Provider definition for a CodeBuild project\nTODO: Abstract class should be an interface"
      },
      "kind": "class",
      "methods": [
        {
          "parameters": [
            {
              "name": "_project",
              "type": {
                "fqn": "jsii$_aws_cdk_codebuild$.BuildProject"
              }
            }
          ],
          "docs": {
            "comment": "Called by the project when the source is added so that the source can perform\nbinding operations on the source. For example, it can grant permissions to the\ncode build project to read from the S3 bucket."
          },
          "name": "bind"
        },
        {
          "name": "toSourceJSON",
          "abstract": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_resources$.codebuild.ProjectResource.SourceProperty"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codebuild$.BuildSource",
      "module": "jsii$_aws_cdk_codebuild$",
      "namespace": "jsii$_aws_cdk_codebuild$",
      "name": "BuildSource",
      "abstract": true,
      "initializer": {
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codebuild$.CodeCommitSource": {
      "docs": {
        "comment": "CodeCommit Source definition for a CodeBuild project"
      },
      "kind": "class",
      "methods": [
        {
          "parameters": [
            {
              "name": "project",
              "type": {
                "fqn": "jsii$_aws_cdk_codebuild$.BuildProject"
              }
            }
          ],
          "docs": {
            "comment": "Called by the project when the source is added so that the source can perform\nbinding operations on the source. For example, it can grant permissions to the\ncode build project to read from the S3 bucket."
          },
          "name": "bind"
        },
        {
          "name": "toSourceJSON",
          "returns": {
            "fqn": "jsii$_aws_cdk_resources$.codebuild.ProjectResource.SourceProperty"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codebuild$.CodeCommitSource",
      "module": "jsii$_aws_cdk_codebuild$",
      "namespace": "jsii$_aws_cdk_codebuild$",
      "name": "CodeCommitSource",
      "base": {
        "fqn": "jsii$_aws_cdk_codebuild$.BuildSource"
      },
      "initializer": {
        "parameters": [
          {
            "name": "repo",
            "type": {
              "fqn": "jsii$_aws_cdk_codecommit$.Repository"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codebuild$.CodePipelineSource": {
      "docs": {
        "comment": "CodePipeline Source definition for a CodeBuild project"
      },
      "kind": "class",
      "methods": [
        {
          "name": "toSourceJSON",
          "returns": {
            "fqn": "jsii$_aws_cdk_resources$.codebuild.ProjectResource.SourceProperty"
          }
        },
        {
          "parameters": [
            {
              "name": "_project",
              "type": {
                "fqn": "jsii$_aws_cdk_codebuild$.BuildProject"
              }
            }
          ],
          "docs": {
            "comment": "Called by the project when the source is added so that the source can perform\nbinding operations on the source. For example, it can grant permissions to the\ncode build project to read from the S3 bucket."
          },
          "name": "bind"
        }
      ],
      "fqn": "jsii$_aws_cdk_codebuild$.CodePipelineSource",
      "module": "jsii$_aws_cdk_codebuild$",
      "namespace": "jsii$_aws_cdk_codebuild$",
      "name": "CodePipelineSource",
      "base": {
        "fqn": "jsii$_aws_cdk_codebuild$.BuildSource"
      },
      "initializer": {
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codebuild$.GitHubSource": {
      "docs": {
        "comment": "GitHub Source definition for a CodeBuild project"
      },
      "kind": "class",
      "methods": [
        {
          "name": "toSourceJSON",
          "returns": {
            "fqn": "jsii$_aws_cdk_resources$.codebuild.ProjectResource.SourceProperty"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codebuild$.GitHubSource",
      "module": "jsii$_aws_cdk_codebuild$",
      "namespace": "jsii$_aws_cdk_codebuild$",
      "name": "GitHubSource",
      "base": {
        "fqn": "jsii$_aws_cdk_codebuild$.BuildSource"
      },
      "initializer": {
        "parameters": [
          {
            "name": "httpscloneUrl",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "oauthToken",
            "type": {
              "primitive": "any"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codebuild$.GitHubEnterpriseSource": {
      "docs": {
        "comment": "GitHub Enterprice Source definition for a CodeBuild project"
      },
      "kind": "class",
      "methods": [
        {
          "name": "toSourceJSON",
          "returns": {
            "fqn": "jsii$_aws_cdk_resources$.codebuild.ProjectResource.SourceProperty"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codebuild$.GitHubEnterpriseSource",
      "module": "jsii$_aws_cdk_codebuild$",
      "namespace": "jsii$_aws_cdk_codebuild$",
      "name": "GitHubEnterpriseSource",
      "base": {
        "fqn": "jsii$_aws_cdk_codebuild$.BuildSource"
      },
      "initializer": {
        "parameters": [
          {
            "name": "cloneUrl",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codebuild$.BitBucketSource": {
      "docs": {
        "comment": "BitBucket Source definition for a CodeBuild project"
      },
      "kind": "class",
      "methods": [
        {
          "name": "toSourceJSON",
          "returns": {
            "fqn": "jsii$_aws_cdk_resources$.codebuild.ProjectResource.SourceProperty"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codebuild$.BitBucketSource",
      "module": "jsii$_aws_cdk_codebuild$",
      "namespace": "jsii$_aws_cdk_codebuild$",
      "name": "BitBucketSource",
      "base": {
        "fqn": "jsii$_aws_cdk_codebuild$.BuildSource"
      },
      "initializer": {
        "parameters": [
          {
            "name": "httpsCloneUrl",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codebuild$.S3BucketSource": {
      "docs": {
        "comment": "S3 bucket definition for a CodeBuild project."
      },
      "kind": "class",
      "methods": [
        {
          "name": "toSourceJSON",
          "returns": {
            "fqn": "jsii$_aws_cdk_resources$.codebuild.ProjectResource.SourceProperty"
          }
        },
        {
          "parameters": [
            {
              "name": "project",
              "type": {
                "fqn": "jsii$_aws_cdk_codebuild$.BuildProject"
              }
            }
          ],
          "docs": {
            "comment": "Called by the project when the source is added so that the source can perform\nbinding operations on the source. For example, it can grant permissions to the\ncode build project to read from the S3 bucket."
          },
          "name": "bind"
        }
      ],
      "fqn": "jsii$_aws_cdk_codebuild$.S3BucketSource",
      "module": "jsii$_aws_cdk_codebuild$",
      "namespace": "jsii$_aws_cdk_codebuild$",
      "name": "S3BucketSource",
      "base": {
        "fqn": "jsii$_aws_cdk_codebuild$.BuildSource"
      },
      "initializer": {
        "parameters": [
          {
            "name": "bucket",
            "type": {
              "fqn": "jsii$_aws_cdk_s3$.BucketRef"
            }
          },
          {
            "name": "path",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codebuild$.SourceType": {
      "docs": {
        "comment": "Source types for CodeBuild Project"
      },
      "kind": "enum",
      "members": [
        {
          "name": "CodeCommit"
        },
        {
          "name": "CodePipeline"
        },
        {
          "name": "GitHub"
        },
        {
          "name": "GitHubEnterPrise"
        },
        {
          "name": "BitBucket"
        },
        {
          "name": "S3"
        }
      ],
      "fqn": "jsii$_aws_cdk_codebuild$.SourceType",
      "module": "jsii$_aws_cdk_codebuild$",
      "namespace": "jsii$_aws_cdk_codebuild$",
      "name": "SourceType"
    },
    "jsii$_aws_cdk_codebuild$.BuildArtifacts": {
      "kind": "class",
      "methods": [
        {
          "name": "toArtifactsJSON",
          "abstract": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_resources$.codebuild.ProjectResource.ArtifactsProperty"
          }
        },
        {
          "parameters": [
            {
              "name": "_project",
              "type": {
                "fqn": "jsii$_aws_cdk_codebuild$.BuildProject"
              }
            }
          ],
          "name": "bind"
        }
      ],
      "fqn": "jsii$_aws_cdk_codebuild$.BuildArtifacts",
      "module": "jsii$_aws_cdk_codebuild$",
      "namespace": "jsii$_aws_cdk_codebuild$",
      "name": "BuildArtifacts",
      "abstract": true,
      "initializer": {
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codebuild$.NoBuildArtifacts": {
      "kind": "class",
      "methods": [
        {
          "name": "toArtifactsJSON",
          "returns": {
            "fqn": "jsii$_aws_cdk_resources$.codebuild.ProjectResource.ArtifactsProperty"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codebuild$.NoBuildArtifacts",
      "module": "jsii$_aws_cdk_codebuild$",
      "namespace": "jsii$_aws_cdk_codebuild$",
      "name": "NoBuildArtifacts",
      "base": {
        "fqn": "jsii$_aws_cdk_codebuild$.BuildArtifacts"
      },
      "initializer": {
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codebuild$.CodePipelineBuildArtifacts": {
      "kind": "class",
      "methods": [
        {
          "name": "toArtifactsJSON",
          "returns": {
            "fqn": "jsii$_aws_cdk_resources$.codebuild.ProjectResource.ArtifactsProperty"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codebuild$.CodePipelineBuildArtifacts",
      "module": "jsii$_aws_cdk_codebuild$",
      "namespace": "jsii$_aws_cdk_codebuild$",
      "name": "CodePipelineBuildArtifacts",
      "base": {
        "fqn": "jsii$_aws_cdk_codebuild$.BuildArtifacts"
      },
      "initializer": {
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codebuild$.S3BucketBuildArtifactsProps": {
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "The name of the output bucket."
          },
          "name": "bucket",
          "type": {
            "fqn": "jsii$_aws_cdk_s3$.BucketRef"
          }
        },
        {
          "docs": {
            "comment": "The path inside of the bucket for the build output .zip file or folder.\nIf a value is not specified, then build output will be stored at the root of the\nbucket (or under the <build-id> directory if `includeBuildId` is set to true)."
          },
          "name": "path",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The name of the build output ZIP file or folder inside the bucket.\n\nThe full S3 object key will be \"<path>/build-ID/<name>\" or\n\"<path>/<artifactsName>\" depending on whether `includeBuildId` is set to true."
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "default": "true",
            "comment": "Indicates if the build ID should be included in the path. If this is set to true,\nthen the build artifact will be stored in \"<path>/<build-id>/<name>\"."
          },
          "name": "includeBuildID",
          "type": {
            "primitive": "boolean",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "true - files will be archived",
            "comment": "If this is true, all build output will be packaged into a single .zip file.\nOtherwise, all files will be uploaded to <path>/<name>"
          },
          "name": "packageZip",
          "type": {
            "primitive": "boolean",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codebuild$.S3BucketBuildArtifactsProps",
      "module": "jsii$_aws_cdk_codebuild$",
      "namespace": "jsii$_aws_cdk_codebuild$",
      "name": "S3BucketBuildArtifactsProps",
      "datatype": true
    },
    "jsii$_aws_cdk_codebuild$.S3BucketBuildArtifacts": {
      "kind": "class",
      "methods": [
        {
          "parameters": [
            {
              "name": "project",
              "type": {
                "fqn": "jsii$_aws_cdk_codebuild$.BuildProject"
              }
            }
          ],
          "name": "bind"
        },
        {
          "name": "toArtifactsJSON",
          "returns": {
            "fqn": "jsii$_aws_cdk_resources$.codebuild.ProjectResource.ArtifactsProperty"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codebuild$.S3BucketBuildArtifacts",
      "module": "jsii$_aws_cdk_codebuild$",
      "namespace": "jsii$_aws_cdk_codebuild$",
      "name": "S3BucketBuildArtifacts",
      "base": {
        "fqn": "jsii$_aws_cdk_codebuild$.BuildArtifacts"
      },
      "initializer": {
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_codebuild$.S3BucketBuildArtifactsProps"
            }
          }
        ],
        "initializer": true
      }
    }
  },
  "nametree": {
    "jsii$_aws_cdk_codebuild$": {
      "BuildProjectRefProps": {
        "_": "jsii$_aws_cdk_codebuild$.BuildProjectRefProps"
      },
      "BuildProjectRef": {
        "_": "jsii$_aws_cdk_codebuild$.BuildProjectRef"
      },
      "BuildProjectProps": {
        "_": "jsii$_aws_cdk_codebuild$.BuildProjectProps"
      },
      "BuildProject": {
        "_": "jsii$_aws_cdk_codebuild$.BuildProject"
      },
      "BuildEnvironment": {
        "_": "jsii$_aws_cdk_codebuild$.BuildEnvironment"
      },
      "BuildEnvironmentVariable": {
        "_": "jsii$_aws_cdk_codebuild$.BuildEnvironmentVariable"
      },
      "BuildEnvironmentVariableType": {
        "_": "jsii$_aws_cdk_codebuild$.BuildEnvironmentVariableType"
      },
      "ComputeType": {
        "_": "jsii$_aws_cdk_codebuild$.ComputeType"
      },
      "ProjectName": {
        "_": "jsii$_aws_cdk_codebuild$.ProjectName"
      },
      "BuildSource": {
        "_": "jsii$_aws_cdk_codebuild$.BuildSource"
      },
      "CodeCommitSource": {
        "_": "jsii$_aws_cdk_codebuild$.CodeCommitSource"
      },
      "CodePipelineSource": {
        "_": "jsii$_aws_cdk_codebuild$.CodePipelineSource"
      },
      "GitHubSource": {
        "_": "jsii$_aws_cdk_codebuild$.GitHubSource"
      },
      "GitHubEnterpriseSource": {
        "_": "jsii$_aws_cdk_codebuild$.GitHubEnterpriseSource"
      },
      "BitBucketSource": {
        "_": "jsii$_aws_cdk_codebuild$.BitBucketSource"
      },
      "S3BucketSource": {
        "_": "jsii$_aws_cdk_codebuild$.S3BucketSource"
      },
      "SourceType": {
        "_": "jsii$_aws_cdk_codebuild$.SourceType"
      },
      "BuildArtifacts": {
        "_": "jsii$_aws_cdk_codebuild$.BuildArtifacts"
      },
      "NoBuildArtifacts": {
        "_": "jsii$_aws_cdk_codebuild$.NoBuildArtifacts"
      },
      "CodePipelineBuildArtifacts": {
        "_": "jsii$_aws_cdk_codebuild$.CodePipelineBuildArtifacts"
      },
      "S3BucketBuildArtifactsProps": {
        "_": "jsii$_aws_cdk_codebuild$.S3BucketBuildArtifactsProps"
      },
      "S3BucketBuildArtifacts": {
        "_": "jsii$_aws_cdk_codebuild$.S3BucketBuildArtifacts"
      }
    }
  },
  "typecount": 22,
  "externalTypes": {
    "jsii$_aws_cdk_core$.Construct": {
      "docs": {
        "comment": "Represents the building block of the construct graph.\nWhen a construct is created, it is always added as a child"
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "Returns the parent of this node or undefined if this is a root node."
          },
          "name": "parent",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.Construct",
            "optional": true
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The name of this construct"
          },
          "name": "name",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "All direct children of this construct."
          },
          "name": "children",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              },
              "kind": "array"
            }
          },
          "immutable": true
        },
        {
          "docs": {
            "returns": "/-separated path of this Construct.",
            "comment": "Returns the path of all constructs from root to this construct, in string form."
          },
          "name": "path",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "An array of metadata objects associated with this construct.\nThis can be used, for example, to implement support for deprecation notices, source mapping, etc."
          },
          "name": "metadata",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.MetadataEntry"
              },
              "kind": "array"
            }
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "docs": {
            "comment": "Returns a string representation of this construct."
          },
          "name": "toString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "parameters": [
            {
              "name": "depth",
              "type": {
                "primitive": "number",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Returns a string with a tree representation of this construct and it's children."
          },
          "name": "toTreeString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "a child by path or undefined if not found.",
            "comment": "Return a descendant by path, or undefined"
          },
          "name": "tryFindChild",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct",
            "optional": true
          }
        },
        {
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "Child with the given path.",
            "comment": "Return a descendant by path\n\nThrows an exception if the descendant is not found."
          },
          "name": "findChild",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "key The context key",
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "value The context value",
                "comment": "The context value"
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "This can be used to set contextual values.\nContext must be set before any children are added, since children may consult context info during construction.\nIf the key already exists, it will be overridden."
          },
          "name": "setContext"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "key The context key",
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "The context value or undefined",
            "comment": "Retrieves a value from tree context.\n\nContext is usually initialized at the root, but can be overridden at any point in the tree."
          },
          "name": "getContext",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Retrieve a value from tree-global context\n\nIt is an error if the context object is not available."
          },
          "name": "requireContext",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "type a string denoting the type of metadata",
                "comment": "a string denoting the type of metadata"
              },
              "name": "type",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "data the value of the metadata (can be a Token). If null/undefined, metadata will not be added.",
                "comment": "the value of the metadata (can be a Token). If null/undefined, metadata will not be added."
              },
              "name": "data",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "param": "from a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)",
                "comment": "a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)"
              },
              "name": "from",
              "type": {
                "primitive": "any",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Adds a metadata entry to this construct.\nEntries are arbitrary values and will also include a stack trace to allow tracing back to\nthe code location for when the entry was added. It can be used, for example, to include source\nmapping in CloudFormation templates to improve diagnostics."
          },
          "name": "addMetadata",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "message The warning message.",
                "comment": "The warning message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Adds a { warning: <message> } metadata entry to this construct."
          },
          "name": "addWarning",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "docs": {
            "returns": "An array of validation error messages, or an empty array if there the construct is valid.",
            "comment": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis."
          },
          "name": "validate",
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "returns": "A list of validation errors. If the list is empty, all constructs are valid.",
            "comment": "Invokes 'validate' on all child constructs and then on this construct (depth-first)."
          },
          "name": "validateTree",
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.ValidationError"
              },
              "kind": "array"
            }
          }
        },
        {
          "parameters": [
            {
              "name": "upTo",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Return the ancestors (including self) of this Construct up until and excluding the indicated component"
          },
          "name": "ancestors",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              },
              "kind": "array"
            }
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "props The props bag.",
                "comment": "The props bag."
              },
              "name": "props",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "param": "name The name of the required property.",
                "comment": "The name of the required property."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Throws if the `props` bag doesn't include the property `name`.\nIn the future we can add some type-checking here, maybe even auto-generate during compilation."
          },
          "name": "required",
          "protected": true,
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "child The child construct",
                "comment": "The child construct"
              },
              "name": "child",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "name": "childName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "The resolved path part name of the child",
            "comment": "Adds a child construct to this node."
          },
          "name": "addChild",
          "protected": true
        },
        {
          "docs": {
            "comment": "Locks this construct from allowing more children to be added. After this\ncall, no more children can be added to this construct or to any children."
          },
          "name": "lock",
          "protected": true
        },
        {
          "docs": {
            "comment": "Unlocks this costruct and allows mutations (adding children)."
          },
          "name": "unlock",
          "protected": true
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.Construct",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "Construct",
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_events$.IEventRuleTarget": {
      "docs": {
        "comment": "An abstract target for EventRules."
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "Returns the rule target specification.\nNOTE: Do not use the various `inputXxx` options. They can be set in a call to `addTarget`."
          },
          "name": "eventRuleTarget",
          "type": {
            "fqn": "jsii$_aws_cdk_events$.EventRuleTarget"
          },
          "immutable": true
        }
      ],
      "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
      "module": "jsii$_aws_cdk_events$",
      "namespace": "jsii$_aws_cdk_events$",
      "name": "IEventRuleTarget",
      "datatype": true
    },
    "jsii$_aws_cdk_resources$.codebuild.ProjectArn": {
      "kind": "class",
      "fqn": "jsii$_aws_cdk_resources$.codebuild.ProjectArn",
      "module": "jsii$_aws_cdk_resources$",
      "namespace": "jsii$_aws_cdk_resources$.codebuild",
      "name": "ProjectArn",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Arn"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_iam$.Role": {
      "docs": {
        "comment": "IAM Role\n\nDefines an IAM role. The role is created with an assume policy document associated with\nthe specified AWS service principal defined in `serviceAssumeRole`."
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The assume role policy document associated with this role."
          },
          "name": "assumeRolePolicy",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.PolicyDocument",
            "optional": true
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Returns the ARN of this role."
          },
          "name": "roleArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.iam.RoleArn"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Returns the name of the role."
          },
          "name": "roleName",
          "type": {
            "fqn": "jsii$_aws_cdk_iam$.RoleName"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Returns the ARN of this role."
          },
          "name": "principal",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.PolicyPrincipal"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Returns the role."
          },
          "name": "dependencyElements",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.IDependable"
              },
              "kind": "array"
            }
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              }
            }
          ],
          "docs": {
            "comment": "Adds a permission to the role's default policy document.\nIf there is no default policy attached to this role, it will be created."
          },
          "name": "addToPolicy"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "arn The ARN of the managed policy to attach.",
                "comment": "The ARN of the managed policy to attach."
              },
              "name": "arn",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "Attaches a managed policy to this role."
          },
          "name": "attachManagedPolicy"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "policy The policy to attach",
                "comment": "The policy to attach"
              },
              "name": "policy",
              "type": {
                "fqn": "jsii$_aws_cdk_iam$.Policy"
              }
            }
          ],
          "docs": {
            "comment": "Attaches a policy to this role."
          },
          "name": "attachInlinePolicy"
        }
      ],
      "interfaces": [
        {
          "fqn": "jsii$_aws_cdk_iam$.IIdentityResource"
        },
        {
          "fqn": "jsii$_aws_cdk_core$.IDependable"
        }
      ],
      "fqn": "jsii$_aws_cdk_iam$.Role",
      "module": "jsii$_aws_cdk_iam$",
      "namespace": "jsii$_aws_cdk_iam$",
      "name": "Role",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_iam$.RoleProps"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_events$.EventRule": {
      "docs": {
        "comment": "Defines a CloudWatch Event Rule in this stack."
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The value of the event rule Amazon Resource Name (ARN), such as\narn:aws:events:us-east-2:123456789012:rule/example."
          },
          "name": "ruleArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.events.RuleArn"
          }
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "inputOptions",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.TargetInputTemplate",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Adds a target to the rule. The abstract class RuleTarget can be extended to define new\ntargets.\n\nNo-op if target is undefined."
          },
          "name": "addTarget"
        },
        {
          "parameters": [
            {
              "name": "eventPattern",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventPattern",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Adds an event pattern filter to this rule. If a pattern was already specified,\nthese values are merged into the existing pattern.\n\nFor example, if the rule already contains the pattern:\n\n      {\n          \"resources\": [ \"r1\" ],\n          \"detail\": {\n              \"hello\": [ 1 ]\n          }\n      }\n\nAnd `addEventPattern` is called with the pattern:\n\n      {\n          \"resources\": [ \"r2\" ],\n          \"detail\": {\n              \"foo\": [ \"bar\" ]\n          }\n      }\n\nThe resulting event pattern will be:\n\n      {\n          \"resources\": [ \"r1\", \"r2\" ],\n          \"detail\": {\n              \"hello\": [ 1 ],\n              \"foo\": [ \"bar\" ]\n          }\n      }"
          },
          "name": "addEventPattern"
        },
        {
          "docs": {
            "comment": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis."
          },
          "name": "validate",
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_events$.EventRule",
      "module": "jsii$_aws_cdk_events$",
      "namespace": "jsii$_aws_cdk_events$",
      "name": "EventRule",
      "base": {
        "fqn": "jsii$_aws_cdk_events$.EventRuleRef"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
              "optional": true
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_events$.EventRuleProps": {
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "A description of the rule's purpose."
          },
          "name": "description",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "A name for the rule. If you don't specify a name, AWS CloudFormation\ngenerates a unique physical ID and uses that ID for the rule name. For\nmore information, see Name Type."
          },
          "name": "ruleName",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "Rule is enabled",
            "comment": "Indicates whether the rule is enabled."
          },
          "name": "enabled",
          "type": {
            "primitive": "boolean",
            "optional": true
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\n\nYou must specify this property, the `eventPattern` property, or both.",
            "comment": "The schedule or rate (frequency) that determines when CloudWatch Events\nruns the rule. For more information, see Schedule Expression Syntax for\nRules in the Amazon CloudWatch User Guide."
          },
          "name": "scheduleExpression",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CloudWatchEventsandEventPatterns.html\n\nYou must specify this property (either via props or via\n`addEventPattern`), the `scheduleExpression` property, or both. The\nmethod `addEventPattern` can be used to add filter values to the event\npattern.",
            "comment": "Describes which events CloudWatch Events routes to the specified target.\nThese routed events are matched events. For more information, see Events\nand Event Patterns in the Amazon CloudWatch User Guide."
          },
          "name": "eventPattern",
          "type": {
            "fqn": "jsii$_aws_cdk_events$.EventPattern",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Targets to invoke when this rule matches an event.\n\nInput will be the full matched event. If you wish to specify custom\ntarget input, use `addTarget(target[, inputOptions])`."
          },
          "name": "targets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget"
              },
              "kind": "array"
            },
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
      "module": "jsii$_aws_cdk_events$",
      "namespace": "jsii$_aws_cdk_events$",
      "name": "EventRuleProps",
      "datatype": true
    },
    "jsii$_aws_cdk_events$.EventRuleTarget": {
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "A unique, user-defined identifier for the target. Acceptable values\ninclude alphanumeric characters, periods (.), hyphens (-), and\nunderscores (_)."
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The Amazon Resource Name (ARN) of the target."
          },
          "name": "arn",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.Arn"
          }
        },
        {
          "docs": {
            "comment": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management\n(IAM) role to use for this target when the rule is triggered. If one rule\ntriggers multiple targets, you can use a different IAM role for each\ntarget."
          },
          "name": "roleArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.iam.RoleArn",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The Amazon ECS task definition and task count to use, if the event target\nis an Amazon ECS task."
          },
          "name": "ecsParameters",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.events.RuleResource.EcsParametersProperty",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Settings that control shard assignment, when the target is a Kinesis\nstream. If you don't include this parameter, eventId is used as the\npartition key."
          },
          "name": "kinesisParameters",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.events.RuleResource.KinesisParametersProperty",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Parameters used when the rule invokes Amazon EC2 Systems Manager Run\nCommand."
          },
          "name": "runCommandParameters",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.events.RuleResource.RunCommandParametersProperty",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_events$.EventRuleTarget",
      "module": "jsii$_aws_cdk_events$",
      "namespace": "jsii$_aws_cdk_events$",
      "name": "EventRuleTarget",
      "datatype": true
    },
    "jsii$_aws_cdk_kms$.EncryptionKeyRef": {
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of the key."
          },
          "name": "keyArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.kms.KeyArn"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "Optional policy document that represents the resource policy of this key.\n\nIf specified, addToResourcePolicy can be used to edit this policy.\nOtherwise this method will no-op."
          },
          "name": "policy",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.PolicyDocument",
            "optional": true
          },
          "immutable": true,
          "protected": true,
          "abstract": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "docs": {
                "param": "parent The parent construct.",
                "comment": "The parent construct."
              },
              "name": "parent",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "docs": {
                "param": "name The name of the construct.",
                "comment": "The name of the construct."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "props The key reference.",
                "comment": "The key reference."
              },
              "name": "props",
              "type": {
                "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyRefProps"
              }
            }
          ],
          "docs": {
            "comment": "Defines an imported encryption key.\n\n`ref` can be obtained either via a call to `key.export()` or using\nliterals.\n\nFor example:\n\n     const keyRefProps = key.export();\n     const keyRef1 = EncryptionKeyRef.import(this, 'MyImportedKey1', keyRefProps);\n     const keyRef2 = EncryptionKeyRef.import(this, 'MyImportedKey2', {\n         keyArn: new KeyArn('arn:aws:kms:...')\n     });"
          },
          "name": "import",
          "static": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyRef"
          }
        },
        {
          "parameters": [
            {
              "name": "alias",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Defines a new alias for the key."
          },
          "name": "addAlias",
          "returns": {
            "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyAlias"
          }
        },
        {
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              }
            }
          ],
          "docs": {
            "comment": "Adds a statement to the KMS key resource policy."
          },
          "name": "addToResourcePolicy"
        },
        {
          "docs": {
            "returns": "a key ref which can be used in a call to `EncryptionKey.import(ref)`.",
            "comment": "Exports this key from the current stack."
          },
          "name": "export",
          "returns": {
            "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyRefProps"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyRef",
      "module": "jsii$_aws_cdk_kms$",
      "namespace": "jsii$_aws_cdk_kms$",
      "name": "EncryptionKeyRef",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "abstract": true,
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_s3$.BucketRef": {
      "docs": {
        "comment": "Represents an S3 Bucket.\n\nBuckets can be either defined within this stack:\n\n     new Bucket(this, 'MyBucket', { props });\n\nOr imported from an existing bucket:\n\n     BucketRef.import(this, 'MyImportedBucket', { bucketArn: ... });\n\nYou can also export a bucket and import it into another stack:\n\n     const ref = myBucket.export();\n     BucketRef.import(this, 'MyImportedBucket', ref);"
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of the bucket."
          },
          "name": "bucketArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.s3.BucketArn"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "The name of the bucket."
          },
          "name": "bucketName",
          "type": {
            "fqn": "jsii$_aws_cdk_s3$.BucketName"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "Optional KMS encryption key associated with this bucket."
          },
          "name": "encryptionKey",
          "type": {
            "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyRef",
            "optional": true
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "The resource policy assoicated with this bucket.\n\nIf `autoCreatePolicy` is true, a `BucketPolicy` will be created upon the\nfirst call to addToResourcePolicy(s)."
          },
          "name": "policy",
          "type": {
            "fqn": "jsii$_aws_cdk_s3$.BucketPolicy",
            "optional": true
          },
          "protected": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "Indicates if a bucket resource policy should automatically created upon\nthe first call to `addToResourcePolicy`."
          },
          "name": "autoCreatePolicy",
          "type": {
            "primitive": "boolean"
          },
          "protected": true,
          "abstract": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "docs": {
                "param": "parent The parent creating construct (usually `this`).",
                "comment": "The parent creating construct (usually `this`)."
              },
              "name": "parent",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "docs": {
                "param": "name The construct's name.",
                "comment": "The construct's name."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "jsii$_aws_cdk_s3$.BucketRefProps"
              }
            }
          ],
          "docs": {
            "comment": "Creates a Bucket construct that represents an external bucket."
          },
          "name": "import",
          "static": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_s3$.BucketRef"
          }
        },
        {
          "docs": {
            "comment": "Exports this bucket from the stack."
          },
          "name": "export",
          "returns": {
            "fqn": "jsii$_aws_cdk_s3$.BucketRefProps"
          }
        },
        {
          "parameters": [
            {
              "name": "permission",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              }
            }
          ],
          "docs": {
            "comment": "Adds a statement to the resource policy for a principal (i.e.\naccount/role/service) to perform actions on this bucket and/or it's\ncontents. Use `bucketArn` and `arnForObjects(keys)` to obtain ARNs for\nthis bucket or objects."
          },
          "name": "addToResourcePolicy"
        },
        {
          "parameters": [
            {
              "name": "keyPattern",
              "type": {
                "primitive": "any"
              },
              "variadic": true
            }
          ],
          "docs": {
            "comment": "Returns an ARN that represents all objects within the bucket that match\nthe key pattern specified. To represent all keys, specify ``\"*\"``.\n\nIf you specify multiple components for keyPattern, they will be concatenated::\n\n     arnForObjects('home/', team, '/', user, '/*')"
          },
          "name": "arnForObjects",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Arn"
          },
          "variadic": true
        },
        {
          "parameters": [
            {
              "name": "identity",
              "type": {
                "fqn": "jsii$_aws_cdk_iam$.IIdentityResource",
                "optional": true
              }
            },
            {
              "name": "objectsKeyPattern",
              "type": {
                "primitive": "string",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Temporary API for granting read permissions for this bucket and it's\ncontents to an IAM principal (Role/Group/User).\n\nIf an encryption key is used, permission to ues the key to decrypt the\ncontents of the bucket will also be granted."
          },
          "name": "grantRead"
        },
        {
          "parameters": [
            {
              "name": "identity",
              "type": {
                "fqn": "jsii$_aws_cdk_iam$.IIdentityResource",
                "optional": true
              }
            },
            {
              "name": "objectsKeyPattern",
              "type": {
                "primitive": "string",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Grants read/write permissions for this bucket and it's contents to an IAM\nprincipal (Role/Group/User).\n\nIf an encryption key is used, permission to use the key for\nencrypt/decrypt will also be granted."
          },
          "name": "grantReadWrite"
        }
      ],
      "fqn": "jsii$_aws_cdk_s3$.BucketRef",
      "module": "jsii$_aws_cdk_s3$",
      "namespace": "jsii$_aws_cdk_s3$",
      "name": "BucketRef",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "abstract": true,
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_core$.PolicyStatement": {
      "docs": {
        "comment": "Represents a statement in an IAM policy document."
      },
      "subtypes": [
        "jsii$_aws_cdk_core$.PolicyStatement.Effect"
      ],
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "Indicates if this permission has a \"Principal\" section."
          },
          "name": "hasPrincipal",
          "type": {
            "primitive": "boolean"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Indicates if this permission as at least one resource associated with it."
          },
          "name": "hasResource",
          "type": {
            "primitive": "boolean"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Indicates if this permission has only a ``\"*\"`` resource associated with it."
          },
          "name": "isOnlyStarResource",
          "type": {
            "primitive": "boolean"
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "name": "action",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "name": "addAction",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "actions",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "name": "addActions",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          },
          "variadic": true
        },
        {
          "parameters": [
            {
              "name": "principal",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyPrincipal"
              }
            }
          ],
          "name": "addPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "arn",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "addAwsPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "accountId",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "addAwsAccountPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "service",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "addServicePrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "federated",
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "conditions",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "name": "addFederatedPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "name": "addAccountRootPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "resource",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "addResource",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Adds a ``\"*\"`` resource to this statement."
          },
          "name": "addAllResources",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "resources",
              "type": {
                "primitive": "any"
              },
              "variadic": true
            }
          ],
          "name": "addResources",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          },
          "variadic": true
        },
        {
          "parameters": [
            {
              "name": "sid",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "describe",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Sets the permission effect to deny access to resources."
          },
          "name": "allow",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Sets the permission effect to allow access to resources."
          },
          "name": "deny",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "Add a condition to the Policy"
          },
          "name": "addCondition",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "conditions",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "docs": {
            "comment": "Add multiple conditions to the Policy"
          },
          "name": "addConditions",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "deprecated": "For backwards compatibility. Use addCondition() instead.",
            "comment": "Add a condition to the Policy."
          },
          "name": "setCondition",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "accountId",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "limitToAccount",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "name": "resolve",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "name": "toJson",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.PolicyStatement",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "PolicyStatement",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "effect",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.PolicyStatement.Effect",
              "optional": true
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_core$.Token": {
      "docs": {
        "comment": "Represents a lazy-evaluated value. Can be used to delay evaluation of a certain value\nin case, for example, that it requires some context or late-bound data."
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "returns": "The resolved value for this token."
          },
          "name": "resolve",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.Token",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "Token",
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_resources$.codebuild.ProjectResource.SourceProperty": {
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-source.html"
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-source.html#cfn-codebuild-project-source-type",
            "comment": "ProjectResource.SourceProperty.Type"
          },
          "name": "type",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "jsii$_aws_cdk_core$.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-source.html#cfn-codebuild-project-source-auth",
            "comment": "ProjectResource.SourceProperty.Auth"
          },
          "name": "auth",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "jsii$_aws_cdk_core$.Token"
                },
                {
                  "fqn": "jsii$_aws_cdk_resources$.codebuild.ProjectResource.SourceAuthProperty"
                }
              ]
            },
            "optional": true
          }
        },
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-source.html#cfn-codebuild-project-source-buildspec",
            "comment": "ProjectResource.SourceProperty.BuildSpec"
          },
          "name": "buildSpec",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "jsii$_aws_cdk_core$.Token"
                }
              ]
            },
            "optional": true
          }
        },
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-source.html#cfn-codebuild-project-source-gitclonedepth",
            "comment": "ProjectResource.SourceProperty.GitCloneDepth"
          },
          "name": "gitCloneDepth",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "jsii$_aws_cdk_core$.Token"
                }
              ]
            },
            "optional": true
          }
        },
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-source.html#cfn-codebuild-project-source-insecuressl",
            "comment": "ProjectResource.SourceProperty.InsecureSsl"
          },
          "name": "insecureSsl",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "jsii$_aws_cdk_core$.Token"
                }
              ]
            },
            "optional": true
          }
        },
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-source.html#cfn-codebuild-project-source-location",
            "comment": "ProjectResource.SourceProperty.Location"
          },
          "name": "location",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "jsii$_aws_cdk_core$.Token"
                }
              ]
            },
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_resources$.codebuild.ProjectResource.SourceProperty",
      "module": "jsii$_aws_cdk_resources$",
      "namespace": "jsii$_aws_cdk_resources$.codebuild.ProjectResource",
      "name": "SourceProperty",
      "datatype": true,
      "parenttype": "jsii$_aws_cdk_resources$.codebuild.ProjectResource"
    },
    "jsii$_aws_cdk_codecommit$.Repository": {
      "docs": {
        "comment": "Provides a CodeCommit Repository"
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of this Repository. "
          },
          "name": "repositoryArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.codecommit.RepositoryArn"
          },
          "immutable": true
        },
        {
          "name": "repositoryCloneUrlHttp",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.codecommit.RepositoryCloneUrlHttp"
          },
          "immutable": true
        },
        {
          "name": "repositoryCloneUrlSsh",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.codecommit.RepositoryCloneUrlSsh"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The human-visible name of this Repository. "
          },
          "name": "repositoryName",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.codecommit.RepositoryName"
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "docs": {
                "param": "arn Arn of the resource that repository events will notify",
                "comment": "Arn of the resource that repository events will notify"
              },
              "name": "arn",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "options Trigger options to run actions",
                "comment": "Trigger options to run actions"
              },
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_codecommit$.RepositoryTriggerOptions",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Create a trigger to notify another service to run actions on repository events."
          },
          "name": "notify",
          "returns": {
            "fqn": "jsii$_aws_cdk_codecommit$.Repository"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codecommit$.Repository",
      "module": "jsii$_aws_cdk_codecommit$",
      "namespace": "jsii$_aws_cdk_codecommit$",
      "name": "Repository",
      "base": {
        "fqn": "jsii$_aws_cdk_codecommit$.RepositoryRef"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_codecommit$.RepositoryProps"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_resources$.codebuild.ProjectResource.ArtifactsProperty": {
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-artifacts.html"
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-artifacts.html#cfn-codebuild-project-artifacts-path",
            "comment": "ProjectResource.ArtifactsProperty.Path"
          },
          "name": "path",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "jsii$_aws_cdk_core$.Token"
                }
              ]
            },
            "optional": true
          }
        },
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-artifacts.html#cfn-codebuild-project-artifacts-type",
            "comment": "ProjectResource.ArtifactsProperty.Type"
          },
          "name": "type",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "jsii$_aws_cdk_core$.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-artifacts.html#cfn-codebuild-project-artifacts-packaging",
            "comment": "ProjectResource.ArtifactsProperty.Packaging"
          },
          "name": "packaging",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "jsii$_aws_cdk_core$.Token"
                }
              ]
            },
            "optional": true
          }
        },
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-artifacts.html#cfn-codebuild-project-artifacts-location",
            "comment": "ProjectResource.ArtifactsProperty.Location"
          },
          "name": "location",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "jsii$_aws_cdk_core$.Token"
                }
              ]
            },
            "optional": true
          }
        },
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-artifacts.html#cfn-codebuild-project-artifacts-name",
            "comment": "ProjectResource.ArtifactsProperty.Name"
          },
          "name": "name",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "jsii$_aws_cdk_core$.Token"
                }
              ]
            },
            "optional": true
          }
        },
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-artifacts.html#cfn-codebuild-project-artifacts-namespacetype",
            "comment": "ProjectResource.ArtifactsProperty.NamespaceType"
          },
          "name": "namespaceType",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "jsii$_aws_cdk_core$.Token"
                }
              ]
            },
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_resources$.codebuild.ProjectResource.ArtifactsProperty",
      "module": "jsii$_aws_cdk_resources$",
      "namespace": "jsii$_aws_cdk_resources$.codebuild.ProjectResource",
      "name": "ArtifactsProperty",
      "datatype": true,
      "parenttype": "jsii$_aws_cdk_resources$.codebuild.ProjectResource"
    }
  },
  "name": "jsii$_aws_cdk_codebuild$",
  "package": "@aws-cdk/codebuild",
  "version": "0.7.2-beta",
  "dependencies": {
    "jsii$_aws_cdk_codecommit$": {
      "package": "@aws-cdk/codecommit",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_core$": {
      "package": "@aws-cdk/core",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_events$": {
      "package": "@aws-cdk/events",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_iam$": {
      "package": "@aws-cdk/iam",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_kms$": {
      "package": "@aws-cdk/kms",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_resources$": {
      "package": "@aws-cdk/resources",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_s3$": {
      "package": "@aws-cdk/s3",
      "version": "0.7.2-beta"
    }
  },
  "names": {
    "java": "com.amazonaws.cdk.codebuild",
    "dotnet": "Aws.Cdk.CodeBuild",
    "js": "@aws-cdk/codebuild"
  },
  "nativenames": {
    "jsii$_aws_cdk_codecommit$": {
      "java": "com.amazonaws.cdk.codecommit",
      "dotnet": "Aws.Cdk.CodeCommit",
      "js": "@aws-cdk/codecommit"
    },
    "jsii$_aws_cdk_core$": {
      "java": "com.amazonaws.cdk",
      "dotnet": "Aws.Cdk",
      "js": "@aws-cdk/core"
    },
    "jsii$_aws_cdk_events$": {
      "java": "com.amazonaws.cdk.events",
      "dotnet": "Aws.Cdk.Events",
      "js": "@aws-cdk/events"
    },
    "jsii$_aws_cdk_iam$": {
      "java": "com.amazonaws.cdk.iam",
      "dotnet": "Aws.Cdk.Iam",
      "js": "@aws-cdk/iam"
    },
    "jsii$_aws_cdk_kms$": {
      "java": "com.amazonaws.cdk.kms",
      "dotnet": "Aws.Cdk.Kms",
      "js": "@aws-cdk/kms"
    },
    "jsii$_aws_cdk_resources$": {
      "java": "com.amazonaws.cdk.resources",
      "dotnet": "Aws.Cdk.Resources",
      "js": "@aws-cdk/resources"
    },
    "jsii$_aws_cdk_s3$": {
      "java": "com.amazonaws.cdk.s3",
      "dotnet": "Aws.Cdk.S3",
      "js": "@aws-cdk/s3"
    },
    "jsii$_aws_cdk_codebuild$": {
      "java": "com.amazonaws.cdk.codebuild",
      "dotnet": "Aws.Cdk.CodeBuild",
      "js": "@aws-cdk/codebuild"
    }
  },
  "readme": {
    "markdown": "## AWS CodeBuild Construct Library\n\nDefine a project. This will also create an IAM Role and IAM Policy for CodeBuildRole to use.\n\nCreate a CodeBuild project with CodePipeline as the source:\n\n```ts\nnew BuildProject(this, 'MyFirstProject', {\n    source: new CodePipelineSource()\n});\n```\n\nCreate a CodeBuild project with CodeCommit as the source:\n\n```ts\nconst repo = new Repository(this, 'MyRepo', { repositoryName: 'foo' });\nnew BuildProject(this, 'MyFirstCodeCommitProject', {\n    source: new CodeCommitSource(repo)\n});\n```\n\nCreate a CodeBuild project with an S3 bucket as the source:\n\n```ts\nconst bucket = new Bucket(this, 'MyBucket');\nnew BuildProject(this, 'MyProject', {\n    source: new S3BucketSource(bucket, 'path/to/source.zip')\n});\n```\n\n### Using BuildProject as an event target\n\nThe `BuildProject` construct implements the `IEventRuleTarget` interface. This means that it can be\nused as a target for event rules:\n\n```ts\n// start build when a commit is pushed\ncodeCommitRepository.onCommit('OnCommit', buildProject);\n```\n\n### Using BuildProject as an event source\n\nTo define CloudWatch event rules for build projects, use one of the `onXxx` methods:\n\n```ts\nconst rule = project.onStateChange('BuildStateChange');\nrule.addTarget(lambda);\n```\n"
  },
  "code": "var jsii$_aws_cdk_codebuild$ =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_core$;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass BuildArtifacts {\n    bind(_project) {\n        return;\n    }\n}\nexports.BuildArtifacts = BuildArtifacts;\nclass NoBuildArtifacts extends BuildArtifacts {\n    toArtifactsJSON() {\n        return { type: 'NO_ARTIFACTS' };\n    }\n}\nexports.NoBuildArtifacts = NoBuildArtifacts;\nclass CodePipelineBuildArtifacts extends BuildArtifacts {\n    toArtifactsJSON() {\n        return { type: 'CODEPIPELINE' };\n    }\n}\nexports.CodePipelineBuildArtifacts = CodePipelineBuildArtifacts;\nclass S3BucketBuildArtifacts extends BuildArtifacts {\n    constructor(props) {\n        super();\n        this.props = props;\n    }\n    bind(project) {\n        this.props.bucket.grantReadWrite(project.role);\n    }\n    toArtifactsJSON() {\n        return {\n            type: 'S3',\n            location: this.props.bucket.bucketName,\n            path: this.props.bucket.path,\n            namespaceType: this.parseNamespaceType(this.props.includeBuildID),\n            name: this.props.name,\n            packaging: this.parsePackaging(this.props.packageZip),\n        };\n    }\n    parseNamespaceType(includeBuildID) {\n        if (includeBuildID != null) {\n            return includeBuildID ? 'BUILD_ID' : 'NONE';\n        }\n        else {\n            return 'BUILD_ID';\n        }\n    }\n    parsePackaging(packageZip) {\n        if (packageZip != null) {\n            return packageZip ? 'ZIP' : 'NONE';\n        }\n        else {\n            return 'ZIP';\n        }\n    }\n}\nexports.S3BucketBuildArtifacts = S3BucketBuildArtifacts;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(3));\n__export(__webpack_require__(7));\n__export(__webpack_require__(1));\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(0);\nconst events_1 = __webpack_require__(4);\nconst iam_1 = __webpack_require__(5);\nconst resources_1 = __webpack_require__(6);\nconst artifacts_1 = __webpack_require__(1);\nconst CODEPIPELINE_TYPE = 'CODEPIPELINE';\n/**\n * Represents a reference to a CodeBuild Project.\n *\n * If you're managing the Project alongside the rest of your CDK resources,\n * use the {@link BuildProject} class.\n *\n * If you want to reference an already existing Project\n * (or one defined in a different CDK Stack),\n * use the {@link import} method.\n */\nclass BuildProjectRef extends core_1.Construct {\n    /**\n     * Import a Project defined either outside the CDK,\n     * or in a different CDK Stack\n     * (and exported using the {@link export} method).\n     *\n     * @note if you're importing a CodeBuild Project for use\n     *   in a CodePipeline, make sure the existing Project\n     *   has permissions to access the S3 Bucket of that Pipeline -\n     *   otherwise, builds in that Pipeline will always fail.\n     *\n     * @param parent the parent Construct for this Construct\n     * @param name the logical name of this Construct\n     * @param props the properties of the referenced Project\n     * @returns a reference to the existing Project\n     */\n    static import(parent, name, props) {\n        return new ImportedBuildProjectRef(parent, name, props);\n    }\n    /**\n     * Export this Project. Allows referencing this Project in a different CDK Stack.\n     */\n    export() {\n        return {\n            projectName: new core_1.Output(this, 'ProjectName', { value: this.projectName }).makeImportValue(),\n        };\n    }\n    /**\n     * Defines a CloudWatch event rule triggered when the build project state\n     * changes. You can filter specific build status events using an event\n     * pattern filter on the `build-status` detail field:\n     *\n     *      const rule = project.onStateChange('OnBuildStarted', target);\n     *      rule.addEventPattern({\n     *          detail: {\n     *              'build-status': [\n     *                  \"IN_PROGRESS\",\n     *                  \"SUCCEEDED\",\n     *                  \"FAILED\",\n     *                  \"STOPPED\"\n     *              ]\n     *          }\n     *      });\n     *\n     * You can also use the methods `onBuildFailed` and `onBuildSucceeded` to define rules for\n     * these specific state changes.\n     *\n     * @see https://docs.aws.amazon.com/codebuild/latest/userguide/sample-build-notifications.html\n     */\n    onStateChange(name, target, options) {\n        const rule = new events_1.EventRule(this, name, options);\n        rule.addTarget(target);\n        rule.addEventPattern({\n            source: ['aws.codebuild'],\n            detailType: ['CodeBuild Build State Change'],\n            detail: {\n                'project-name': [\n                    this.projectName\n                ]\n            }\n        });\n        return rule;\n    }\n    /**\n     * Defines a CloudWatch event rule that triggers upon phase change of this\n     * build project.\n     *\n     * @see https://docs.aws.amazon.com/codebuild/latest/userguide/sample-build-notifications.html\n     */\n    onPhaseChange(name, target, options) {\n        const rule = new events_1.EventRule(this, name, options);\n        rule.addTarget(target);\n        rule.addEventPattern({\n            source: ['aws.codebuild'],\n            detailType: ['CodeBuild Build Phase Change'],\n            detail: {\n                'project-name': [\n                    this.projectName\n                ]\n            }\n        });\n        return rule;\n    }\n    /**\n     * Defines an event rule which triggers when a build starts.\n     */\n    onBuildStarted(name, target, options) {\n        const rule = this.onStateChange(name, target, options);\n        rule.addEventPattern({\n            detail: {\n                'build-status': ['IN_PROGRESS']\n            }\n        });\n        return rule;\n    }\n    /**\n     * Defines an event rule which triggers when a build fails.\n     */\n    onBuildFailed(name, target, options) {\n        const rule = this.onStateChange(name, target, options);\n        rule.addEventPattern({\n            detail: {\n                'build-status': ['FAILED']\n            }\n        });\n        return rule;\n    }\n    /**\n     * Defines an event rule which triggers when a build completes successfully.\n     */\n    onBuildSucceeded(name, target, options) {\n        const rule = this.onStateChange(name, target, options);\n        rule.addEventPattern({\n            detail: {\n                'build-status': ['SUCCEEDED']\n            }\n        });\n        return rule;\n    }\n    /**\n     * Allows using build projects as event rule targets.\n     */\n    get eventRuleTarget() {\n        if (!this.eventsRole) {\n            this.eventsRole = new iam_1.Role(this, 'EventsRole', {\n                assumedBy: new core_1.ServicePrincipal('events.amazonaws.com')\n            });\n            this.eventsRole.addToPolicy(new core_1.PolicyStatement()\n                .addAction('codebuild:StartBuild')\n                .addResource(this.projectArn));\n        }\n        return {\n            id: this.name,\n            arn: this.projectArn,\n            roleArn: this.eventsRole.roleArn,\n        };\n    }\n}\nexports.BuildProjectRef = BuildProjectRef;\nclass ImportedBuildProjectRef extends BuildProjectRef {\n    constructor(parent, name, props) {\n        super(parent, name);\n        this.role = undefined;\n        this.projectArn = core_1.Arn.fromComponents({\n            service: 'codebuild',\n            resource: 'project',\n            resourceName: props.projectName,\n        });\n        this.projectName = props.projectName;\n    }\n}\n/**\n * A CodeBuild project that is completely driven\n * from CodePipeline (does not hot have its own input or output)\n */\nclass BuildProject extends BuildProjectRef {\n    constructor(parent, name, props) {\n        super(parent, name);\n        this.role = props.role || new iam_1.Role(this, 'Role', {\n            assumedBy: new core_1.ServicePrincipal('codebuild.amazonaws.com')\n        });\n        const environment = this.renderEnvironment(props.environment, props.environmentVariables);\n        let cache;\n        if (props.cacheBucket) {\n            const cacheDir = props.cacheDir != null ? props.cacheDir : '';\n            cache = {\n                type: 'S3',\n                location: props.cacheBucket.arnForObjects(cacheDir)\n            };\n            props.cacheBucket.grantReadWrite(this.role);\n        }\n        // let source \"bind\" to the project. this usually involves granting permissions\n        // for the code build role to interact with the source.\n        const source = props.source;\n        source.bind(this);\n        const artifacts = this.parseArtifacts(props);\n        artifacts.bind(this);\n        const sourceJson = source.toSourceJSON();\n        if (props.buildSpec) {\n            sourceJson.buildSpec = JSON.stringify(props.buildSpec);\n        }\n        this.validateCodePipelineSettings(source, artifacts);\n        const resource = new resources_1.codebuild.ProjectResource(this, 'Resource', {\n            description: props.description,\n            source: sourceJson,\n            artifacts: artifacts.toArtifactsJSON(),\n            serviceRole: this.role.roleArn,\n            environment,\n            encryptionKey: props.encryptionKey && props.encryptionKey.keyArn,\n            badgeEnabled: props.badge,\n            cache,\n        });\n        this.projectArn = resource.projectArn;\n        this.projectName = resource.ref;\n        this.addToRolePolicy(this.createLoggingPermission());\n    }\n    /**\n     * Add a permission only if there's a policy attached.\n     * @param statement The permissions statement to add\n     */\n    addToRolePolicy(statement) {\n        return this.role.addToPolicy(statement);\n    }\n    createLoggingPermission() {\n        const logGroupArn = core_1.Arn.fromComponents({\n            service: 'logs',\n            resource: 'log-group',\n            sep: ':',\n            resourceName: new core_1.FnConcat('/aws/codebuild/', this.projectName),\n        });\n        const logGroupStarArn = new core_1.FnConcat(logGroupArn, ':*');\n        const p = new core_1.PolicyStatement();\n        p.allow();\n        p.addResource(logGroupArn);\n        p.addResource(logGroupStarArn);\n        p.addAction('logs:CreateLogGroup');\n        p.addAction('logs:CreateLogStream');\n        p.addAction('logs:PutLogEvents');\n        return p;\n    }\n    renderEnvironment(env = {}, projectVars = {}) {\n        const vars = {};\n        const containerVars = env.environmentVariables || {};\n        // first apply environment variables from the container definition\n        for (const name of Object.keys(containerVars)) {\n            vars[name] = containerVars[name];\n        }\n        // now apply project-level vars\n        for (const name of Object.keys(projectVars)) {\n            vars[name] = projectVars[name];\n        }\n        const hasEnvironmentVars = Object.keys(vars).length > 0;\n        return {\n            type: env.type || 'LINUX_CONTAINER',\n            image: env.image || 'aws/codebuild/ubuntu-base:14.04',\n            privilegedMode: env.priviledged || false,\n            computeType: env.computeType || ComputeType.Small,\n            environmentVariables: !hasEnvironmentVars ? undefined : Object.keys(vars).map(name => ({\n                name,\n                type: vars[name].type || BuildEnvironmentVariableType.PlainText,\n                value: vars[name].value\n            }))\n        };\n    }\n    parseArtifacts(props) {\n        if (props.artifacts) {\n            return props.artifacts;\n        }\n        if (props.source.toSourceJSON().type === CODEPIPELINE_TYPE) {\n            return new artifacts_1.CodePipelineBuildArtifacts();\n        }\n        else {\n            return new artifacts_1.NoBuildArtifacts();\n        }\n    }\n    validateCodePipelineSettings(source, artifacts) {\n        const sourceType = source.toSourceJSON().type;\n        const artifactsType = artifacts.toArtifactsJSON().type;\n        if ((sourceType === CODEPIPELINE_TYPE || artifactsType === CODEPIPELINE_TYPE) &&\n            (sourceType !== artifactsType)) {\n            throw new Error('Both source and artifacts must be set to CodePipeline');\n        }\n    }\n}\nexports.BuildProject = BuildProject;\nvar BuildEnvironmentVariableType;\n(function (BuildEnvironmentVariableType) {\n    /**\n     * An environment variable in plaintext format.\n     */\n    BuildEnvironmentVariableType[\"PlainText\"] = \"PLAINTEXT\";\n    /**\n     * An environment variable stored in Systems Manager Parameter Store.\n     */\n    BuildEnvironmentVariableType[\"ParameterStore\"] = \"PARAMETER_STORE\";\n})(BuildEnvironmentVariableType = exports.BuildEnvironmentVariableType || (exports.BuildEnvironmentVariableType = {}));\n/**\n * Build machine compute type.\n */\nvar ComputeType;\n(function (ComputeType) {\n    ComputeType[\"Small\"] = \"BUILD_GENERAL1_SMALL\";\n    ComputeType[\"Medium\"] = \"BUILD_GENERAL1_MEDIUM\";\n    ComputeType[\"Large\"] = \"BUILD_GENERAL1_LARGE\";\n})(ComputeType = exports.ComputeType || (exports.ComputeType = {}));\nclass ProjectName extends core_1.Token {\n}\nexports.ProjectName = ProjectName;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_events$;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_iam$;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_resources$;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(0);\n/**\n * Source Provider definition for a CodeBuild project\n * TODO: Abstract class should be an interface\n */\nclass BuildSource {\n    /**\n     * Called by the project when the source is added so that the source can perform\n     * binding operations on the source. For example, it can grant permissions to the\n     * code build project to read from the S3 bucket.\n     */\n    bind(_project) {\n        return;\n    }\n}\nexports.BuildSource = BuildSource;\n/**\n * CodeCommit Source definition for a CodeBuild project\n */\nclass CodeCommitSource extends BuildSource {\n    constructor(repo) {\n        super();\n        this.repo = repo;\n    }\n    bind(project) {\n        // https://docs.aws.amazon.com/codebuild/latest/userguide/setting-up.html\n        project.addToRolePolicy(new core_1.PolicyStatement()\n            .addAction('codecommit:GitPull')\n            .addResource(this.repo.repositoryArn));\n    }\n    toSourceJSON() {\n        return {\n            type: SourceType.CodeCommit,\n            location: this.repo.repositoryCloneUrlHttp\n        };\n    }\n}\nexports.CodeCommitSource = CodeCommitSource;\n/**\n * CodePipeline Source definition for a CodeBuild project\n */\nclass CodePipelineSource extends BuildSource {\n    toSourceJSON() {\n        return {\n            type: SourceType.CodePipeline\n        };\n    }\n    bind(_project) {\n        // TODO: permissions on the pipeline bucket?\n    }\n}\nexports.CodePipelineSource = CodePipelineSource;\n/**\n * GitHub Source definition for a CodeBuild project\n */\nclass GitHubSource extends BuildSource {\n    constructor(httpscloneUrl, oauthToken) {\n        super();\n        this.httpscloneUrl = httpscloneUrl;\n        this.oauthToken = oauthToken;\n        this.httpscloneUrl = httpscloneUrl;\n        this.oauthToken = oauthToken;\n    }\n    toSourceJSON() {\n        return {\n            type: SourceType.GitHub,\n            auth: this.oauthToken != null ? { type: 'OAUTH', resource: this.oauthToken } : undefined,\n            location: this.httpscloneUrl\n        };\n    }\n}\nexports.GitHubSource = GitHubSource;\n/**\n * GitHub Enterprice Source definition for a CodeBuild project\n */\nclass GitHubEnterpriseSource extends BuildSource {\n    constructor(cloneUrl) {\n        super();\n        this.cloneUrl = cloneUrl;\n        this.cloneUrl = cloneUrl;\n    }\n    toSourceJSON() {\n        return {\n            type: SourceType.GitHubEnterPrise,\n            location: this.cloneUrl,\n        };\n    }\n}\nexports.GitHubEnterpriseSource = GitHubEnterpriseSource;\n/**\n * BitBucket Source definition for a CodeBuild project\n */\nclass BitBucketSource extends BuildSource {\n    constructor(httpsCloneUrl) {\n        super();\n        this.httpsCloneUrl = httpsCloneUrl;\n        this.httpsCloneUrl = httpsCloneUrl;\n    }\n    toSourceJSON() {\n        return {\n            type: SourceType.BitBucket,\n            location: this.httpsCloneUrl\n        };\n    }\n}\nexports.BitBucketSource = BitBucketSource;\n/**\n * S3 bucket definition for a CodeBuild project.\n */\nclass S3BucketSource extends BuildSource {\n    constructor(bucket, path) {\n        super();\n        this.bucket = bucket;\n        this.path = path;\n    }\n    toSourceJSON() {\n        return {\n            type: SourceType.S3,\n            location: new core_1.FnConcat(this.bucket.bucketName, '/', this.path)\n        };\n    }\n    bind(project) {\n        this.bucket.grantRead(project.role);\n    }\n}\nexports.S3BucketSource = S3BucketSource;\n/**\n * Source types for CodeBuild Project\n */\nvar SourceType;\n(function (SourceType) {\n    SourceType[\"CodeCommit\"] = \"CODECOMMIT\";\n    SourceType[\"CodePipeline\"] = \"CODEPIPELINE\";\n    SourceType[\"GitHub\"] = \"GITHUB\";\n    SourceType[\"GitHubEnterPrise\"] = \"GITHUB_ENTERPRISE\";\n    SourceType[\"BitBucket\"] = \"BITBUCKET\";\n    SourceType[\"S3\"] = \"S3\";\n})(SourceType = exports.SourceType || (exports.SourceType = {}));\n\n\n/***/ })\n/******/ ]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"
}
