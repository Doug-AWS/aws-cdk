{
  "schema": "jsii/1.0",
  "types": {
    "jsii$_aws_cdk_cloudtrail$.CloudTrailProps": {
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "default": "true",
            "comment": "For most services, events are recorded in the region where the action occurred.\nFor global services such as AWS Identity and Access Management (IAM), AWS STS, Amazon CloudFront, and Route 53,\nevents are delivered to any trail that includes global services, and are logged as occurring in US East (N. Virginia) Region."
          },
          "name": "includeGlobalServiceEvents",
          "type": {
            "primitive": "boolean",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "true",
            "comment": "Whether or not this trail delivers log files from multiple regions to a single S3 bucket for a single account."
          },
          "name": "isMultiRegionTrail",
          "type": {
            "primitive": "boolean",
            "optional": true
          }
        },
        {
          "docs": {
            "param": "managementEvents the management configuration type to log",
            "comment": "When an event occurs in your account, CloudTrail evaluates whether the event matches the settings for your trails.\nOnly events that match your trail settings are delivered to your Amazon S3 bucket and Amazon CloudWatch Logs log group.\n\nThis method sets the management configuration for this trail.\n\nManagement events provide insight into management operations that are performed on resources in your AWS account.\nThese are also known as control plane operations.\nManagement events can also include non-API events that occur in your account.\nFor example, when a user logs in to your account, CloudTrail logs the ConsoleLogin event.\n\nIf managementEvents is undefined, we'll not log management events by default."
          },
          "name": "managementEvents",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "true",
            "comment": "To determine whether a log file was modified, deleted, or unchanged after CloudTrail delivered it,\nyou can use CloudTrail log file integrity validation.\nThis feature is built using industry standard algorithms: SHA-256 for hashing and SHA-256 with RSA for digital signing.\nThis makes it computationally infeasible to modify, delete or forge CloudTrail log files without detection.\nYou can use the AWS CLI to validate the files in the location where CloudTrail delivered them."
          },
          "name": "enableFileValidation",
          "type": {
            "primitive": "boolean",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "false",
            "comment": "If CloudTrail pushes logs to CloudWatch Logs in addition to S3.\nDisabled for cost out of the box."
          },
          "name": "sendToCloudWatchLogs",
          "type": {
            "primitive": "boolean",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "LogRetention.OneYear",
            "comment": "How long to retain logs in CloudWatchLogs. Ignored if sendToCloudWatchLogs is false\n  "
          },
          "name": "cloudWatchLogsRetentionTimeDays",
          "type": {
            "primitive": "number",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "none",
            "comment": "The AWS Key Management Service (AWS KMS) key ID that you want to use to encrypt CloudTrail logs."
          },
          "name": "kmsKey",
          "type": {
            "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyRef",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "none",
            "comment": "The name of an Amazon SNS topic that is notified when new log files are published."
          },
          "name": "snsTopic",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "the CloudFormation generated neme",
            "comment": "The name of the trail. We recoomend customers do not set an explicit name."
          },
          "name": "trailName",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "none",
            "comment": "An Amazon S3 object key prefix that precedes the name of all log files."
          },
          "name": "s3KeyPrefix",
          "type": {
            "primitive": "string",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_cloudtrail$.CloudTrailProps",
      "module": "jsii$_aws_cdk_cloudtrail$",
      "namespace": "jsii$_aws_cdk_cloudtrail$",
      "name": "CloudTrailProps",
      "datatype": true
    },
    "jsii$_aws_cdk_cloudtrail$.ReadWriteType": {
      "kind": "enum",
      "members": [
        {
          "name": "ReadOnly"
        },
        {
          "name": "WriteOnly"
        },
        {
          "name": "All"
        }
      ],
      "fqn": "jsii$_aws_cdk_cloudtrail$.ReadWriteType",
      "module": "jsii$_aws_cdk_cloudtrail$",
      "namespace": "jsii$_aws_cdk_cloudtrail$",
      "name": "ReadWriteType"
    },
    "jsii$_aws_cdk_cloudtrail$.LogRetention": {
      "kind": "enum",
      "members": [
        {
          "name": "OneDay"
        },
        {
          "name": "ThreeDays"
        },
        {
          "name": "FiveDays"
        },
        {
          "name": "OneWeek"
        },
        {
          "name": "TwoWeeks"
        },
        {
          "name": "OneMonth"
        },
        {
          "name": "TwoMonths"
        },
        {
          "name": "ThreeMonths"
        },
        {
          "name": "FourMonths"
        },
        {
          "name": "FiveMonths"
        },
        {
          "name": "HalfYear"
        },
        {
          "name": "OneYear"
        },
        {
          "name": "FourHundredDays"
        },
        {
          "name": "EighteenMonths"
        },
        {
          "name": "TwoYears"
        },
        {
          "name": "FiveYears"
        },
        {
          "name": "TenYears"
        }
      ],
      "fqn": "jsii$_aws_cdk_cloudtrail$.LogRetention",
      "module": "jsii$_aws_cdk_cloudtrail$",
      "namespace": "jsii$_aws_cdk_cloudtrail$",
      "name": "LogRetention"
    },
    "jsii$_aws_cdk_cloudtrail$.CloudTrail": {
      "docs": {
        "comment": "Cloud trail allows you to log events that happen in your AWS account\nFor example:\n\nimport { CloudTrail } from '@aws-cdk/ec2'\n\nconst cloudTrail = new CloudTrail(this, 'MyTrail');"
      },
      "kind": "class",
      "properties": [
        {
          "name": "cloudTrailArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.cloudtrail.TrailArn"
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "name": "prefixes",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            },
            {
              "docs": {
                "param": "readWriteType the configuration type to log for this data event\nEg, ReadWriteType.ReadOnly will only log \"read\" events for S3 objects that match a filter)",
                "comment": "the configuration type to log for this data event\nEg, ReadWriteType.ReadOnly will only log \"read\" events for S3 objects that match a filter)"
              },
              "name": "readWriteType",
              "type": {
                "fqn": "jsii$_aws_cdk_cloudtrail$.ReadWriteType"
              }
            }
          ],
          "docs": {
            "comment": "When an event occurs in your account, CloudTrail evaluates whether the event matches the settings for your trails.\nOnly events that match your trail settings are delivered to your Amazon S3 bucket and Amazon CloudWatch Logs log group.\n\nThis method adds an S3 Data Event Selector for filtering events that match S3 operations.\n\nData events: These events provide insight into the resource operations performed on or within a resource.\nThese are also known as data plane operations."
          },
          "name": "addS3EventSelector"
        }
      ],
      "fqn": "jsii$_aws_cdk_cloudtrail$.CloudTrail",
      "module": "jsii$_aws_cdk_cloudtrail$",
      "namespace": "jsii$_aws_cdk_cloudtrail$",
      "name": "CloudTrail",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_cloudtrail$.CloudTrailProps",
              "optional": true
            }
          }
        ],
        "initializer": true
      }
    }
  },
  "nametree": {
    "jsii$_aws_cdk_cloudtrail$": {
      "CloudTrailProps": {
        "_": "jsii$_aws_cdk_cloudtrail$.CloudTrailProps"
      },
      "ReadWriteType": {
        "_": "jsii$_aws_cdk_cloudtrail$.ReadWriteType"
      },
      "LogRetention": {
        "_": "jsii$_aws_cdk_cloudtrail$.LogRetention"
      },
      "CloudTrail": {
        "_": "jsii$_aws_cdk_cloudtrail$.CloudTrail"
      }
    }
  },
  "typecount": 4,
  "externalTypes": {
    "jsii$_aws_cdk_kms$.EncryptionKeyRef": {
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of the key."
          },
          "name": "keyArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.kms.KeyArn"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "Optional policy document that represents the resource policy of this key.\n\nIf specified, addToResourcePolicy can be used to edit this policy.\nOtherwise this method will no-op."
          },
          "name": "policy",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.PolicyDocument",
            "optional": true
          },
          "immutable": true,
          "protected": true,
          "abstract": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "docs": {
                "param": "parent The parent construct.",
                "comment": "The parent construct."
              },
              "name": "parent",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "docs": {
                "param": "name The name of the construct.",
                "comment": "The name of the construct."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "props The key reference.",
                "comment": "The key reference."
              },
              "name": "props",
              "type": {
                "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyRefProps"
              }
            }
          ],
          "docs": {
            "comment": "Defines an imported encryption key.\n\n`ref` can be obtained either via a call to `key.export()` or using\nliterals.\n\nFor example:\n\n     const keyRefProps = key.export();\n     const keyRef1 = EncryptionKeyRef.import(this, 'MyImportedKey1', keyRefProps);\n     const keyRef2 = EncryptionKeyRef.import(this, 'MyImportedKey2', {\n         keyArn: new KeyArn('arn:aws:kms:...')\n     });"
          },
          "name": "import",
          "static": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyRef"
          }
        },
        {
          "parameters": [
            {
              "name": "alias",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Defines a new alias for the key."
          },
          "name": "addAlias",
          "returns": {
            "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyAlias"
          }
        },
        {
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              }
            }
          ],
          "docs": {
            "comment": "Adds a statement to the KMS key resource policy."
          },
          "name": "addToResourcePolicy"
        },
        {
          "docs": {
            "returns": "a key ref which can be used in a call to `EncryptionKey.import(ref)`.",
            "comment": "Exports this key from the current stack."
          },
          "name": "export",
          "returns": {
            "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyRefProps"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyRef",
      "module": "jsii$_aws_cdk_kms$",
      "namespace": "jsii$_aws_cdk_kms$",
      "name": "EncryptionKeyRef",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "abstract": true,
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_core$.Construct": {
      "docs": {
        "comment": "Represents the building block of the construct graph.\nWhen a construct is created, it is always added as a child"
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "Returns the parent of this node or undefined if this is a root node."
          },
          "name": "parent",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.Construct",
            "optional": true
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The name of this construct"
          },
          "name": "name",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "All direct children of this construct."
          },
          "name": "children",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              },
              "kind": "array"
            }
          },
          "immutable": true
        },
        {
          "docs": {
            "returns": "/-separated path of this Construct.",
            "comment": "Returns the path of all constructs from root to this construct, in string form."
          },
          "name": "path",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "An array of metadata objects associated with this construct.\nThis can be used, for example, to implement support for deprecation notices, source mapping, etc."
          },
          "name": "metadata",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.MetadataEntry"
              },
              "kind": "array"
            }
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "docs": {
            "comment": "Returns a string representation of this construct."
          },
          "name": "toString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "parameters": [
            {
              "name": "depth",
              "type": {
                "primitive": "number",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Returns a string with a tree representation of this construct and it's children."
          },
          "name": "toTreeString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "a child by path or undefined if not found.",
            "comment": "Return a descendant by path, or undefined"
          },
          "name": "tryFindChild",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct",
            "optional": true
          }
        },
        {
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "Child with the given path.",
            "comment": "Return a descendant by path\n\nThrows an exception if the descendant is not found."
          },
          "name": "findChild",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "key The context key",
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "value The context value",
                "comment": "The context value"
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "This can be used to set contextual values.\nContext must be set before any children are added, since children may consult context info during construction.\nIf the key already exists, it will be overridden."
          },
          "name": "setContext"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "key The context key",
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "The context value or undefined",
            "comment": "Retrieves a value from tree context.\n\nContext is usually initialized at the root, but can be overridden at any point in the tree."
          },
          "name": "getContext",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Retrieve a value from tree-global context\n\nIt is an error if the context object is not available."
          },
          "name": "requireContext",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "type a string denoting the type of metadata",
                "comment": "a string denoting the type of metadata"
              },
              "name": "type",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "data the value of the metadata (can be a Token). If null/undefined, metadata will not be added.",
                "comment": "the value of the metadata (can be a Token). If null/undefined, metadata will not be added."
              },
              "name": "data",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "param": "from a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)",
                "comment": "a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)"
              },
              "name": "from",
              "type": {
                "primitive": "any",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Adds a metadata entry to this construct.\nEntries are arbitrary values and will also include a stack trace to allow tracing back to\nthe code location for when the entry was added. It can be used, for example, to include source\nmapping in CloudFormation templates to improve diagnostics."
          },
          "name": "addMetadata",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "message The warning message.",
                "comment": "The warning message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Adds a { warning: <message> } metadata entry to this construct."
          },
          "name": "addWarning",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "docs": {
            "returns": "An array of validation error messages, or an empty array if there the construct is valid.",
            "comment": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis."
          },
          "name": "validate",
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "returns": "A list of validation errors. If the list is empty, all constructs are valid.",
            "comment": "Invokes 'validate' on all child constructs and then on this construct (depth-first)."
          },
          "name": "validateTree",
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.ValidationError"
              },
              "kind": "array"
            }
          }
        },
        {
          "parameters": [
            {
              "name": "upTo",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Return the ancestors (including self) of this Construct up until and excluding the indicated component"
          },
          "name": "ancestors",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              },
              "kind": "array"
            }
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "props The props bag.",
                "comment": "The props bag."
              },
              "name": "props",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "param": "name The name of the required property.",
                "comment": "The name of the required property."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Throws if the `props` bag doesn't include the property `name`.\nIn the future we can add some type-checking here, maybe even auto-generate during compilation."
          },
          "name": "required",
          "protected": true,
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "child The child construct",
                "comment": "The child construct"
              },
              "name": "child",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "name": "childName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "The resolved path part name of the child",
            "comment": "Adds a child construct to this node."
          },
          "name": "addChild",
          "protected": true
        },
        {
          "docs": {
            "comment": "Locks this construct from allowing more children to be added. After this\ncall, no more children can be added to this construct or to any children."
          },
          "name": "lock",
          "protected": true
        },
        {
          "docs": {
            "comment": "Unlocks this costruct and allows mutations (adding children)."
          },
          "name": "unlock",
          "protected": true
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.Construct",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "Construct",
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_resources$.cloudtrail.TrailArn": {
      "kind": "class",
      "fqn": "jsii$_aws_cdk_resources$.cloudtrail.TrailArn",
      "module": "jsii$_aws_cdk_resources$",
      "namespace": "jsii$_aws_cdk_resources$.cloudtrail",
      "name": "TrailArn",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Arn"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    }
  },
  "name": "jsii$_aws_cdk_cloudtrail$",
  "package": "@aws-cdk/cloudtrail",
  "version": "0.7.2-beta",
  "dependencies": {
    "jsii$_aws_cdk_core$": {
      "package": "@aws-cdk/core",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_iam$": {
      "package": "@aws-cdk/iam",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_kms$": {
      "package": "@aws-cdk/kms",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_resources$": {
      "package": "@aws-cdk/resources",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_s3$": {
      "package": "@aws-cdk/s3",
      "version": "0.7.2-beta"
    }
  },
  "names": {
    "java": "com.amazonaws.cdk.cloudtrail",
    "dotnet": "AWS.Cdk.CloudTrail",
    "js": "@aws-cdk/cloudtrail"
  },
  "nativenames": {
    "jsii$_aws_cdk_core$": {
      "java": "com.amazonaws.cdk",
      "dotnet": "AWS.Cdk",
      "js": "@aws-cdk/core"
    },
    "jsii$_aws_cdk_iam$": {
      "java": "com.amazonaws.cdk.iam",
      "dotnet": "AWS.Cdk.Iam",
      "js": "@aws-cdk/iam"
    },
    "jsii$_aws_cdk_kms$": {
      "java": "com.amazonaws.cdk.kms",
      "dotnet": "AWS.Cdk.Kms",
      "js": "@aws-cdk/kms"
    },
    "jsii$_aws_cdk_resources$": {
      "java": "com.amazonaws.cdk.resources",
      "dotnet": "AWS.Cdk.Resources",
      "js": "@aws-cdk/resources"
    },
    "jsii$_aws_cdk_s3$": {
      "java": "com.amazonaws.cdk.s3",
      "dotnet": "AWS.Cdk.S3",
      "js": "@aws-cdk/s3"
    },
    "jsii$_aws_cdk_cloudtrail$": {
      "java": "com.amazonaws.cdk.cloudtrail",
      "dotnet": "AWS.Cdk.CloudTrail",
      "js": "@aws-cdk/cloudtrail"
    }
  },
  "readme": {
    "markdown": "## AWS CloudTrail Construct Library\nAdd a CloudTrail construct - for ease of setting up CloudTrail logging in your account\n\nExample usage:\n\n```ts\nimport { CloudTrail } from '@aws-cdk/cloudtrail';\n\nconst trail = new CloudTrail(stack, 'CloudTrail');\n```\n\nYou can instantiate the CloudTrail construct with no arguments - this will by default:\n    * Create a new S3 Bucket and associated Policy that allows CloudTrail to write to it\n    * Create a CloudTrail with the following configuration:\n        * Logging Enabled\n        * Log file validation enabled\n        * Multi Region set to true\n        * Global Service Events set to true\n        * The created S3 bucket\n        * CloudWatch Logging Disabled\n        * No SNS configuartion\n        * No tags\n        * No fixed name\n\nYou can override any of these properties using the `CloudTrailProps` configuraiton object.\n\nFor example, to log to CloudWatch Logs\n\n```ts\n\nimport { CloudTrail } from '@aws-cdk/cloudtrail';\n\nconst trail = new CloudTrail(stack, 'CloudTrail', {\n    sendToCloudWatchLogs: true\n});\n```\n\nThis creates the same setup as above - but also logs events to a created CloudWatch Log stream. By default, the created log group has a retention period of 365 Days, but this is also configurable.\n\n\nFor using CloudTrail event selector to log specific S3 events, you can use the `CloudTrailProps` configuration object\n\nFor example - this logs all ReadWriteEvents for the `magic-bucket` bucket:\n\n```ts\nimport { CloudTrail, DataResourceType, ReadWriteType  } from '@aws-cdk/cloudtrail';\n\nconst trail = new CloudTrail(stack, 'MyAmazingCloudTrail')\n\ntrail.addS3Filter(\"arn:aws:s3:::magic-bucket/\"); // Adds an event selector to the bucket magic-bucket. By default, this includes management events and all operations (Read + Write)\n\nconst configuration = {includeManagementEvents = false, readWriteType = ReadWriteType.All}\ntrail.addS3Filter([\"arn:aws:s3:::foo\"], configuration ); // Adds an event selector to the bucket foo, with a specific configuration\n});\n```\n"
  },
  "code": "var jsii$_aws_cdk_cloudtrail$ =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(1);\nconst iam_1 = __webpack_require__(2);\nconst resources_1 = __webpack_require__(3);\nconst s3_1 = __webpack_require__(4);\nvar ReadWriteType;\n(function (ReadWriteType) {\n    ReadWriteType[\"ReadOnly\"] = \"ReadOnly\";\n    ReadWriteType[\"WriteOnly\"] = \"WriteOnly\";\n    ReadWriteType[\"All\"] = \"All\";\n})(ReadWriteType = exports.ReadWriteType || (exports.ReadWriteType = {}));\n// TODO: This belongs in a CWL L2\nvar LogRetention;\n(function (LogRetention) {\n    LogRetention[LogRetention[\"OneDay\"] = 1] = \"OneDay\";\n    LogRetention[LogRetention[\"ThreeDays\"] = 3] = \"ThreeDays\";\n    LogRetention[LogRetention[\"FiveDays\"] = 5] = \"FiveDays\";\n    LogRetention[LogRetention[\"OneWeek\"] = 7] = \"OneWeek\";\n    LogRetention[LogRetention[\"TwoWeeks\"] = 14] = \"TwoWeeks\";\n    LogRetention[LogRetention[\"OneMonth\"] = 30] = \"OneMonth\";\n    LogRetention[LogRetention[\"TwoMonths\"] = 60] = \"TwoMonths\";\n    LogRetention[LogRetention[\"ThreeMonths\"] = 90] = \"ThreeMonths\";\n    LogRetention[LogRetention[\"FourMonths\"] = 120] = \"FourMonths\";\n    LogRetention[LogRetention[\"FiveMonths\"] = 150] = \"FiveMonths\";\n    LogRetention[LogRetention[\"HalfYear\"] = 180] = \"HalfYear\";\n    LogRetention[LogRetention[\"OneYear\"] = 365] = \"OneYear\";\n    LogRetention[LogRetention[\"FourHundredDays\"] = 400] = \"FourHundredDays\";\n    LogRetention[LogRetention[\"EighteenMonths\"] = 545] = \"EighteenMonths\";\n    LogRetention[LogRetention[\"TwoYears\"] = 731] = \"TwoYears\";\n    LogRetention[LogRetention[\"FiveYears\"] = 1827] = \"FiveYears\";\n    LogRetention[LogRetention[\"TenYears\"] = 3653] = \"TenYears\";\n})(LogRetention = exports.LogRetention || (exports.LogRetention = {}));\n/**\n * Cloud trail allows you to log events that happen in your AWS account\n * For example:\n *\n * import { CloudTrail } from '@aws-cdk/ec2'\n *\n * const cloudTrail = new CloudTrail(this, 'MyTrail');\n *\n */\nclass CloudTrail extends core_1.Construct {\n    constructor(parent, name, props = {}) {\n        super(parent, name);\n        this.eventSelectors = [];\n        const s3bucket = new s3_1.Bucket(this, 'S3', { encryption: s3_1.BucketEncryption.Unencrypted });\n        const cloudTrailPrincipal = \"cloudtrail.amazonaws.com\";\n        s3bucket.addToResourcePolicy(new core_1.PolicyStatement()\n            .addResource(s3bucket.bucketArn)\n            .addActions('s3:GetBucketAcl')\n            .addServicePrincipal(cloudTrailPrincipal));\n        s3bucket.addToResourcePolicy(new core_1.PolicyStatement()\n            .addResource(s3bucket.arnForObjects(new core_1.FnConcat('/AWSLogs/', new core_1.AwsAccountId())))\n            .addActions(\"s3:PutObject\")\n            .addServicePrincipal(cloudTrailPrincipal)\n            .setCondition(\"StringEquals\", { 's3:x-amz-acl': \"bucket-owner-full-control\" }));\n        if (props.sendToCloudWatchLogs) {\n            const logGroup = new resources_1.logs.LogGroupResource(this, \"LogGroup\", {\n                retentionInDays: props.cloudWatchLogsRetentionTimeDays || LogRetention.OneYear\n            });\n            this.cloudWatchLogsGroupArn = logGroup.ref;\n            const logsRole = new iam_1.Role(this, 'LogsRole', { assumedBy: new core_1.ServicePrincipal(cloudTrailPrincipal) });\n            const streamArn = new core_1.FnConcat(this.cloudWatchLogsGroupArn, \":log-stream:*\");\n            logsRole.addToPolicy(new core_1.PolicyStatement()\n                .addActions(\"logs:PutLogEvents\", \"logs:CreateLogStream\")\n                .addResource(streamArn));\n            this.cloudWatchLogsRoleArn = logsRole.roleArn;\n        }\n        if (props.managementEvents) {\n            const managementEvent = {\n                includeManagementEvents: true,\n                readWriteType: props.managementEvents\n            };\n            this.eventSelectors.push(managementEvent);\n        }\n        // TODO: not all regions support validation. Use service configuration data to fail gracefully\n        const trail = new resources_1.cloudtrail.TrailResource(this, 'Resource', {\n            isLogging: true,\n            enableLogFileValidation: props.enableFileValidation == null ? true : props.enableFileValidation,\n            isMultiRegionTrail: props.isMultiRegionTrail == null ? true : props.isMultiRegionTrail,\n            includeGlobalServiceEvents: props.includeGlobalServiceEvents == null ? true : props.includeGlobalServiceEvents,\n            trailName: props.trailName,\n            kmsKeyId: props.kmsKey && props.kmsKey.keyArn,\n            s3BucketName: s3bucket.name,\n            s3KeyPrefix: props.s3KeyPrefix,\n            cloudWatchLogsLogGroupArn: this.cloudWatchLogsGroupArn,\n            cloudWatchLogsRoleArn: this.cloudWatchLogsRoleArn,\n            snsTopicName: props.snsTopic,\n            eventSelectors: this.eventSelectors\n        });\n        this.cloudTrailArn = trail.trailArn;\n    }\n    /**\n     * When an event occurs in your account, CloudTrail evaluates whether the event matches the settings for your trails.\n     * Only events that match your trail settings are delivered to your Amazon S3 bucket and Amazon CloudWatch Logs log group.\n     *\n     * This method adds an S3 Data Event Selector for filtering events that match S3 operations.\n     *\n     * Data events: These events provide insight into the resource operations performed on or within a resource.\n     * These are also known as data plane operations.\n     * @param readWriteType the configuration type to log for this data event\n     * Eg, ReadWriteType.ReadOnly will only log \"read\" events for S3 objects that match a filter)\n     */\n    addS3EventSelector(prefixes, readWriteType) {\n        if (prefixes.length > 250) {\n            throw new Error(\"A maximum of 250 data elements can be in one event selector\");\n        }\n        if (this.eventSelectors.length > 5) {\n            throw new Error(\"A maximum of 5 event selectors are supported per trail.\");\n        }\n        this.eventSelectors.push({\n            includeManagementEvents: false,\n            readWriteType,\n            dataResources: [{\n                    type: \"AWS::S3::Object\",\n                    values: prefixes\n                }]\n        });\n    }\n}\nexports.CloudTrail = CloudTrail;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_core$;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_iam$;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_resources$;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_s3$;\n\n/***/ })\n/******/ ]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"
}
