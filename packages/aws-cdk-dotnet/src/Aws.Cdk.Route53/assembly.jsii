{
  "schema": "jsii/1.0",
  "types": {
    "jsii$_aws_cdk_route53$.PublicHostedZoneProps": {
      "docs": {
        "comment": "Properties of a new hosted zone"
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "The fully qualified domain name for the hosted zone"
          },
          "name": "zoneName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "default": "no comment",
            "comment": "Any comments that you want to include about the hosted zone."
          },
          "name": "comment",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "no DNS query logging",
            "comment": "The Amazon Resource Name (ARN) for the log group that you want Amazon Route 53 to send query logs to."
          },
          "name": "queryLogsLogGroupArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.logs.LogGroupArn",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_route53$.PublicHostedZoneProps",
      "module": "jsii$_aws_cdk_route53$",
      "namespace": "jsii$_aws_cdk_route53$",
      "name": "PublicHostedZoneProps",
      "datatype": true
    },
    "jsii$_aws_cdk_route53$.PublicHostedZone": {
      "docs": {
        "comment": "Create a Route53 public hosted zone."
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "Identifier of this hosted zone"
          },
          "name": "hostedZoneId",
          "type": {
            "fqn": "jsii$_aws_cdk_route53$.HostedZoneId"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Fully qualified domain name for the hosted zone"
          },
          "name": "zoneName",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Nameservers for this public hosted zone"
          },
          "name": "nameServers",
          "type": {
            "fqn": "jsii$_aws_cdk_route53$.HostedZoneNameServers"
          },
          "immutable": true
        }
      ],
      "fqn": "jsii$_aws_cdk_route53$.PublicHostedZone",
      "module": "jsii$_aws_cdk_route53$",
      "namespace": "jsii$_aws_cdk_route53$",
      "name": "PublicHostedZone",
      "base": {
        "fqn": "jsii$_aws_cdk_route53$.HostedZoneRef"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_route53$.PublicHostedZoneProps"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_route53$.PrivateHostedZoneProps": {
      "docs": {
        "comment": "Properties for a private hosted zone."
      },
      "kind": "interface",
      "interfaces": [
        {
          "fqn": "jsii$_aws_cdk_route53$.PublicHostedZoneProps"
        }
      ],
      "properties": [
        {
          "docs": {
            "comment": "One VPC that you want to associate with this hosted zone."
          },
          "name": "vpc",
          "type": {
            "fqn": "jsii$_aws_cdk_ec2$.VpcNetworkRef"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_route53$.PrivateHostedZoneProps",
      "module": "jsii$_aws_cdk_route53$",
      "namespace": "jsii$_aws_cdk_route53$",
      "name": "PrivateHostedZoneProps",
      "datatype": true
    },
    "jsii$_aws_cdk_route53$.PrivateHostedZone": {
      "docs": {
        "comment": "Create a Route53 private hosted zone for use in one or more VPCs.\n\nNote that `enableDnsHostnames` and `enableDnsSupport` must have been enabled\nfor the VPC you're configuring for private hosted zones."
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "Identifier of this hosted zone"
          },
          "name": "hostedZoneId",
          "type": {
            "fqn": "jsii$_aws_cdk_route53$.HostedZoneId"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Fully qualified domain name for the hosted zone"
          },
          "name": "zoneName",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "docs": {
                "param": "vpc the other VPC to add.",
                "comment": "the other VPC to add."
              },
              "name": "vpc",
              "type": {
                "fqn": "jsii$_aws_cdk_ec2$.VpcNetworkRef"
              }
            }
          ],
          "docs": {
            "comment": "Add another VPC to this private hosted zone."
          },
          "name": "addVpc"
        }
      ],
      "fqn": "jsii$_aws_cdk_route53$.PrivateHostedZone",
      "module": "jsii$_aws_cdk_route53$",
      "namespace": "jsii$_aws_cdk_route53$",
      "name": "PrivateHostedZone",
      "base": {
        "fqn": "jsii$_aws_cdk_route53$.HostedZoneRef"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_route53$.PrivateHostedZoneProps"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_route53$.HostedZoneNameServers": {
      "kind": "class",
      "fqn": "jsii$_aws_cdk_route53$.HostedZoneNameServers",
      "module": "jsii$_aws_cdk_route53$",
      "namespace": "jsii$_aws_cdk_route53$",
      "name": "HostedZoneNameServers",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_route53$.HostedZoneRef": {
      "docs": {
        "comment": "Imported or created hosted zone"
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "ID of this hosted zone"
          },
          "name": "hostedZoneId",
          "type": {
            "fqn": "jsii$_aws_cdk_route53$.HostedZoneId"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "FQDN of this hosted zone"
          },
          "name": "zoneName",
          "type": {
            "primitive": "string"
          },
          "immutable": true,
          "abstract": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "name": "parent",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "jsii$_aws_cdk_route53$.HostedZoneRefProps"
              }
            }
          ],
          "name": "import",
          "static": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_route53$.HostedZoneRef"
          }
        },
        {
          "docs": {
            "comment": "Export the hosted zone"
          },
          "name": "export",
          "returns": {
            "fqn": "jsii$_aws_cdk_route53$.HostedZoneRefProps"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_route53$.HostedZoneRef",
      "module": "jsii$_aws_cdk_route53$",
      "namespace": "jsii$_aws_cdk_route53$",
      "name": "HostedZoneRef",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "abstract": true,
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_route53$.HostedZoneId": {
      "docs": {
        "comment": "Hosted zone identifier"
      },
      "kind": "class",
      "fqn": "jsii$_aws_cdk_route53$.HostedZoneId",
      "module": "jsii$_aws_cdk_route53$",
      "namespace": "jsii$_aws_cdk_route53$",
      "name": "HostedZoneId",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_route53$.HostedZoneRefProps": {
      "docs": {
        "comment": "Reference to a hosted zone"
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "Identifier of the hosted zone"
          },
          "name": "hostedZoneId",
          "type": {
            "fqn": "jsii$_aws_cdk_route53$.HostedZoneId"
          }
        },
        {
          "docs": {
            "comment": "Name of the hosted zone"
          },
          "name": "zoneName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_route53$.HostedZoneRefProps",
      "module": "jsii$_aws_cdk_route53$",
      "namespace": "jsii$_aws_cdk_route53$",
      "name": "HostedZoneRefProps",
      "datatype": true
    },
    "jsii$_aws_cdk_route53$.ImportedHostedZone": {
      "docs": {
        "comment": "Imported hosted zone"
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "ID of this hosted zone"
          },
          "name": "hostedZoneId",
          "type": {
            "fqn": "jsii$_aws_cdk_route53$.HostedZoneId"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "FQDN of this hosted zone"
          },
          "name": "zoneName",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        }
      ],
      "fqn": "jsii$_aws_cdk_route53$.ImportedHostedZone",
      "module": "jsii$_aws_cdk_route53$",
      "namespace": "jsii$_aws_cdk_route53$",
      "name": "ImportedHostedZone",
      "base": {
        "fqn": "jsii$_aws_cdk_route53$.HostedZoneRef"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_route53$.HostedZoneRefProps"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_route53$.TXTRecordProps": {
      "kind": "interface",
      "properties": [
        {
          "name": "recordName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "name": "recordValue",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "default": "1800 seconds "
          },
          "name": "ttl",
          "type": {
            "primitive": "number",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_route53$.TXTRecordProps",
      "module": "jsii$_aws_cdk_route53$",
      "namespace": "jsii$_aws_cdk_route53$",
      "name": "TXTRecordProps",
      "datatype": true
    },
    "jsii$_aws_cdk_route53$.TXTRecord": {
      "docs": {
        "comment": "A DNS TXT record"
      },
      "kind": "class",
      "fqn": "jsii$_aws_cdk_route53$.TXTRecord",
      "module": "jsii$_aws_cdk_route53$",
      "namespace": "jsii$_aws_cdk_route53$",
      "name": "TXTRecord",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_route53$.HostedZoneRef"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_route53$.TXTRecordProps"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_route53$.ZoneDelegationRecordProps": {
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "The name of the zone that delegation is made to."
          },
          "name": "delegatedZoneName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The name servers to report in the delegation records."
          },
          "name": "nameServers",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "default": "172800 seconds.",
            "comment": "The TTL of the zone delegation records."
          },
          "name": "ttl",
          "type": {
            "primitive": "number",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "no comment.",
            "comment": "Any comments that you want to include about the zone delegation records."
          },
          "name": "comment",
          "type": {
            "primitive": "string",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_route53$.ZoneDelegationRecordProps",
      "module": "jsii$_aws_cdk_route53$",
      "namespace": "jsii$_aws_cdk_route53$",
      "name": "ZoneDelegationRecordProps",
      "datatype": true
    },
    "jsii$_aws_cdk_route53$.ZoneDelegationRecord": {
      "docs": {
        "comment": "A record to delegate further lookups to a different set of name servers"
      },
      "kind": "class",
      "fqn": "jsii$_aws_cdk_route53$.ZoneDelegationRecord",
      "module": "jsii$_aws_cdk_route53$",
      "namespace": "jsii$_aws_cdk_route53$",
      "name": "ZoneDelegationRecord",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_route53$.HostedZoneRef"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_route53$.ZoneDelegationRecordProps"
            }
          }
        ],
        "initializer": true
      }
    }
  },
  "nametree": {
    "jsii$_aws_cdk_route53$": {
      "PublicHostedZoneProps": {
        "_": "jsii$_aws_cdk_route53$.PublicHostedZoneProps"
      },
      "PublicHostedZone": {
        "_": "jsii$_aws_cdk_route53$.PublicHostedZone"
      },
      "PrivateHostedZoneProps": {
        "_": "jsii$_aws_cdk_route53$.PrivateHostedZoneProps"
      },
      "PrivateHostedZone": {
        "_": "jsii$_aws_cdk_route53$.PrivateHostedZone"
      },
      "HostedZoneNameServers": {
        "_": "jsii$_aws_cdk_route53$.HostedZoneNameServers"
      },
      "HostedZoneRef": {
        "_": "jsii$_aws_cdk_route53$.HostedZoneRef"
      },
      "HostedZoneId": {
        "_": "jsii$_aws_cdk_route53$.HostedZoneId"
      },
      "HostedZoneRefProps": {
        "_": "jsii$_aws_cdk_route53$.HostedZoneRefProps"
      },
      "ImportedHostedZone": {
        "_": "jsii$_aws_cdk_route53$.ImportedHostedZone"
      },
      "TXTRecordProps": {
        "_": "jsii$_aws_cdk_route53$.TXTRecordProps"
      },
      "TXTRecord": {
        "_": "jsii$_aws_cdk_route53$.TXTRecord"
      },
      "ZoneDelegationRecordProps": {
        "_": "jsii$_aws_cdk_route53$.ZoneDelegationRecordProps"
      },
      "ZoneDelegationRecord": {
        "_": "jsii$_aws_cdk_route53$.ZoneDelegationRecord"
      }
    }
  },
  "typecount": 13,
  "externalTypes": {
    "jsii$_aws_cdk_resources$.logs.LogGroupArn": {
      "kind": "class",
      "fqn": "jsii$_aws_cdk_resources$.logs.LogGroupArn",
      "module": "jsii$_aws_cdk_resources$",
      "namespace": "jsii$_aws_cdk_resources$.logs",
      "name": "LogGroupArn",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Arn"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_core$.Construct": {
      "docs": {
        "comment": "Represents the building block of the construct graph.\nWhen a construct is created, it is always added as a child"
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "Returns the parent of this node or undefined if this is a root node."
          },
          "name": "parent",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.Construct",
            "optional": true
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The name of this construct"
          },
          "name": "name",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "All direct children of this construct."
          },
          "name": "children",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              },
              "kind": "array"
            }
          },
          "immutable": true
        },
        {
          "docs": {
            "returns": "/-separated path of this Construct.",
            "comment": "Returns the path of all constructs from root to this construct, in string form."
          },
          "name": "path",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "An array of metadata objects associated with this construct.\nThis can be used, for example, to implement support for deprecation notices, source mapping, etc."
          },
          "name": "metadata",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.MetadataEntry"
              },
              "kind": "array"
            }
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "docs": {
            "comment": "Returns a string representation of this construct."
          },
          "name": "toString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "parameters": [
            {
              "name": "depth",
              "type": {
                "primitive": "number",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Returns a string with a tree representation of this construct and it's children."
          },
          "name": "toTreeString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "a child by path or undefined if not found.",
            "comment": "Return a descendant by path, or undefined"
          },
          "name": "tryFindChild",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct",
            "optional": true
          }
        },
        {
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "Child with the given path.",
            "comment": "Return a descendant by path\n\nThrows an exception if the descendant is not found."
          },
          "name": "findChild",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "key The context key",
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "value The context value",
                "comment": "The context value"
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "This can be used to set contextual values.\nContext must be set before any children are added, since children may consult context info during construction.\nIf the key already exists, it will be overridden."
          },
          "name": "setContext"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "key The context key",
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "The context value or undefined",
            "comment": "Retrieves a value from tree context.\n\nContext is usually initialized at the root, but can be overridden at any point in the tree."
          },
          "name": "getContext",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Retrieve a value from tree-global context\n\nIt is an error if the context object is not available."
          },
          "name": "requireContext",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "type a string denoting the type of metadata",
                "comment": "a string denoting the type of metadata"
              },
              "name": "type",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "data the value of the metadata (can be a Token). If null/undefined, metadata will not be added.",
                "comment": "the value of the metadata (can be a Token). If null/undefined, metadata will not be added."
              },
              "name": "data",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "param": "from a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)",
                "comment": "a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)"
              },
              "name": "from",
              "type": {
                "primitive": "any",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Adds a metadata entry to this construct.\nEntries are arbitrary values and will also include a stack trace to allow tracing back to\nthe code location for when the entry was added. It can be used, for example, to include source\nmapping in CloudFormation templates to improve diagnostics."
          },
          "name": "addMetadata",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "message The warning message.",
                "comment": "The warning message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Adds a { warning: <message> } metadata entry to this construct."
          },
          "name": "addWarning",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "docs": {
            "returns": "An array of validation error messages, or an empty array if there the construct is valid.",
            "comment": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis."
          },
          "name": "validate",
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "returns": "A list of validation errors. If the list is empty, all constructs are valid.",
            "comment": "Invokes 'validate' on all child constructs and then on this construct (depth-first)."
          },
          "name": "validateTree",
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.ValidationError"
              },
              "kind": "array"
            }
          }
        },
        {
          "parameters": [
            {
              "name": "upTo",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Return the ancestors (including self) of this Construct up until and excluding the indicated component"
          },
          "name": "ancestors",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              },
              "kind": "array"
            }
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "props The props bag.",
                "comment": "The props bag."
              },
              "name": "props",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "param": "name The name of the required property.",
                "comment": "The name of the required property."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Throws if the `props` bag doesn't include the property `name`.\nIn the future we can add some type-checking here, maybe even auto-generate during compilation."
          },
          "name": "required",
          "protected": true,
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "child The child construct",
                "comment": "The child construct"
              },
              "name": "child",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "name": "childName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "The resolved path part name of the child",
            "comment": "Adds a child construct to this node."
          },
          "name": "addChild",
          "protected": true
        },
        {
          "docs": {
            "comment": "Locks this construct from allowing more children to be added. After this\ncall, no more children can be added to this construct or to any children."
          },
          "name": "lock",
          "protected": true
        },
        {
          "docs": {
            "comment": "Unlocks this costruct and allows mutations (adding children)."
          },
          "name": "unlock",
          "protected": true
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.Construct",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "Construct",
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_ec2$.VpcNetworkRef": {
      "docs": {
        "comment": "A new or imported VPC"
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "Identifier for this VPC"
          },
          "name": "vpcId",
          "type": {
            "fqn": "jsii$_aws_cdk_ec2$.VpcNetworkId"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "List of public subnets in this VPC"
          },
          "name": "publicSubnets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_ec2$.VpcSubnetRef"
              },
              "kind": "array"
            }
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "List of private subnets in this VPC"
          },
          "name": "privateSubnets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_ec2$.VpcSubnetRef"
              },
              "kind": "array"
            }
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "Parts of the VPC that constitute full construction"
          },
          "name": "dependencyElements",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.IDependable"
              },
              "kind": "array"
            }
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "name": "parent",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "jsii$_aws_cdk_ec2$.VpcNetworkRefProps"
              }
            }
          ],
          "docs": {
            "comment": "Import an exported VPC"
          },
          "name": "import",
          "static": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_ec2$.VpcNetworkRef"
          }
        },
        {
          "parameters": [
            {
              "name": "placement",
              "type": {
                "fqn": "jsii$_aws_cdk_ec2$.VpcPlacementStrategy",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Return the subnets appropriate for the placement strategy"
          },
          "name": "subnets",
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_ec2$.VpcSubnetRef"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Export this VPC from the stack"
          },
          "name": "export",
          "returns": {
            "fqn": "jsii$_aws_cdk_ec2$.VpcNetworkRefProps"
          }
        }
      ],
      "interfaces": [
        {
          "fqn": "jsii$_aws_cdk_core$.IDependable"
        }
      ],
      "fqn": "jsii$_aws_cdk_ec2$.VpcNetworkRef",
      "module": "jsii$_aws_cdk_ec2$",
      "namespace": "jsii$_aws_cdk_ec2$",
      "name": "VpcNetworkRef",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "abstract": true,
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_core$.Token": {
      "docs": {
        "comment": "Represents a lazy-evaluated value. Can be used to delay evaluation of a certain value\nin case, for example, that it requires some context or late-bound data."
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "returns": "The resolved value for this token."
          },
          "name": "resolve",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.Token",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "Token",
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    }
  },
  "name": "jsii$_aws_cdk_route53$",
  "package": "@aws-cdk/route53",
  "version": "0.7.2-beta",
  "dependencies": {
    "jsii$_aws_cdk_core$": {
      "package": "@aws-cdk/core",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_ec2$": {
      "package": "@aws-cdk/ec2",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_resources$": {
      "package": "@aws-cdk/resources",
      "version": "0.7.2-beta"
    }
  },
  "names": {
    "java": "com.amazonaws.cdk.route53",
    "dotnet": "Aws.Cdk.Route53",
    "js": "@aws-cdk/route53"
  },
  "nativenames": {
    "jsii$_aws_cdk_core$": {
      "java": "com.amazonaws.cdk",
      "dotnet": "Aws.Cdk",
      "js": "@aws-cdk/core"
    },
    "jsii$_aws_cdk_ec2$": {
      "java": "com.amazonaws.cdk.ec2",
      "dotnet": "Aws.Cdk.Ec2",
      "js": "@aws-cdk/ec2"
    },
    "jsii$_aws_cdk_resources$": {
      "java": "com.amazonaws.cdk.resources",
      "dotnet": "Aws.Cdk.Resources",
      "js": "@aws-cdk/resources"
    },
    "jsii$_aws_cdk_route53$": {
      "java": "com.amazonaws.cdk.route53",
      "dotnet": "Aws.Cdk.Route53",
      "js": "@aws-cdk/route53"
    }
  },
  "readme": {
    "markdown": "## AWS Route53 Constuct Library\n\nTo add a public hosted zone:\n\n```ts\nimport { PublicHostedZone } from '@aws-cdk/route53';\n\nnew PublicHostedZone(this, 'HostedZone', {\n    zoneName: 'fully.qualified.domain.com'\n});\n```\n\nTo add a private hosted zone, use `PrivateHostedZone`. Note that\n`enableDnsHostnames` and `enableDnsSupport` must have been enabled for the\nVPC you're configuring for private hosted zones.\n\n```ts\nimport { PrivateHostedZone } from '@aws-cdk/route53';\n\nconst vpc = new VpcNetwork(this, 'VPC');\n\nconst zone = new PrivateHostedZone(this, 'HostedZone', {\n    zoneName: 'fully.qualified.domain.com',\n    vpc    // At least one VPC has to be added to a Private Hosted Zone.\n});\n```\n\nAdditional VPCs can be added with `zone.addVPC()`.\n\n### Adding Records\n\nTo add a TXT record to your zone:\n```ts\nimport { TXTRecord } from '@aws-cdk/route53';\n\nnew TXTRecord(zone, 'TXTRecord', {\n    recordName: '_foo',  // If the name ends with a \".\", it will be used as-is;\n                         // if it ends with a \".\" followed by the zone name, a trailing \".\" will be added automatically;\n                         // otherwise, a \".\", the zone name, and a trailing \".\" will be added automatically.\n    recordValue: 'Bar!', // Will be quoted for you, and \" will be escaped automatically.\n    ttl: 90,             // Optional - default is 1800\n});\n```\n"
  },
  "code": "var jsii$_aws_cdk_route53$ =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_core$;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_resources$;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(0);\n/**\n * Imported or created hosted zone\n */\nclass HostedZoneRef extends core_1.Construct {\n    static import(parent, name, props) {\n        return new ImportedHostedZone(parent, name, props);\n    }\n    /**\n     * Export the hosted zone\n     */\n    export() {\n        return {\n            hostedZoneId: new core_1.Output(this, 'HostedZoneId', { value: this.hostedZoneId }).makeImportValue(),\n            zoneName: this.zoneName,\n        };\n    }\n}\nexports.HostedZoneRef = HostedZoneRef;\n/**\n * Hosted zone identifier\n */\nclass HostedZoneId extends core_1.Token {\n}\nexports.HostedZoneId = HostedZoneId;\n/**\n * Imported hosted zone\n */\nclass ImportedHostedZone extends HostedZoneRef {\n    constructor(parent, name, props) {\n        super(parent, name);\n        this.hostedZoneId = props.hostedZoneId;\n        this.zoneName = props.zoneName;\n    }\n}\nexports.ImportedHostedZone = ImportedHostedZone;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Route53 requires the record names are specified as fully qualified names, but this\n * forces lots of redundant work on the user (repeating the zone name over and over).\n * This function allows the user to be lazier and offers a nicer experience, by\n * qualifying relative names appropriately:\n *\n * @param providedName the user-specified name of the record.\n * @param zoneName     the fully-qualified name of the zone the record will be created in.\n *\n * @returns <ul>\n *              <li>If +providedName+ ends with a +.+, use it as-is</li>\n *              <li>If +providedName+ ends with +zoneName+, append a trailing +.+</li>\n *              <li>Otherwise, append +.+, +zoneName+ and a trailing +.+</li>\n *          </ul>\n */\nfunction determineFullyQualifiedDomainName(providedName, hostedZone) {\n    if (providedName.endsWith('.')) {\n        return providedName;\n    }\n    const suffix = `.${hostedZone.zoneName}`;\n    if (providedName.endsWith(suffix)) {\n        return `${providedName}.`;\n    }\n    return `${providedName}${suffix}.`;\n}\nexports.determineFullyQualifiedDomainName = determineFullyQualifiedDomainName;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(5));\n__export(__webpack_require__(2));\n__export(__webpack_require__(7));\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(0);\nconst resources_1 = __webpack_require__(1);\nconst hosted_zone_ref_1 = __webpack_require__(2);\nconst util_1 = __webpack_require__(6);\n/**\n * Create a Route53 public hosted zone.\n */\nclass PublicHostedZone extends hosted_zone_ref_1.HostedZoneRef {\n    constructor(parent, name, props) {\n        super(parent, name);\n        util_1.validateZoneName(props.zoneName);\n        const hostedZone = new resources_1.route53.HostedZoneResource(this, 'Resource', Object.assign({}, determineHostedZoneProps(props)));\n        this.hostedZoneId = hostedZone.ref;\n        this.nameServers = hostedZone.hostedZoneNameServers;\n        this.zoneName = props.zoneName;\n    }\n}\nexports.PublicHostedZone = PublicHostedZone;\n/**\n * Create a Route53 private hosted zone for use in one or more VPCs.\n *\n * Note that `enableDnsHostnames` and `enableDnsSupport` must have been enabled\n * for the VPC you're configuring for private hosted zones.\n */\nclass PrivateHostedZone extends hosted_zone_ref_1.HostedZoneRef {\n    constructor(parent, name, props) {\n        super(parent, name);\n        /**\n         * VPCs to which this hosted zone will be added\n         */\n        this.vpcs = [];\n        util_1.validateZoneName(props.zoneName);\n        const hostedZone = new resources_1.route53.HostedZoneResource(this, 'Resource', Object.assign({ vpcs: new core_1.Token(() => this.vpcs ? this.vpcs : undefined) }, determineHostedZoneProps(props)));\n        this.hostedZoneId = hostedZone.ref;\n        this.zoneName = props.zoneName;\n        this.addVpc(props.vpc);\n    }\n    /**\n     * Add another VPC to this private hosted zone.\n     *\n     * @param vpc the other VPC to add.\n     */\n    addVpc(vpc) {\n        this.vpcs.push(toVpcProperty(vpc));\n    }\n}\nexports.PrivateHostedZone = PrivateHostedZone;\nfunction toVpcProperty(vpc) {\n    return { vpcId: vpc.vpcId, vpcRegion: new core_1.AwsRegion() };\n}\nclass HostedZoneNameServers extends core_1.Token {\n}\nexports.HostedZoneNameServers = HostedZoneNameServers;\nfunction determineHostedZoneProps(props) {\n    const hostedZoneName = props.zoneName + '.';\n    const hostedZoneConfig = props.comment ? { comment: props.comment } : undefined;\n    const queryLoggingConfig = props.queryLogsLogGroupArn ? { cloudWatchLogsLogGroupArn: props.queryLogsLogGroupArn } : undefined;\n    return { hostedZoneName, hostedZoneConfig, queryLoggingConfig };\n}\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Validates a zone name is valid by Route53 specifc naming rules,\n * and that there is no trailing dot in the name.\n *\n * @param zoneName the zone name to be validated.\n * @returns +zoneName+\n * @throws ValidationError if the name is not valid.\n */\nfunction validateZoneName(zoneName) {\n    if (zoneName.endsWith('.')) {\n        throw new ValidationError('zone name must not end with a trailing dot');\n    }\n    if (zoneName.length > 255) {\n        throw new ValidationError('zone name cannot be more than 255 bytes long');\n    }\n    if (zoneName.split('.').find(label => label.length > 63)) {\n        throw new ValidationError('zone name labels cannot be more than 63 bytes long');\n    }\n    if (!zoneName.match(/^[a-z0-9!\"#$%&'()*+,/:;<=>?@[\\\\\\]^_`{|}~.-]+$/i)) {\n        throw new ValidationError('zone names can only contain a-z, 0-9, -, ! \" # $ % & \\' ( ) * + , - / : ; < = > ? @ [ \\ ] ^ _ ` { | } ~ .');\n    }\n}\nexports.validateZoneName = validateZoneName;\nclass ValidationError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(8));\n__export(__webpack_require__(9));\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(0);\nconst resources_1 = __webpack_require__(1);\nconst _util_1 = __webpack_require__(3);\n/**\n * A DNS TXT record\n */\nclass TXTRecord extends core_1.Construct {\n    constructor(parent, name, props) {\n        super(parent, name);\n        // JSON.stringify conveniently wraps strings in \" and escapes \".\n        const recordValue = JSON.stringify(props.recordValue);\n        const ttl = props.ttl === undefined ? 1800 : props.ttl;\n        new resources_1.route53.RecordSetResource(this, 'Resource', {\n            hostedZoneId: parent.hostedZoneId,\n            recordSetName: _util_1.determineFullyQualifiedDomainName(props.recordName, parent),\n            type: 'TXT',\n            resourceRecords: [recordValue],\n            ttl: ttl.toString()\n        });\n    }\n}\nexports.TXTRecord = TXTRecord;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(0);\nconst resources_1 = __webpack_require__(1);\nconst _util_1 = __webpack_require__(3);\n/**\n * A record to delegate further lookups to a different set of name servers\n */\nclass ZoneDelegationRecord extends core_1.Construct {\n    constructor(parent, name, props) {\n        super(parent, name);\n        const ttl = props.ttl === undefined ? 172800 : props.ttl;\n        new resources_1.route53.RecordSetResource(this, 'Resource', {\n            hostedZoneId: parent.hostedZoneId,\n            recordSetName: _util_1.determineFullyQualifiedDomainName(props.delegatedZoneName, parent),\n            type: 'NS',\n            ttl: ttl.toString(),\n            comment: props.comment,\n            resourceRecords: props.nameServers.map(ns => ns.endsWith('.') ? ns : `${ns}.`)\n        });\n    }\n}\nexports.ZoneDelegationRecord = ZoneDelegationRecord;\n\n\n/***/ })\n/******/ ]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"
}
