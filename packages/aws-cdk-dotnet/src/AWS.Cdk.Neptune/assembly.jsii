{
  "schema": "jsii/1.0",
  "types": {
    "jsii$_aws_cdk_neptune$.NeptuneDatabaseProps": {
      "docs": {
        "comment": "Properties for a Neptune Graph Database Cluster"
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "default": "2",
            "comment": "How many replicas/instances to create\n\nHas to be at least 1. Default is 2."
          },
          "name": "instances",
          "type": {
            "primitive": "number",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Settings for the individual instances that are launched"
          },
          "name": "instanceProps",
          "type": {
            "fqn": "jsii$_aws_cdk_rds$.InstanceProps"
          }
        },
        {
          "docs": {
            "comment": "Username and password for the administrative user"
          },
          "name": "masterUser",
          "type": {
            "fqn": "jsii$_aws_cdk_rds$.Login"
          }
        },
        {
          "docs": {
            "default": "3306",
            "comment": "What port to listen on"
          },
          "name": "port",
          "type": {
            "primitive": "number",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "An optional identifier for the cluster\n\nIf not given, a name is generated."
          },
          "name": "clusterIdentifier",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Base identifier for instances\n\nEvery replica is named by appending the replica number to this string, 1-based.\n\nIf not given, the clusterIdentifier is used with the word \"Instance\" appended.\n\nIf clusterIdentifier is also not given, the identifier is automatically generated."
          },
          "name": "instanceIdentifierBase",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Name of a database which is automatically created inside the cluster\n\nIf not given, no database is created."
          },
          "name": "defaultDatabaseName",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "ARN of KMS key if you want to enable storage encryption"
          },
          "name": "kmsKeyArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.kms.KeyArn",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "A daily time range in 24-hours UTC format in which backups preferably execute.\n\nMust be at least 30 minutes long.\n\nExample: '01:00-02:00'\n\nIf not given, an window is randomly."
          },
          "name": "preferredMaintenanceWindow",
          "type": {
            "primitive": "string",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_neptune$.NeptuneDatabaseProps",
      "module": "jsii$_aws_cdk_neptune$",
      "namespace": "jsii$_aws_cdk_neptune$",
      "name": "NeptuneDatabaseProps",
      "datatype": true
    },
    "jsii$_aws_cdk_neptune$.NeptuneDatabase": {
      "docs": {
        "comment": "Neptune Graph Database cluster\n\nCreates a new Neptune database cluster with a given number of replicas."
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "Identifier of the cluster"
          },
          "name": "clusterIdentifier",
          "type": {
            "fqn": "jsii$_aws_cdk_rds$.ClusterIdentifier"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Identifiers of the replicas"
          },
          "name": "instanceIdentifiers",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_rds$.InstanceIdentifier"
              },
              "kind": "array"
            }
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The endpoint to use for read/write operations"
          },
          "name": "clusterEndpoint",
          "type": {
            "fqn": "jsii$_aws_cdk_rds$.Endpoint"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Endpoint to use for load-balanced read-only operations."
          },
          "name": "readerEndpoint",
          "type": {
            "fqn": "jsii$_aws_cdk_rds$.Endpoint"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Endpoints which address each individual replica."
          },
          "name": "instanceEndpoints",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_rds$.Endpoint"
              },
              "kind": "array"
            }
          },
          "immutable": true
        },
        {
          "name": "connections",
          "type": {
            "fqn": "jsii$_aws_cdk_ec2$.DefaultConnections"
          },
          "immutable": true
        }
      ],
      "interfaces": [
        {
          "fqn": "jsii$_aws_cdk_ec2$.IConnectable"
        }
      ],
      "fqn": "jsii$_aws_cdk_neptune$.NeptuneDatabase",
      "module": "jsii$_aws_cdk_neptune$",
      "namespace": "jsii$_aws_cdk_neptune$",
      "name": "NeptuneDatabase",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_neptune$.NeptuneDatabaseProps"
            }
          }
        ],
        "initializer": true
      }
    }
  },
  "nametree": {
    "jsii$_aws_cdk_neptune$": {
      "NeptuneDatabaseProps": {
        "_": "jsii$_aws_cdk_neptune$.NeptuneDatabaseProps"
      },
      "NeptuneDatabase": {
        "_": "jsii$_aws_cdk_neptune$.NeptuneDatabase"
      }
    }
  },
  "typecount": 2,
  "externalTypes": {
    "jsii$_aws_cdk_rds$.InstanceProps": {
      "docs": {
        "comment": "Instance properties for database instances"
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "What type of instance to start for the replicas"
          },
          "name": "instanceType",
          "type": {
            "fqn": "jsii$_aws_cdk_ec2$.InstanceType"
          }
        },
        {
          "docs": {
            "comment": "What subnets to run the RDS instances in.\n\nMust be at least 2 subnets in two different AZs."
          },
          "name": "vpc",
          "type": {
            "fqn": "jsii$_aws_cdk_ec2$.VpcNetworkRef"
          }
        },
        {
          "docs": {
            "comment": "Where to place the instances within the VPC"
          },
          "name": "vpcPlacement",
          "type": {
            "fqn": "jsii$_aws_cdk_ec2$.VpcPlacementStrategy",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_rds$.InstanceProps",
      "module": "jsii$_aws_cdk_rds$",
      "namespace": "jsii$_aws_cdk_rds$",
      "name": "InstanceProps",
      "datatype": true
    },
    "jsii$_aws_cdk_rds$.Login": {
      "docs": {
        "comment": "Username and password combination"
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "Username"
          },
          "name": "username",
          "type": {
            "fqn": "jsii$_aws_cdk_rds$.Username"
          }
        },
        {
          "docs": {
            "comment": "Password\n\nDo not put passwords in your CDK code directly. Import it from a Stack\nParameter or the SSM Parameter Store instead."
          },
          "name": "password",
          "type": {
            "fqn": "jsii$_aws_cdk_rds$.Password"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_rds$.Login",
      "module": "jsii$_aws_cdk_rds$",
      "namespace": "jsii$_aws_cdk_rds$",
      "name": "Login",
      "datatype": true
    },
    "jsii$_aws_cdk_resources$.kms.KeyArn": {
      "kind": "class",
      "fqn": "jsii$_aws_cdk_resources$.kms.KeyArn",
      "module": "jsii$_aws_cdk_resources$",
      "namespace": "jsii$_aws_cdk_resources$.kms",
      "name": "KeyArn",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Arn"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_core$.Construct": {
      "docs": {
        "comment": "Represents the building block of the construct graph.\nWhen a construct is created, it is always added as a child"
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "Returns the parent of this node or undefined if this is a root node."
          },
          "name": "parent",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.Construct",
            "optional": true
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The name of this construct"
          },
          "name": "name",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "All direct children of this construct."
          },
          "name": "children",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              },
              "kind": "array"
            }
          },
          "immutable": true
        },
        {
          "docs": {
            "returns": "/-separated path of this Construct.",
            "comment": "Returns the path of all constructs from root to this construct, in string form."
          },
          "name": "path",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "An array of metadata objects associated with this construct.\nThis can be used, for example, to implement support for deprecation notices, source mapping, etc."
          },
          "name": "metadata",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.MetadataEntry"
              },
              "kind": "array"
            }
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "docs": {
            "comment": "Returns a string representation of this construct."
          },
          "name": "toString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "parameters": [
            {
              "name": "depth",
              "type": {
                "primitive": "number",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Returns a string with a tree representation of this construct and it's children."
          },
          "name": "toTreeString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "a child by path or undefined if not found.",
            "comment": "Return a descendant by path, or undefined"
          },
          "name": "tryFindChild",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct",
            "optional": true
          }
        },
        {
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "Child with the given path.",
            "comment": "Return a descendant by path\n\nThrows an exception if the descendant is not found."
          },
          "name": "findChild",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "key The context key",
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "value The context value",
                "comment": "The context value"
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "This can be used to set contextual values.\nContext must be set before any children are added, since children may consult context info during construction.\nIf the key already exists, it will be overridden."
          },
          "name": "setContext"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "key The context key",
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "The context value or undefined",
            "comment": "Retrieves a value from tree context.\n\nContext is usually initialized at the root, but can be overridden at any point in the tree."
          },
          "name": "getContext",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Retrieve a value from tree-global context\n\nIt is an error if the context object is not available."
          },
          "name": "requireContext",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "type a string denoting the type of metadata",
                "comment": "a string denoting the type of metadata"
              },
              "name": "type",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "data the value of the metadata (can be a Token). If null/undefined, metadata will not be added.",
                "comment": "the value of the metadata (can be a Token). If null/undefined, metadata will not be added."
              },
              "name": "data",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "param": "from a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)",
                "comment": "a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)"
              },
              "name": "from",
              "type": {
                "primitive": "any",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Adds a metadata entry to this construct.\nEntries are arbitrary values and will also include a stack trace to allow tracing back to\nthe code location for when the entry was added. It can be used, for example, to include source\nmapping in CloudFormation templates to improve diagnostics."
          },
          "name": "addMetadata",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "message The warning message.",
                "comment": "The warning message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Adds a { warning: <message> } metadata entry to this construct."
          },
          "name": "addWarning",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "docs": {
            "returns": "An array of validation error messages, or an empty array if there the construct is valid.",
            "comment": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis."
          },
          "name": "validate",
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "returns": "A list of validation errors. If the list is empty, all constructs are valid.",
            "comment": "Invokes 'validate' on all child constructs and then on this construct (depth-first)."
          },
          "name": "validateTree",
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.ValidationError"
              },
              "kind": "array"
            }
          }
        },
        {
          "parameters": [
            {
              "name": "upTo",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Return the ancestors (including self) of this Construct up until and excluding the indicated component"
          },
          "name": "ancestors",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              },
              "kind": "array"
            }
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "props The props bag.",
                "comment": "The props bag."
              },
              "name": "props",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "param": "name The name of the required property.",
                "comment": "The name of the required property."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Throws if the `props` bag doesn't include the property `name`.\nIn the future we can add some type-checking here, maybe even auto-generate during compilation."
          },
          "name": "required",
          "protected": true,
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "child The child construct",
                "comment": "The child construct"
              },
              "name": "child",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "name": "childName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "The resolved path part name of the child",
            "comment": "Adds a child construct to this node."
          },
          "name": "addChild",
          "protected": true
        },
        {
          "docs": {
            "comment": "Locks this construct from allowing more children to be added. After this\ncall, no more children can be added to this construct or to any children."
          },
          "name": "lock",
          "protected": true
        },
        {
          "docs": {
            "comment": "Unlocks this costruct and allows mutations (adding children)."
          },
          "name": "unlock",
          "protected": true
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.Construct",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "Construct",
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_ec2$.IConnectable": {
      "docs": {
        "comment": "The goal of this module is to make possible to write statements like this:\n\n    ```ts\n *    database.connections.allowFrom(fleet);\n *    fleet.connections.allowTo(database);\n *    rdgw.connections.allowFromCidrIp('0.3.1.5/86');\n *    rgdw.connections.allowTrafficTo(fleet, new AllPorts());\n *    ```\n\nThe insight here is that some connecting peers have information on what ports should\nbe involved in the connection, and some don't.\n\nConstructs will make their `connections` property to be equal to an instance of\neither `Connections` or `ConnectionsWithDefault`.\nAn object that has a Connections object"
      },
      "kind": "interface",
      "properties": [
        {
          "name": "connections",
          "type": {
            "fqn": "jsii$_aws_cdk_ec2$.IConnections"
          },
          "immutable": true
        }
      ],
      "fqn": "jsii$_aws_cdk_ec2$.IConnectable",
      "module": "jsii$_aws_cdk_ec2$",
      "namespace": "jsii$_aws_cdk_ec2$",
      "name": "IConnectable",
      "datatype": true
    },
    "jsii$_aws_cdk_rds$.ClusterIdentifier": {
      "docs": {
        "comment": "Identifier of a cluster"
      },
      "kind": "class",
      "fqn": "jsii$_aws_cdk_rds$.ClusterIdentifier",
      "module": "jsii$_aws_cdk_rds$",
      "namespace": "jsii$_aws_cdk_rds$",
      "name": "ClusterIdentifier",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_rds$.InstanceIdentifier": {
      "docs": {
        "comment": "Identifier of an instance"
      },
      "kind": "class",
      "fqn": "jsii$_aws_cdk_rds$.InstanceIdentifier",
      "module": "jsii$_aws_cdk_rds$",
      "namespace": "jsii$_aws_cdk_rds$",
      "name": "InstanceIdentifier",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_rds$.Endpoint": {
      "docs": {
        "comment": "Connection endpoint of a database cluster or instance\n\nConsists of a combination of hostname and port."
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The hostname of the endpoint"
          },
          "name": "hostname",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.rds.DBClusterEndpointAddress"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The port of the endpoint"
          },
          "name": "port",
          "type": {
            "fqn": "jsii$_aws_cdk_rds$.Port"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The combination of \"HOSTNAME:PORT\" for this endpoint"
          },
          "name": "socketAddress",
          "type": {
            "fqn": "jsii$_aws_cdk_rds$.SocketAddress"
          },
          "immutable": true
        }
      ],
      "fqn": "jsii$_aws_cdk_rds$.Endpoint",
      "module": "jsii$_aws_cdk_rds$",
      "namespace": "jsii$_aws_cdk_rds$",
      "name": "Endpoint",
      "initializer": {
        "parameters": [
          {
            "name": "address",
            "type": {
              "fqn": "jsii$_aws_cdk_resources$.rds.DBClusterEndpointAddress"
            }
          },
          {
            "name": "port",
            "type": {
              "fqn": "jsii$_aws_cdk_rds$.Port"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_ec2$.DefaultConnections": {
      "docs": {
        "comment": "A class to orchestrate connections that already has default ports"
      },
      "kind": "class",
      "properties": [
        {
          "name": "defaultPortRange",
          "type": {
            "fqn": "jsii$_aws_cdk_ec2$.IPortRange"
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "name": "other",
              "type": {
                "fqn": "jsii$_aws_cdk_ec2$.IConnectable"
              }
            },
            {
              "name": "description",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Allow connections from the peer on our default port\n\nEven if the peer has a default port, we will always use our default port."
          },
          "name": "allowDefaultPortFrom"
        },
        {
          "parameters": [
            {
              "name": "description",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Allow hosts inside the security group to connect to each other"
          },
          "name": "allowDefaultPortInternally"
        },
        {
          "parameters": [
            {
              "name": "description",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Allow default connections from all IPv4 ranges"
          },
          "name": "allowDefaultPortFromAnyIpv4"
        }
      ],
      "fqn": "jsii$_aws_cdk_ec2$.DefaultConnections",
      "module": "jsii$_aws_cdk_ec2$",
      "namespace": "jsii$_aws_cdk_ec2$",
      "name": "DefaultConnections",
      "base": {
        "fqn": "jsii$_aws_cdk_ec2$.Connections"
      },
      "initializer": {
        "parameters": [
          {
            "name": "securityGroup",
            "type": {
              "fqn": "jsii$_aws_cdk_ec2$.ISecurityGroup"
            }
          },
          {
            "name": "defaultPortRangeProvider",
            "type": {
              "fqn": "jsii$_aws_cdk_ec2$.IDefaultConnectable"
            }
          }
        ],
        "initializer": true
      }
    }
  },
  "name": "jsii$_aws_cdk_neptune$",
  "package": "@aws-cdk/neptune",
  "version": "0.7.2-beta",
  "dependencies": {
    "jsii$_aws_cdk_core$": {
      "package": "@aws-cdk/core",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_ec2$": {
      "package": "@aws-cdk/ec2",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_iam$": {
      "package": "@aws-cdk/iam",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_rds$": {
      "package": "@aws-cdk/rds",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_resources$": {
      "package": "@aws-cdk/resources",
      "version": "0.7.2-beta"
    }
  },
  "names": {
    "java": "com.amazonaws.cdk.neptune",
    "dotnet": "AWS.Cdk.Neptune",
    "js": "@aws-cdk/neptune"
  },
  "nativenames": {
    "jsii$_aws_cdk_core$": {
      "java": "com.amazonaws.cdk",
      "dotnet": "AWS.Cdk",
      "js": "@aws-cdk/core"
    },
    "jsii$_aws_cdk_ec2$": {
      "java": "com.amazonaws.cdk.ec2",
      "dotnet": "AWS.Cdk.Ec2",
      "js": "@aws-cdk/ec2"
    },
    "jsii$_aws_cdk_iam$": {
      "java": "com.amazonaws.cdk.iam",
      "dotnet": "AWS.Cdk.Iam",
      "js": "@aws-cdk/iam"
    },
    "jsii$_aws_cdk_rds$": {
      "java": "com.amazonaws.cdk.rds",
      "dotnet": "AWS.Cdk.Rds",
      "js": "@aws-cdk/rds"
    },
    "jsii$_aws_cdk_resources$": {
      "java": "com.amazonaws.cdk.resources",
      "dotnet": "AWS.Cdk.Resources",
      "js": "@aws-cdk/resources"
    },
    "jsii$_aws_cdk_neptune$": {
      "java": "com.amazonaws.cdk.neptune",
      "dotnet": "AWS.Cdk.Neptune",
      "js": "@aws-cdk/neptune"
    }
  },
  "code": "var jsii$_aws_cdk_neptune$ =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(1);\nconst rds_1 = __webpack_require__(2);\n/**\n * Neptune Graph Database cluster\n *\n * Creates a new Neptune database cluster with a given number of replicas.\n */\nclass NeptuneDatabase extends core_1.Construct {\n    constructor(parent, name, props) {\n        super(parent, name);\n        /**\n         * Identifiers of the replicas\n         */\n        this.instanceIdentifiers = [];\n        /**\n         * Endpoints which address each individual replica.\n         */\n        this.instanceEndpoints = [];\n        this.cluster = new rds_1.DatabaseCluster(this, 'Cluster', {\n            engine: rds_1.DatabaseClusterEngine.Aurora,\n            instances: props.instances,\n            instanceProps: props.instanceProps,\n            masterUser: props.masterUser,\n            port: props.port,\n            clusterIdentifier: props.clusterIdentifier,\n            instanceIdentifierBase: props.instanceIdentifierBase,\n            defaultDatabaseName: props.defaultDatabaseName,\n            kmsKeyArn: props.kmsKeyArn,\n            parameters: {},\n            preferredMaintenanceWindow: props.preferredMaintenanceWindow,\n        });\n        this.clusterIdentifier = this.cluster.clusterIdentifier;\n        this.instanceIdentifiers = this.cluster.instanceIdentifiers;\n        this.clusterEndpoint = this.cluster.clusterEndpoint;\n        this.readerEndpoint = this.cluster.readerEndpoint;\n        this.connections = this.cluster.connections;\n    }\n}\nexports.NeptuneDatabase = NeptuneDatabase;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_core$;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_rds$;\n\n/***/ })\n/******/ ]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"
}
