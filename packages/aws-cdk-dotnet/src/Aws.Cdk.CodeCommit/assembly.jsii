{
  "schema": "jsii/1.0",
  "types": {
    "jsii$_aws_cdk_codecommit$.RepositoryRefProps": {
      "docs": {
        "comment": "Properties for the {@link RepositoryRef.import} method."
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "The name of an existing CodeCommit Repository that we are referencing.\nMust be in the same account and region as the root Stack."
          },
          "name": "repositoryName",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.codecommit.RepositoryName"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codecommit$.RepositoryRefProps",
      "module": "jsii$_aws_cdk_codecommit$",
      "namespace": "jsii$_aws_cdk_codecommit$",
      "name": "RepositoryRefProps",
      "datatype": true
    },
    "jsii$_aws_cdk_codecommit$.RepositoryRef": {
      "docs": {
        "comment": "Represents a reference to a CodeCommit Repository.\n\nIf you want to create a new Repository managed alongside your CDK code,\nuse the {@link Repository} class.\n\nIf you want to reference an already existing Repository,\nuse the {@link RepositoryRef.import} method."
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of this Repository. "
          },
          "name": "repositoryArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.codecommit.RepositoryArn"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "The human-visible name of this Repository. "
          },
          "name": "repositoryName",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.codecommit.RepositoryName"
          },
          "immutable": true,
          "abstract": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "docs": {
                "param": "parent the parent Construct for the Repository",
                "comment": "the parent Construct for the Repository"
              },
              "name": "parent",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "docs": {
                "param": "name the name of the Repository Construct",
                "comment": "the name of the Repository Construct"
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "props the properties used to identify the existing Repository",
                "comment": "the properties used to identify the existing Repository"
              },
              "name": "props",
              "type": {
                "fqn": "jsii$_aws_cdk_codecommit$.RepositoryRefProps"
              }
            }
          ],
          "docs": {
            "returns": "a reference to the existing Repository",
            "comment": "Import a Repository defined either outside the CDK, or in a different Stack\n(exported with the {@link export} method)."
          },
          "name": "import",
          "static": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_codecommit$.RepositoryRef"
          }
        },
        {
          "docs": {
            "see": "import",
            "comment": "Exports this Repository. Allows the same Repository to be used in 2 different Stacks."
          },
          "name": "export",
          "returns": {
            "fqn": "jsii$_aws_cdk_codecommit$.RepositoryRefProps"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Defines a CloudWatch event rule which triggers for repository events. Use\n`rule.addEventPattern(pattern)` to specify a filter."
          },
          "name": "onEvent",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Defines a CloudWatch event rule which triggers when a \"CodeCommit\nRepository State Change\" event occurs."
          },
          "name": "onStateChange",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Defines a CloudWatch event rule which triggers when a reference is\ncreated (i.e. a new brach/tag is created) to the repository."
          },
          "name": "onReferenceCreated",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Defines a CloudWatch event rule which triggers when a reference is\nupdated (i.e. a commit is pushed to an existig branch) from the repository."
          },
          "name": "onReferenceUpdated",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Defines a CloudWatch event rule which triggers when a reference is\ndelete (i.e. a branch/tag is deleted) from the repository."
          },
          "name": "onReferenceDeleted",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Defines a CloudWatch event rule which triggers when a pull request state is changed."
          },
          "name": "onPullRequestStateChange",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Defines a CloudWatch event rule which triggers when a comment is made on a pull request."
          },
          "name": "onCommentOnPullRequest",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Defines a CloudWatch event rule which triggers when a comment is made on a commit."
          },
          "name": "onCommentOnCommit",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "target The target of the event",
                "comment": "The target of the event"
              },
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "docs": {
                "param": "branch The branch to monitor. Defaults to all branches.",
                "comment": "The branch to monitor. Defaults to all branches."
              },
              "name": "branch",
              "type": {
                "primitive": "string",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Defines a CloudWatch event rule which triggers when a commit is pushed to a branch."
          },
          "name": "onCommit",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codecommit$.RepositoryRef",
      "module": "jsii$_aws_cdk_codecommit$",
      "namespace": "jsii$_aws_cdk_codecommit$",
      "name": "RepositoryRef",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "abstract": true,
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codecommit$.RepositoryProps": {
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "Name of the repository. This property is required for all repositories."
          },
          "name": "repositoryName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "A description of the repository. Use the description to identify the\npurpose of the repository."
          },
          "name": "description",
          "type": {
            "primitive": "string",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codecommit$.RepositoryProps",
      "module": "jsii$_aws_cdk_codecommit$",
      "namespace": "jsii$_aws_cdk_codecommit$",
      "name": "RepositoryProps",
      "datatype": true
    },
    "jsii$_aws_cdk_codecommit$.Repository": {
      "docs": {
        "comment": "Provides a CodeCommit Repository"
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of this Repository. "
          },
          "name": "repositoryArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.codecommit.RepositoryArn"
          },
          "immutable": true
        },
        {
          "name": "repositoryCloneUrlHttp",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.codecommit.RepositoryCloneUrlHttp"
          },
          "immutable": true
        },
        {
          "name": "repositoryCloneUrlSsh",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.codecommit.RepositoryCloneUrlSsh"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The human-visible name of this Repository. "
          },
          "name": "repositoryName",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.codecommit.RepositoryName"
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "docs": {
                "param": "arn Arn of the resource that repository events will notify",
                "comment": "Arn of the resource that repository events will notify"
              },
              "name": "arn",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "options Trigger options to run actions",
                "comment": "Trigger options to run actions"
              },
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_codecommit$.RepositoryTriggerOptions",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Create a trigger to notify another service to run actions on repository events."
          },
          "name": "notify",
          "returns": {
            "fqn": "jsii$_aws_cdk_codecommit$.Repository"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codecommit$.Repository",
      "module": "jsii$_aws_cdk_codecommit$",
      "namespace": "jsii$_aws_cdk_codecommit$",
      "name": "Repository",
      "base": {
        "fqn": "jsii$_aws_cdk_codecommit$.RepositoryRef"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_codecommit$.RepositoryProps"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codecommit$.RepositoryTriggerOptions": {
      "docs": {
        "comment": "Creates for a repository trigger to an SNS topic or Lambda function."
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "A name for the trigger.Triggers on a repository must have unique names"
          },
          "name": "name",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The repository events for which AWS CodeCommit sends information to the\ntarget, which you specified in the DestinationArn property.If you don't\nspecify events, the trigger runs for all repository events."
          },
          "name": "events",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_codecommit$.RepositoryEventTrigger"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The names of the branches in the AWS CodeCommit repository that contain\nevents that you want to include in the trigger. If you don't specify at\nleast one branch, the trigger applies to all branches."
          },
          "name": "branches",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "When an event is triggered, additional information that AWS CodeCommit\nincludes when it sends information to the target."
          },
          "name": "customData",
          "type": {
            "primitive": "string",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codecommit$.RepositoryTriggerOptions",
      "module": "jsii$_aws_cdk_codecommit$",
      "namespace": "jsii$_aws_cdk_codecommit$",
      "name": "RepositoryTriggerOptions",
      "datatype": true
    },
    "jsii$_aws_cdk_codecommit$.RepositoryEventTrigger": {
      "docs": {
        "comment": "Repository events that will cause the trigger to run actions in another service."
      },
      "kind": "enum",
      "members": [
        {
          "name": "All"
        },
        {
          "name": "UpdateRef"
        },
        {
          "name": "CreateRef"
        },
        {
          "name": "DeleteRef"
        }
      ],
      "fqn": "jsii$_aws_cdk_codecommit$.RepositoryEventTrigger",
      "module": "jsii$_aws_cdk_codecommit$",
      "namespace": "jsii$_aws_cdk_codecommit$",
      "name": "RepositoryEventTrigger"
    }
  },
  "nametree": {
    "jsii$_aws_cdk_codecommit$": {
      "RepositoryRefProps": {
        "_": "jsii$_aws_cdk_codecommit$.RepositoryRefProps"
      },
      "RepositoryRef": {
        "_": "jsii$_aws_cdk_codecommit$.RepositoryRef"
      },
      "RepositoryProps": {
        "_": "jsii$_aws_cdk_codecommit$.RepositoryProps"
      },
      "Repository": {
        "_": "jsii$_aws_cdk_codecommit$.Repository"
      },
      "RepositoryTriggerOptions": {
        "_": "jsii$_aws_cdk_codecommit$.RepositoryTriggerOptions"
      },
      "RepositoryEventTrigger": {
        "_": "jsii$_aws_cdk_codecommit$.RepositoryEventTrigger"
      }
    }
  },
  "typecount": 6,
  "externalTypes": {
    "jsii$_aws_cdk_resources$.codecommit.RepositoryName": {
      "kind": "class",
      "fqn": "jsii$_aws_cdk_resources$.codecommit.RepositoryName",
      "module": "jsii$_aws_cdk_resources$",
      "namespace": "jsii$_aws_cdk_resources$.codecommit",
      "name": "RepositoryName",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_core$.Construct": {
      "docs": {
        "comment": "Represents the building block of the construct graph.\nWhen a construct is created, it is always added as a child"
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "Returns the parent of this node or undefined if this is a root node."
          },
          "name": "parent",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.Construct",
            "optional": true
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The name of this construct"
          },
          "name": "name",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "All direct children of this construct."
          },
          "name": "children",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              },
              "kind": "array"
            }
          },
          "immutable": true
        },
        {
          "docs": {
            "returns": "/-separated path of this Construct.",
            "comment": "Returns the path of all constructs from root to this construct, in string form."
          },
          "name": "path",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "An array of metadata objects associated with this construct.\nThis can be used, for example, to implement support for deprecation notices, source mapping, etc."
          },
          "name": "metadata",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.MetadataEntry"
              },
              "kind": "array"
            }
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "docs": {
            "comment": "Returns a string representation of this construct."
          },
          "name": "toString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "parameters": [
            {
              "name": "depth",
              "type": {
                "primitive": "number",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Returns a string with a tree representation of this construct and it's children."
          },
          "name": "toTreeString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "a child by path or undefined if not found.",
            "comment": "Return a descendant by path, or undefined"
          },
          "name": "tryFindChild",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct",
            "optional": true
          }
        },
        {
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "Child with the given path.",
            "comment": "Return a descendant by path\n\nThrows an exception if the descendant is not found."
          },
          "name": "findChild",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "key The context key",
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "value The context value",
                "comment": "The context value"
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "This can be used to set contextual values.\nContext must be set before any children are added, since children may consult context info during construction.\nIf the key already exists, it will be overridden."
          },
          "name": "setContext"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "key The context key",
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "The context value or undefined",
            "comment": "Retrieves a value from tree context.\n\nContext is usually initialized at the root, but can be overridden at any point in the tree."
          },
          "name": "getContext",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Retrieve a value from tree-global context\n\nIt is an error if the context object is not available."
          },
          "name": "requireContext",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "type a string denoting the type of metadata",
                "comment": "a string denoting the type of metadata"
              },
              "name": "type",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "data the value of the metadata (can be a Token). If null/undefined, metadata will not be added.",
                "comment": "the value of the metadata (can be a Token). If null/undefined, metadata will not be added."
              },
              "name": "data",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "param": "from a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)",
                "comment": "a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)"
              },
              "name": "from",
              "type": {
                "primitive": "any",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Adds a metadata entry to this construct.\nEntries are arbitrary values and will also include a stack trace to allow tracing back to\nthe code location for when the entry was added. It can be used, for example, to include source\nmapping in CloudFormation templates to improve diagnostics."
          },
          "name": "addMetadata",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "message The warning message.",
                "comment": "The warning message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Adds a { warning: <message> } metadata entry to this construct."
          },
          "name": "addWarning",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "docs": {
            "returns": "An array of validation error messages, or an empty array if there the construct is valid.",
            "comment": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis."
          },
          "name": "validate",
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "returns": "A list of validation errors. If the list is empty, all constructs are valid.",
            "comment": "Invokes 'validate' on all child constructs and then on this construct (depth-first)."
          },
          "name": "validateTree",
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.ValidationError"
              },
              "kind": "array"
            }
          }
        },
        {
          "parameters": [
            {
              "name": "upTo",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Return the ancestors (including self) of this Construct up until and excluding the indicated component"
          },
          "name": "ancestors",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              },
              "kind": "array"
            }
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "props The props bag.",
                "comment": "The props bag."
              },
              "name": "props",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "param": "name The name of the required property.",
                "comment": "The name of the required property."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Throws if the `props` bag doesn't include the property `name`.\nIn the future we can add some type-checking here, maybe even auto-generate during compilation."
          },
          "name": "required",
          "protected": true,
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "child The child construct",
                "comment": "The child construct"
              },
              "name": "child",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "name": "childName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "The resolved path part name of the child",
            "comment": "Adds a child construct to this node."
          },
          "name": "addChild",
          "protected": true
        },
        {
          "docs": {
            "comment": "Locks this construct from allowing more children to be added. After this\ncall, no more children can be added to this construct or to any children."
          },
          "name": "lock",
          "protected": true
        },
        {
          "docs": {
            "comment": "Unlocks this costruct and allows mutations (adding children)."
          },
          "name": "unlock",
          "protected": true
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.Construct",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "Construct",
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_resources$.codecommit.RepositoryArn": {
      "kind": "class",
      "fqn": "jsii$_aws_cdk_resources$.codecommit.RepositoryArn",
      "module": "jsii$_aws_cdk_resources$",
      "namespace": "jsii$_aws_cdk_resources$.codecommit",
      "name": "RepositoryArn",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Arn"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_events$.EventRule": {
      "docs": {
        "comment": "Defines a CloudWatch Event Rule in this stack."
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The value of the event rule Amazon Resource Name (ARN), such as\narn:aws:events:us-east-2:123456789012:rule/example."
          },
          "name": "ruleArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.events.RuleArn"
          }
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "inputOptions",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.TargetInputTemplate",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Adds a target to the rule. The abstract class RuleTarget can be extended to define new\ntargets.\n\nNo-op if target is undefined."
          },
          "name": "addTarget"
        },
        {
          "parameters": [
            {
              "name": "eventPattern",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventPattern",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Adds an event pattern filter to this rule. If a pattern was already specified,\nthese values are merged into the existing pattern.\n\nFor example, if the rule already contains the pattern:\n\n      {\n          \"resources\": [ \"r1\" ],\n          \"detail\": {\n              \"hello\": [ 1 ]\n          }\n      }\n\nAnd `addEventPattern` is called with the pattern:\n\n      {\n          \"resources\": [ \"r2\" ],\n          \"detail\": {\n              \"foo\": [ \"bar\" ]\n          }\n      }\n\nThe resulting event pattern will be:\n\n      {\n          \"resources\": [ \"r1\", \"r2\" ],\n          \"detail\": {\n              \"hello\": [ 1 ],\n              \"foo\": [ \"bar\" ]\n          }\n      }"
          },
          "name": "addEventPattern"
        },
        {
          "docs": {
            "comment": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis."
          },
          "name": "validate",
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_events$.EventRule",
      "module": "jsii$_aws_cdk_events$",
      "namespace": "jsii$_aws_cdk_events$",
      "name": "EventRule",
      "base": {
        "fqn": "jsii$_aws_cdk_events$.EventRuleRef"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
              "optional": true
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_events$.IEventRuleTarget": {
      "docs": {
        "comment": "An abstract target for EventRules."
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "Returns the rule target specification.\nNOTE: Do not use the various `inputXxx` options. They can be set in a call to `addTarget`."
          },
          "name": "eventRuleTarget",
          "type": {
            "fqn": "jsii$_aws_cdk_events$.EventRuleTarget"
          },
          "immutable": true
        }
      ],
      "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
      "module": "jsii$_aws_cdk_events$",
      "namespace": "jsii$_aws_cdk_events$",
      "name": "IEventRuleTarget",
      "datatype": true
    },
    "jsii$_aws_cdk_events$.EventRuleProps": {
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "A description of the rule's purpose."
          },
          "name": "description",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "A name for the rule. If you don't specify a name, AWS CloudFormation\ngenerates a unique physical ID and uses that ID for the rule name. For\nmore information, see Name Type."
          },
          "name": "ruleName",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "Rule is enabled",
            "comment": "Indicates whether the rule is enabled."
          },
          "name": "enabled",
          "type": {
            "primitive": "boolean",
            "optional": true
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\n\nYou must specify this property, the `eventPattern` property, or both.",
            "comment": "The schedule or rate (frequency) that determines when CloudWatch Events\nruns the rule. For more information, see Schedule Expression Syntax for\nRules in the Amazon CloudWatch User Guide."
          },
          "name": "scheduleExpression",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CloudWatchEventsandEventPatterns.html\n\nYou must specify this property (either via props or via\n`addEventPattern`), the `scheduleExpression` property, or both. The\nmethod `addEventPattern` can be used to add filter values to the event\npattern.",
            "comment": "Describes which events CloudWatch Events routes to the specified target.\nThese routed events are matched events. For more information, see Events\nand Event Patterns in the Amazon CloudWatch User Guide."
          },
          "name": "eventPattern",
          "type": {
            "fqn": "jsii$_aws_cdk_events$.EventPattern",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Targets to invoke when this rule matches an event.\n\nInput will be the full matched event. If you wish to specify custom\ntarget input, use `addTarget(target[, inputOptions])`."
          },
          "name": "targets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget"
              },
              "kind": "array"
            },
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
      "module": "jsii$_aws_cdk_events$",
      "namespace": "jsii$_aws_cdk_events$",
      "name": "EventRuleProps",
      "datatype": true
    },
    "jsii$_aws_cdk_resources$.codecommit.RepositoryCloneUrlHttp": {
      "kind": "class",
      "fqn": "jsii$_aws_cdk_resources$.codecommit.RepositoryCloneUrlHttp",
      "module": "jsii$_aws_cdk_resources$",
      "namespace": "jsii$_aws_cdk_resources$.codecommit",
      "name": "RepositoryCloneUrlHttp",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_resources$.codecommit.RepositoryCloneUrlSsh": {
      "kind": "class",
      "fqn": "jsii$_aws_cdk_resources$.codecommit.RepositoryCloneUrlSsh",
      "module": "jsii$_aws_cdk_resources$",
      "namespace": "jsii$_aws_cdk_resources$.codecommit",
      "name": "RepositoryCloneUrlSsh",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    }
  },
  "name": "jsii$_aws_cdk_codecommit$",
  "package": "@aws-cdk/codecommit",
  "version": "0.7.2-beta",
  "dependencies": {
    "jsii$_aws_cdk_core$": {
      "package": "@aws-cdk/core",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_events$": {
      "package": "@aws-cdk/events",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_iam$": {
      "package": "@aws-cdk/iam",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_resources$": {
      "package": "@aws-cdk/resources",
      "version": "0.7.2-beta"
    }
  },
  "names": {
    "java": "com.amazonaws.cdk.codecommit",
    "dotnet": "Aws.Cdk.CodeCommit",
    "js": "@aws-cdk/codecommit"
  },
  "nativenames": {
    "jsii$_aws_cdk_core$": {
      "java": "com.amazonaws.cdk",
      "dotnet": "Aws.Cdk",
      "js": "@aws-cdk/core"
    },
    "jsii$_aws_cdk_events$": {
      "java": "com.amazonaws.cdk.events",
      "dotnet": "Aws.Cdk.Events",
      "js": "@aws-cdk/events"
    },
    "jsii$_aws_cdk_iam$": {
      "java": "com.amazonaws.cdk.iam",
      "dotnet": "Aws.Cdk.Iam",
      "js": "@aws-cdk/iam"
    },
    "jsii$_aws_cdk_resources$": {
      "java": "com.amazonaws.cdk.resources",
      "dotnet": "Aws.Cdk.Resources",
      "js": "@aws-cdk/resources"
    },
    "jsii$_aws_cdk_codecommit$": {
      "java": "com.amazonaws.cdk.codecommit",
      "dotnet": "Aws.Cdk.CodeCommit",
      "js": "@aws-cdk/codecommit"
    }
  },
  "readme": {
    "markdown": "## AWS CodeCommit Construct Library\n\nTo add a CodeCommit Repository to your stack:\n\n```ts\nimport { Repository } from '@aws-cdk/codecommit';\n\nconst repository = new Repository(stack, 'Repository' ,{\n    repositoryName: 'MyRepositoryName'\n});\n```\n\nTo add an SNS trigger to your repository:\n\n```ts\nimport { Repository } from '@aws-cdk/codecommit';\n\nconst repository = new Repository(stack, 'Repository', {\n    repositoryName: 'MyRepositoryName'\n});\n\n// trigger is established for all repository actions on all branches by default.\nrepository.notify('arn:aws:sns:*:123456789012:my_topic');\n```\n\n### Events\n\nCodeCommit repositories emit CloudWatch events for certain activity. Use the\n`repo.onXxx` methods to define rules that trigger on these events and invoke\ntargets as a result:\n\n```ts\n// starts a CodeBuild project when a commit is pushed to the \"master\" branch of the repo\nrepo.onCommit('CommitToMaster', buildProject, 'master');\n\n// publishes a message to an SNS topic when a comment is made on a pull request\nconst rule = repo.onCommentOnPullRequest('CommentOnPullRequest');\nrule.addTarget(myTopic);\n```\n"
  },
  "code": "var jsii$_aws_cdk_codecommit$ =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(1));\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(2);\nconst events_1 = __webpack_require__(3);\nconst resources_1 = __webpack_require__(4);\n/**\n * Represents a reference to a CodeCommit Repository.\n *\n * If you want to create a new Repository managed alongside your CDK code,\n * use the {@link Repository} class.\n *\n * If you want to reference an already existing Repository,\n * use the {@link RepositoryRef.import} method.\n */\nclass RepositoryRef extends core_1.Construct {\n    /**\n     * Import a Repository defined either outside the CDK, or in a different Stack\n     * (exported with the {@link export} method).\n     *\n     * @param parent the parent Construct for the Repository\n     * @param name the name of the Repository Construct\n     * @param props the properties used to identify the existing Repository\n     * @returns a reference to the existing Repository\n     */\n    static import(parent, name, props) {\n        return new ImportedRepositoryRef(parent, name, props);\n    }\n    /**\n     * Exports this Repository. Allows the same Repository to be used in 2 different Stacks.\n     *\n     * @see import\n     */\n    export() {\n        return {\n            repositoryName: new core_1.Output(this, 'RepositoryName', { value: this.repositoryName }).makeImportValue(),\n        };\n    }\n    /**\n     * Defines a CloudWatch event rule which triggers for repository events. Use\n     * `rule.addEventPattern(pattern)` to specify a filter.\n     */\n    onEvent(name, target, options) {\n        const rule = new events_1.EventRule(this, name, options);\n        rule.addEventPattern({\n            source: ['aws.codecommit'],\n            resources: [this.repositoryArn]\n        });\n        rule.addTarget(target);\n        return rule;\n    }\n    /**\n     * Defines a CloudWatch event rule which triggers when a \"CodeCommit\n     * Repository State Change\" event occurs.\n     */\n    onStateChange(name, target, options) {\n        const rule = this.onEvent(name, target, options);\n        rule.addEventPattern({\n            detailType: ['CodeCommit Repository State Change'],\n        });\n        return rule;\n    }\n    /**\n     * Defines a CloudWatch event rule which triggers when a reference is\n     * created (i.e. a new brach/tag is created) to the repository.\n     */\n    onReferenceCreated(name, target, options) {\n        const rule = this.onStateChange(name, target, options);\n        rule.addEventPattern({ detail: { event: ['referenceCreated'] } });\n        return rule;\n    }\n    /**\n     * Defines a CloudWatch event rule which triggers when a reference is\n     * updated (i.e. a commit is pushed to an existig branch) from the repository.\n     */\n    onReferenceUpdated(name, target, options) {\n        const rule = this.onStateChange(name, target, options);\n        rule.addEventPattern({ detail: { event: ['referenceUpdated'] } });\n        return rule;\n    }\n    /**\n     * Defines a CloudWatch event rule which triggers when a reference is\n     * delete (i.e. a branch/tag is deleted) from the repository.\n     */\n    onReferenceDeleted(name, target, options) {\n        const rule = this.onStateChange(name, target, options);\n        rule.addEventPattern({ detail: { event: ['referenceDeleted'] } });\n        return rule;\n    }\n    /**\n     * Defines a CloudWatch event rule which triggers when a pull request state is changed.\n     */\n    onPullRequestStateChange(name, target, options) {\n        const rule = this.onEvent(name, target, options);\n        rule.addEventPattern({ detailType: ['CodeCommit Pull Request State Change'] });\n        return rule;\n    }\n    /**\n     * Defines a CloudWatch event rule which triggers when a comment is made on a pull request.\n     */\n    onCommentOnPullRequest(name, target, options) {\n        const rule = this.onEvent(name, target, options);\n        rule.addEventPattern({ detailType: ['CodeCommit Comment on Pull Request'] });\n        return rule;\n    }\n    /**\n     * Defines a CloudWatch event rule which triggers when a comment is made on a commit.\n     */\n    onCommentOnCommit(name, target, options) {\n        const rule = this.onEvent(name, target, options);\n        rule.addEventPattern({ detailType: ['CodeCommit Comment on Commit'] });\n        return rule;\n    }\n    /**\n     * Defines a CloudWatch event rule which triggers when a commit is pushed to a branch.\n     * @param target The target of the event\n     * @param branch The branch to monitor. Defaults to all branches.\n     */\n    onCommit(name, target, branch) {\n        const rule = this.onReferenceUpdated(name, target);\n        if (branch) {\n            rule.addEventPattern({ detail: { referenceName: [branch] } });\n        }\n        return rule;\n    }\n}\nexports.RepositoryRef = RepositoryRef;\nclass ImportedRepositoryRef extends RepositoryRef {\n    constructor(parent, name, props) {\n        super(parent, name);\n        this.repositoryArn = core_1.Arn.fromComponents({\n            service: 'codecommit',\n            resource: props.repositoryName,\n        });\n        this.repositoryName = props.repositoryName;\n    }\n}\n/**\n * Provides a CodeCommit Repository\n */\nclass Repository extends RepositoryRef {\n    constructor(parent, name, props) {\n        super(parent, name);\n        this.triggers = new Array();\n        this.repository = new resources_1.codecommit.RepositoryResource(this, 'Resource', {\n            repositoryName: props.repositoryName,\n            repositoryDescription: props.description,\n            triggers: this.triggers\n        });\n    }\n    get repositoryArn() {\n        return this.repository.repositoryArn;\n    }\n    get repositoryCloneUrlHttp() {\n        return this.repository.repositoryCloneUrlHttp;\n    }\n    get repositoryCloneUrlSsh() {\n        return this.repository.repositoryCloneUrlSsh;\n    }\n    get repositoryName() {\n        return this.repository.repositoryName;\n    }\n    /**\n     * Create a trigger to notify another service to run actions on repository events.\n     * @param arn     Arn of the resource that repository events will notify\n     * @param options Trigger options to run actions\n     */\n    notify(arn, options) {\n        let events = options && options.events;\n        if (events && events.length > 1 && events.indexOf(RepositoryEventTrigger.All) > -1) {\n            events = [RepositoryEventTrigger.All];\n        }\n        const customData = options && options.customData;\n        const branches = options && options.branches;\n        let name = options && options.name;\n        if (!name) {\n            name = this.path + '/' + arn;\n        }\n        if (this.triggers.find(prop => prop.name === name)) {\n            throw new Error(`Unable to set repository trigger named ${name} because trigger names must be unique`);\n        }\n        this.triggers.push({\n            destinationArn: arn,\n            name,\n            customData,\n            branches,\n            events: events || [RepositoryEventTrigger.All],\n        });\n        return this;\n    }\n}\nexports.Repository = Repository;\n/**\n * Repository events that will cause the trigger to run actions in another service.\n */\nvar RepositoryEventTrigger;\n(function (RepositoryEventTrigger) {\n    RepositoryEventTrigger[\"All\"] = \"all\";\n    RepositoryEventTrigger[\"UpdateRef\"] = \"updateReference\";\n    RepositoryEventTrigger[\"CreateRef\"] = \"createReference\";\n    RepositoryEventTrigger[\"DeleteRef\"] = \"deleteReference\";\n})(RepositoryEventTrigger = exports.RepositoryEventTrigger || (exports.RepositoryEventTrigger = {}));\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_core$;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_events$;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_resources$;\n\n/***/ })\n/******/ ]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"
}
