{
  "schema": "jsii/1.0",
  "types": {
    "jsii$_aws_cdk_kinesis$.StreamRefProps": {
      "docs": {
        "comment": "A reference to a stream. The easiest way to instantiate is to call\n`stream.export()`. Then, the consumer can use `Stream.import(this, ref)` and\nget a `Stream`."
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of the stream."
          },
          "name": "streamArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.kinesis.StreamArn"
          }
        },
        {
          "docs": {
            "comment": "The KMS key securing the contents of the stream if encryption is enabled."
          },
          "name": "encryptionKey",
          "type": {
            "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyRefProps",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_kinesis$.StreamRefProps",
      "module": "jsii$_aws_cdk_kinesis$",
      "namespace": "jsii$_aws_cdk_kinesis$",
      "name": "StreamRefProps",
      "datatype": true
    },
    "jsii$_aws_cdk_kinesis$.StreamRef": {
      "docs": {
        "comment": "Represents a Kinesis Stream.\n\nStreams can be either defined within this stack:\n\n     new Stream(this, 'MyStream', { props });\n\nOr imported from an existing stream:\n\n     StreamRef.import(this, 'MyImportedStream', { streamArn: ... });\n\nYou can also export a stream and import it into another stack:\n\n     const ref = myStream.export();\n     StreamRef.import(this, 'MyImportedStream', ref);"
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of the stream."
          },
          "name": "streamArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.kinesis.StreamArn"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "Optional KMS encryption key associated with this stream."
          },
          "name": "encryptionKey",
          "type": {
            "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyRef",
            "optional": true
          },
          "immutable": true,
          "abstract": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "docs": {
                "param": "parent The parent creating construct (usually `this`).",
                "comment": "The parent creating construct (usually `this`)."
              },
              "name": "parent",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "docs": {
                "param": "name The construct's name.",
                "comment": "The construct's name."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "jsii$_aws_cdk_kinesis$.StreamRefProps"
              }
            }
          ],
          "docs": {
            "comment": "Creates a Stream construct that represents an external stream."
          },
          "name": "import",
          "static": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_kinesis$.StreamRef"
          }
        },
        {
          "docs": {
            "comment": "Exports this stream from the stack."
          },
          "name": "export",
          "returns": {
            "fqn": "jsii$_aws_cdk_kinesis$.StreamRefProps"
          }
        },
        {
          "parameters": [
            {
              "name": "identity",
              "type": {
                "fqn": "jsii$_aws_cdk_iam$.IIdentityResource",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Grant write permissions for this stream and its contents to an IAM\nprincipal (Role/Group/User).\n\nIf an encryption key is used, permission to ues the key to decrypt the\ncontents of the stream will also be granted."
          },
          "name": "grantRead"
        },
        {
          "parameters": [
            {
              "name": "identity",
              "type": {
                "fqn": "jsii$_aws_cdk_iam$.IIdentityResource",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Grant read permissions for this stream and its contents to an IAM\nprincipal (Role/Group/User).\n\nIf an encryption key is used, permission to ues the key to decrypt the\ncontents of the stream will also be granted."
          },
          "name": "grantWrite"
        },
        {
          "parameters": [
            {
              "name": "identity",
              "type": {
                "fqn": "jsii$_aws_cdk_iam$.IIdentityResource",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Grants read/write permissions for this stream and its contents to an IAM\nprincipal (Role/Group/User).\n\nIf an encryption key is used, permission to use the key for\nencrypt/decrypt will also be granted."
          },
          "name": "grantReadWrite"
        }
      ],
      "fqn": "jsii$_aws_cdk_kinesis$.StreamRef",
      "module": "jsii$_aws_cdk_kinesis$",
      "namespace": "jsii$_aws_cdk_kinesis$",
      "name": "StreamRef",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "abstract": true,
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_kinesis$.StreamProps": {
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "default": "<generated>",
            "comment": "Enforces a particular physical stream name."
          },
          "name": "streamName",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "24",
            "comment": "The number of hours for the data records that are stored in shards to remain accessible."
          },
          "name": "retentionPeriodHours",
          "type": {
            "primitive": "number",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "1",
            "comment": "The number of shards for the stream."
          },
          "name": "shardCount",
          "type": {
            "primitive": "number",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "Unencrypted",
            "comment": "The kind of server-side encryption to apply to this stream.\n\nIf you choose KMS, you can specify a KMS key via `encryptionKey`. If\nencryption key is not specified, a key will automatically be created."
          },
          "name": "encryption",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "If encryption is set to \"Kms\" and this property is undefined, a\nnew KMS key will be created and associated with this stream.",
            "comment": "External KMS key to use for stream encryption.\n\nThe 'encryption' property must be set to \"Kms\"."
          },
          "name": "encryptionKey",
          "type": {
            "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyRef",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_kinesis$.StreamProps",
      "module": "jsii$_aws_cdk_kinesis$",
      "namespace": "jsii$_aws_cdk_kinesis$",
      "name": "StreamProps",
      "datatype": true
    },
    "jsii$_aws_cdk_kinesis$.Stream": {
      "docs": {
        "comment": "A Kinesis stream. Can be encrypted with a KMS key."
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of the stream."
          },
          "name": "streamArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.kinesis.StreamArn"
          },
          "immutable": true
        },
        {
          "name": "streamName",
          "type": {
            "fqn": "jsii$_aws_cdk_kinesis$.StreamName"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Optional KMS encryption key associated with this stream."
          },
          "name": "encryptionKey",
          "type": {
            "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyRef",
            "optional": true
          },
          "immutable": true
        }
      ],
      "fqn": "jsii$_aws_cdk_kinesis$.Stream",
      "module": "jsii$_aws_cdk_kinesis$",
      "namespace": "jsii$_aws_cdk_kinesis$",
      "name": "Stream",
      "base": {
        "fqn": "jsii$_aws_cdk_kinesis$.StreamRef"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_kinesis$.StreamProps",
              "optional": true
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_kinesis$.StreamEncryption": {
      "docs": {
        "comment": "What kind of server-side encryption to apply to this stream"
      },
      "kind": "enum",
      "members": [
        {
          "name": "Unencrypted"
        },
        {
          "name": "Kms"
        }
      ],
      "fqn": "jsii$_aws_cdk_kinesis$.StreamEncryption",
      "module": "jsii$_aws_cdk_kinesis$",
      "namespace": "jsii$_aws_cdk_kinesis$",
      "name": "StreamEncryption"
    },
    "jsii$_aws_cdk_kinesis$.StreamName": {
      "docs": {
        "comment": "The name of the stream."
      },
      "kind": "class",
      "fqn": "jsii$_aws_cdk_kinesis$.StreamName",
      "module": "jsii$_aws_cdk_kinesis$",
      "namespace": "jsii$_aws_cdk_kinesis$",
      "name": "StreamName",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    }
  },
  "nametree": {
    "jsii$_aws_cdk_kinesis$": {
      "StreamRefProps": {
        "_": "jsii$_aws_cdk_kinesis$.StreamRefProps"
      },
      "StreamRef": {
        "_": "jsii$_aws_cdk_kinesis$.StreamRef"
      },
      "StreamProps": {
        "_": "jsii$_aws_cdk_kinesis$.StreamProps"
      },
      "Stream": {
        "_": "jsii$_aws_cdk_kinesis$.Stream"
      },
      "StreamEncryption": {
        "_": "jsii$_aws_cdk_kinesis$.StreamEncryption"
      },
      "StreamName": {
        "_": "jsii$_aws_cdk_kinesis$.StreamName"
      }
    }
  },
  "typecount": 6,
  "externalTypes": {
    "jsii$_aws_cdk_resources$.kinesis.StreamArn": {
      "kind": "class",
      "fqn": "jsii$_aws_cdk_resources$.kinesis.StreamArn",
      "module": "jsii$_aws_cdk_resources$",
      "namespace": "jsii$_aws_cdk_resources$.kinesis",
      "name": "StreamArn",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Arn"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_kms$.EncryptionKeyRefProps": {
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of the external KMS key."
          },
          "name": "keyArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.kms.KeyArn"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyRefProps",
      "module": "jsii$_aws_cdk_kms$",
      "namespace": "jsii$_aws_cdk_kms$",
      "name": "EncryptionKeyRefProps",
      "datatype": true
    },
    "jsii$_aws_cdk_core$.Construct": {
      "docs": {
        "comment": "Represents the building block of the construct graph.\nWhen a construct is created, it is always added as a child"
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "Returns the parent of this node or undefined if this is a root node."
          },
          "name": "parent",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.Construct",
            "optional": true
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The name of this construct"
          },
          "name": "name",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "All direct children of this construct."
          },
          "name": "children",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              },
              "kind": "array"
            }
          },
          "immutable": true
        },
        {
          "docs": {
            "returns": "/-separated path of this Construct.",
            "comment": "Returns the path of all constructs from root to this construct, in string form."
          },
          "name": "path",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "An array of metadata objects associated with this construct.\nThis can be used, for example, to implement support for deprecation notices, source mapping, etc."
          },
          "name": "metadata",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.MetadataEntry"
              },
              "kind": "array"
            }
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "docs": {
            "comment": "Returns a string representation of this construct."
          },
          "name": "toString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "parameters": [
            {
              "name": "depth",
              "type": {
                "primitive": "number",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Returns a string with a tree representation of this construct and it's children."
          },
          "name": "toTreeString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "a child by path or undefined if not found.",
            "comment": "Return a descendant by path, or undefined"
          },
          "name": "tryFindChild",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct",
            "optional": true
          }
        },
        {
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "Child with the given path.",
            "comment": "Return a descendant by path\n\nThrows an exception if the descendant is not found."
          },
          "name": "findChild",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "key The context key",
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "value The context value",
                "comment": "The context value"
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "This can be used to set contextual values.\nContext must be set before any children are added, since children may consult context info during construction.\nIf the key already exists, it will be overridden."
          },
          "name": "setContext"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "key The context key",
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "The context value or undefined",
            "comment": "Retrieves a value from tree context.\n\nContext is usually initialized at the root, but can be overridden at any point in the tree."
          },
          "name": "getContext",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Retrieve a value from tree-global context\n\nIt is an error if the context object is not available."
          },
          "name": "requireContext",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "type a string denoting the type of metadata",
                "comment": "a string denoting the type of metadata"
              },
              "name": "type",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "data the value of the metadata (can be a Token). If null/undefined, metadata will not be added.",
                "comment": "the value of the metadata (can be a Token). If null/undefined, metadata will not be added."
              },
              "name": "data",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "param": "from a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)",
                "comment": "a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)"
              },
              "name": "from",
              "type": {
                "primitive": "any",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Adds a metadata entry to this construct.\nEntries are arbitrary values and will also include a stack trace to allow tracing back to\nthe code location for when the entry was added. It can be used, for example, to include source\nmapping in CloudFormation templates to improve diagnostics."
          },
          "name": "addMetadata",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "message The warning message.",
                "comment": "The warning message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Adds a { warning: <message> } metadata entry to this construct."
          },
          "name": "addWarning",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "docs": {
            "returns": "An array of validation error messages, or an empty array if there the construct is valid.",
            "comment": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis."
          },
          "name": "validate",
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "returns": "A list of validation errors. If the list is empty, all constructs are valid.",
            "comment": "Invokes 'validate' on all child constructs and then on this construct (depth-first)."
          },
          "name": "validateTree",
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.ValidationError"
              },
              "kind": "array"
            }
          }
        },
        {
          "parameters": [
            {
              "name": "upTo",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Return the ancestors (including self) of this Construct up until and excluding the indicated component"
          },
          "name": "ancestors",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              },
              "kind": "array"
            }
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "props The props bag.",
                "comment": "The props bag."
              },
              "name": "props",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "param": "name The name of the required property.",
                "comment": "The name of the required property."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Throws if the `props` bag doesn't include the property `name`.\nIn the future we can add some type-checking here, maybe even auto-generate during compilation."
          },
          "name": "required",
          "protected": true,
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "child The child construct",
                "comment": "The child construct"
              },
              "name": "child",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "name": "childName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "The resolved path part name of the child",
            "comment": "Adds a child construct to this node."
          },
          "name": "addChild",
          "protected": true
        },
        {
          "docs": {
            "comment": "Locks this construct from allowing more children to be added. After this\ncall, no more children can be added to this construct or to any children."
          },
          "name": "lock",
          "protected": true
        },
        {
          "docs": {
            "comment": "Unlocks this costruct and allows mutations (adding children)."
          },
          "name": "unlock",
          "protected": true
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.Construct",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "Construct",
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_kms$.EncryptionKeyRef": {
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of the key."
          },
          "name": "keyArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.kms.KeyArn"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "Optional policy document that represents the resource policy of this key.\n\nIf specified, addToResourcePolicy can be used to edit this policy.\nOtherwise this method will no-op."
          },
          "name": "policy",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.PolicyDocument",
            "optional": true
          },
          "immutable": true,
          "protected": true,
          "abstract": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "docs": {
                "param": "parent The parent construct.",
                "comment": "The parent construct."
              },
              "name": "parent",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "docs": {
                "param": "name The name of the construct.",
                "comment": "The name of the construct."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "props The key reference.",
                "comment": "The key reference."
              },
              "name": "props",
              "type": {
                "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyRefProps"
              }
            }
          ],
          "docs": {
            "comment": "Defines an imported encryption key.\n\n`ref` can be obtained either via a call to `key.export()` or using\nliterals.\n\nFor example:\n\n     const keyRefProps = key.export();\n     const keyRef1 = EncryptionKeyRef.import(this, 'MyImportedKey1', keyRefProps);\n     const keyRef2 = EncryptionKeyRef.import(this, 'MyImportedKey2', {\n         keyArn: new KeyArn('arn:aws:kms:...')\n     });"
          },
          "name": "import",
          "static": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyRef"
          }
        },
        {
          "parameters": [
            {
              "name": "alias",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Defines a new alias for the key."
          },
          "name": "addAlias",
          "returns": {
            "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyAlias"
          }
        },
        {
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              }
            }
          ],
          "docs": {
            "comment": "Adds a statement to the KMS key resource policy."
          },
          "name": "addToResourcePolicy"
        },
        {
          "docs": {
            "returns": "a key ref which can be used in a call to `EncryptionKey.import(ref)`.",
            "comment": "Exports this key from the current stack."
          },
          "name": "export",
          "returns": {
            "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyRefProps"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyRef",
      "module": "jsii$_aws_cdk_kms$",
      "namespace": "jsii$_aws_cdk_kms$",
      "name": "EncryptionKeyRef",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "abstract": true,
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_iam$.IIdentityResource": {
      "kind": "interface",
      "methods": [
        {
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              }
            }
          ],
          "docs": {
            "comment": "Adds an IAM statement to the default inline policy associated with this\nprincipal. If a policy doesn't exist, it is created."
          },
          "name": "addToPolicy"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "policy The policy resource to attach to this principal.",
                "comment": "The policy resource to attach to this principal."
              },
              "name": "policy",
              "type": {
                "fqn": "jsii$_aws_cdk_iam$.Policy"
              }
            }
          ],
          "docs": {
            "comment": "Attaches an inline policy to this principal.\nThis is the same as calling `policy.addToXxx(principal)`."
          },
          "name": "attachInlinePolicy"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "arn The ARN of the managed policy",
                "comment": "The ARN of the managed policy"
              },
              "name": "arn",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "Attaches a managed policy to this principal."
          },
          "name": "attachManagedPolicy"
        }
      ],
      "properties": [
        {
          "docs": {
            "comment": "The IAM principal of this identity (i.e. AWS principal, service principal, etc)."
          },
          "name": "principal",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.PolicyPrincipal"
          },
          "immutable": true
        }
      ],
      "fqn": "jsii$_aws_cdk_iam$.IIdentityResource",
      "module": "jsii$_aws_cdk_iam$",
      "namespace": "jsii$_aws_cdk_iam$",
      "name": "IIdentityResource"
    },
    "jsii$_aws_cdk_core$.Token": {
      "docs": {
        "comment": "Represents a lazy-evaluated value. Can be used to delay evaluation of a certain value\nin case, for example, that it requires some context or late-bound data."
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "returns": "The resolved value for this token."
          },
          "name": "resolve",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.Token",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "Token",
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    }
  },
  "name": "jsii$_aws_cdk_kinesis$",
  "package": "@aws-cdk/kinesis",
  "version": "0.7.2-beta",
  "dependencies": {
    "jsii$_aws_cdk_core$": {
      "package": "@aws-cdk/core",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_iam$": {
      "package": "@aws-cdk/iam",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_kms$": {
      "package": "@aws-cdk/kms",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_resources$": {
      "package": "@aws-cdk/resources",
      "version": "0.7.2-beta"
    }
  },
  "names": {
    "java": "com.amazonaws.cdk.kinesis",
    "dotnet": "AWS.Cdk.Kinesis",
    "js": "@aws-cdk/kinesis"
  },
  "nativenames": {
    "jsii$_aws_cdk_core$": {
      "java": "com.amazonaws.cdk",
      "dotnet": "AWS.Cdk",
      "js": "@aws-cdk/core"
    },
    "jsii$_aws_cdk_iam$": {
      "java": "com.amazonaws.cdk.iam",
      "dotnet": "AWS.Cdk.Iam",
      "js": "@aws-cdk/iam"
    },
    "jsii$_aws_cdk_kms$": {
      "java": "com.amazonaws.cdk.kms",
      "dotnet": "AWS.Cdk.Kms",
      "js": "@aws-cdk/kms"
    },
    "jsii$_aws_cdk_resources$": {
      "java": "com.amazonaws.cdk.resources",
      "dotnet": "AWS.Cdk.Resources",
      "js": "@aws-cdk/resources"
    },
    "jsii$_aws_cdk_kinesis$": {
      "java": "com.amazonaws.cdk.kinesis",
      "dotnet": "AWS.Cdk.Kinesis",
      "js": "@aws-cdk/kinesis"
    }
  },
  "readme": {
    "markdown": "## AWS Kinesis Construct Library\n\nDefine an unencrypted Kinesis stream.\n\n```ts\nnew Stream(this, 'MyFirstStream');\n```\n\n### Encryption\n\nDefine a KMS-encrypted stream:\n\n```ts\nconst stream = newStream(this, 'MyEncryptedStream', {\n    encryption: StreamEncryption.Kms\n});\n\n// you can access the encryption key:\nassert(stream.encryptionKey instanceof kms.EncryptionKey);\n```\n\nYou can also supply your own key:\n\n```ts\nconst myKmsKey = new kms.EncryptionKey(this, 'MyKey');\n\nconst stream = new Stream(this, 'MyEncryptedStream', {\n    encryption: StreamEncryption.Kms,\n    encryptionKey: myKmsKey\n});\n\nassert(stream.encryptionKey === myKmsKey);\n```\n"
  },
  "code": "var jsii$_aws_cdk_kinesis$ =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(1));\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(2);\nconst kms = __webpack_require__(3);\nconst resources_1 = __webpack_require__(4);\n/**\n * Represents a Kinesis Stream.\n *\n * Streams can be either defined within this stack:\n *\n *     new Stream(this, 'MyStream', { props });\n *\n * Or imported from an existing stream:\n *\n *     StreamRef.import(this, 'MyImportedStream', { streamArn: ... });\n *\n * You can also export a stream and import it into another stack:\n *\n *     const ref = myStream.export();\n *     StreamRef.import(this, 'MyImportedStream', ref);\n *\n */\nclass StreamRef extends core_1.Construct {\n    /**\n     * Creates a Stream construct that represents an external stream.\n     *\n     * @param parent The parent creating construct (usually `this`).\n     * @param name The construct's name.\n     * @param ref A StreamRefProps object. Can be obtained from a call to\n     * `stream.export()`.\n     */\n    static import(parent, name, props) {\n        return new ImportedStreamRef(parent, name, props);\n    }\n    /**\n     * Exports this stream from the stack.\n     */\n    export() {\n        const streamArn = new core_1.Output(this, 'StreamArn', { value: this.streamArn }).makeImportValue();\n        if (this.encryptionKey) {\n            return {\n                streamArn,\n                encryptionKey: this.encryptionKey.export()\n            };\n        }\n        else {\n            return { streamArn };\n        }\n    }\n    /**\n     * Grant write permissions for this stream and its contents to an IAM\n     * principal (Role/Group/User).\n     *\n     * If an encryption key is used, permission to ues the key to decrypt the\n     * contents of the stream will also be granted.\n     */\n    grantRead(identity) {\n        if (!identity) {\n            return;\n        }\n        this.grant(identity, {\n            streamActions: [\n                'kinesis:DescribeStream',\n                'kinesis:GetRecords',\n                'kinesis:GetShardIterator'\n            ],\n            keyActions: [\n                'kms:Decrypt'\n            ]\n        });\n    }\n    /**\n     * Grant read permissions for this stream and its contents to an IAM\n     * principal (Role/Group/User).\n     *\n     * If an encryption key is used, permission to ues the key to decrypt the\n     * contents of the stream will also be granted.\n     */\n    grantWrite(identity) {\n        if (!identity) {\n            return;\n        }\n        this.grant(identity, {\n            streamActions: [\n                'kinesis:DescribeStream',\n                'kinesis:PutRecord',\n                'kinesis:PutRecords'\n            ],\n            keyActions: [\n                'kms:GenerateDataKey',\n                'kms:Encrypt'\n            ]\n        });\n    }\n    /**\n     * Grants read/write permissions for this stream and its contents to an IAM\n     * principal (Role/Group/User).\n     *\n     * If an encryption key is used, permission to use the key for\n     * encrypt/decrypt will also be granted.\n     */\n    grantReadWrite(identity) {\n        if (!identity) {\n            return;\n        }\n        this.grant(identity, {\n            streamActions: [\n                'kinesis:DescribeStream',\n                'kinesis:GetRecords',\n                'kinesis:GetShardIterator',\n                'kinesis:PutRecord',\n                'kinesis:PutRecords'\n            ],\n            keyActions: [\n                'kms:Decrypt',\n                'kms:GenerateDataKey',\n                'kms:Encrypt'\n            ]\n        });\n    }\n    grant(identity, actions) {\n        identity.addToPolicy(new core_1.PolicyStatement()\n            .addResource(this.streamArn)\n            .addActions(...actions.streamActions));\n        // grant key permissions if there's an associated key.\n        if (this.encryptionKey) {\n            identity.addToPolicy(new core_1.PolicyStatement()\n                .addResource(this.encryptionKey.keyArn)\n                .addActions(...actions.keyActions));\n        }\n    }\n}\nexports.StreamRef = StreamRef;\n/**\n * A Kinesis stream. Can be encrypted with a KMS key.\n */\nclass Stream extends StreamRef {\n    constructor(parent, name, props = {}) {\n        super(parent, name);\n        const shardCount = props.shardCount || 1;\n        const retentionPeriodHours = props.retentionPeriodHours || 24;\n        if (retentionPeriodHours < 24 && retentionPeriodHours > 168) {\n            throw new Error(\"retentionPeriodHours must be between 24 and 168 hours\");\n        }\n        const { streamEncryption, encryptionKey } = this.parseEncryption(props);\n        this.stream = new resources_1.kinesis.StreamResource(this, \"Resource\", {\n            streamName: props.streamName,\n            retentionPeriodHours,\n            shardCount,\n            streamEncryption\n        });\n        this.streamArn = this.stream.streamArn;\n        this.streamName = this.stream.ref;\n        this.encryptionKey = encryptionKey;\n        if (props.streamName) {\n            this.addMetadata('aws:cdk:hasPhysicalName', props.streamName);\n        }\n    }\n    /**\n     * Set up key properties and return the Stream encryption property from the\n     * user's configuration.\n     */\n    parseEncryption(props) {\n        // default to unencrypted.\n        const encryptionType = props.encryption || StreamEncryption.Unencrypted;\n        // if encryption key is set, encryption must be set to KMS.\n        if (encryptionType !== StreamEncryption.Kms && props.encryptionKey) {\n            throw new Error(`encryptionKey is specified, so 'encryption' must be set to KMS (value: ${encryptionType})`);\n        }\n        if (encryptionType === StreamEncryption.Unencrypted) {\n            return { streamEncryption: undefined, encryptionKey: undefined };\n        }\n        if (encryptionType === StreamEncryption.Kms) {\n            const encryptionKey = props.encryptionKey || new kms.EncryptionKey(this, 'Key', {\n                description: `Created by ${this.path}`\n            });\n            const streamEncryption = {\n                encryptionType: 'KMS',\n                keyId: encryptionKey.keyArn\n            };\n            return { encryptionKey, streamEncryption };\n        }\n        throw new Error(`Unexpected 'encryptionType': ${encryptionType}`);\n    }\n}\nexports.Stream = Stream;\n/**\n * What kind of server-side encryption to apply to this stream\n */\nvar StreamEncryption;\n(function (StreamEncryption) {\n    /**\n     * Records in the stream are not encrypted.\n     */\n    StreamEncryption[\"Unencrypted\"] = \"NONE\";\n    /**\n     * Server-side encryption with a KMS key managed by the user.\n     * If `encryptionKey` is specified, this key will be used, otherwise, one will be defined.\n     */\n    StreamEncryption[\"Kms\"] = \"KMS\";\n})(StreamEncryption = exports.StreamEncryption || (exports.StreamEncryption = {}));\n/**\n * The name of the stream.\n */\nclass StreamName extends core_1.Token {\n}\nexports.StreamName = StreamName;\nclass ImportedStreamRef extends StreamRef {\n    constructor(parent, name, props) {\n        super(parent, name);\n        this.streamArn = props.streamArn;\n        if (props.encryptionKey) {\n            this.encryptionKey = kms.EncryptionKeyRef.import(parent, 'Key', props.encryptionKey);\n        }\n        else {\n            this.encryptionKey = undefined;\n        }\n    }\n}\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_core$;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_kms$;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_resources$;\n\n/***/ })\n/******/ ]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"
}
