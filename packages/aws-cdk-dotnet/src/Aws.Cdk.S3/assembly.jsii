{
  "schema": "jsii/1.0",
  "types": {
    "jsii$_aws_cdk_s3$.BucketRefProps": {
      "docs": {
        "comment": "A reference to a bucket. The easiest way to instantiate is to call\n`bucket.export()`. Then, the consumer can use `Bucket.import(this, ref)` and\nget a `Bucket`."
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "The ARN fo the bucket. At least one of bucketArn or bucketName must be\ndefined in order to initialize a bucket ref."
          },
          "name": "bucketArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.s3.BucketArn",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The name of the bucket. If the underlying value of ARN is a string, the\nname will be parsed from the ARN. Otherwise, the name is optional, but\nsome features that require the bucket name such as auto-creating a bucket\npolicy, won't work."
          },
          "name": "bucketName",
          "type": {
            "fqn": "jsii$_aws_cdk_s3$.BucketName",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_s3$.BucketRefProps",
      "module": "jsii$_aws_cdk_s3$",
      "namespace": "jsii$_aws_cdk_s3$",
      "name": "BucketRefProps",
      "datatype": true
    },
    "jsii$_aws_cdk_s3$.BucketRef": {
      "docs": {
        "comment": "Represents an S3 Bucket.\n\nBuckets can be either defined within this stack:\n\n     new Bucket(this, 'MyBucket', { props });\n\nOr imported from an existing bucket:\n\n     BucketRef.import(this, 'MyImportedBucket', { bucketArn: ... });\n\nYou can also export a bucket and import it into another stack:\n\n     const ref = myBucket.export();\n     BucketRef.import(this, 'MyImportedBucket', ref);"
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of the bucket."
          },
          "name": "bucketArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.s3.BucketArn"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "The name of the bucket."
          },
          "name": "bucketName",
          "type": {
            "fqn": "jsii$_aws_cdk_s3$.BucketName"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "Optional KMS encryption key associated with this bucket."
          },
          "name": "encryptionKey",
          "type": {
            "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyRef",
            "optional": true
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "The resource policy assoicated with this bucket.\n\nIf `autoCreatePolicy` is true, a `BucketPolicy` will be created upon the\nfirst call to addToResourcePolicy(s)."
          },
          "name": "policy",
          "type": {
            "fqn": "jsii$_aws_cdk_s3$.BucketPolicy",
            "optional": true
          },
          "protected": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "Indicates if a bucket resource policy should automatically created upon\nthe first call to `addToResourcePolicy`."
          },
          "name": "autoCreatePolicy",
          "type": {
            "primitive": "boolean"
          },
          "protected": true,
          "abstract": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "docs": {
                "param": "parent The parent creating construct (usually `this`).",
                "comment": "The parent creating construct (usually `this`)."
              },
              "name": "parent",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "docs": {
                "param": "name The construct's name.",
                "comment": "The construct's name."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "jsii$_aws_cdk_s3$.BucketRefProps"
              }
            }
          ],
          "docs": {
            "comment": "Creates a Bucket construct that represents an external bucket."
          },
          "name": "import",
          "static": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_s3$.BucketRef"
          }
        },
        {
          "docs": {
            "comment": "Exports this bucket from the stack."
          },
          "name": "export",
          "returns": {
            "fqn": "jsii$_aws_cdk_s3$.BucketRefProps"
          }
        },
        {
          "parameters": [
            {
              "name": "permission",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              }
            }
          ],
          "docs": {
            "comment": "Adds a statement to the resource policy for a principal (i.e.\naccount/role/service) to perform actions on this bucket and/or it's\ncontents. Use `bucketArn` and `arnForObjects(keys)` to obtain ARNs for\nthis bucket or objects."
          },
          "name": "addToResourcePolicy"
        },
        {
          "parameters": [
            {
              "name": "keyPattern",
              "type": {
                "primitive": "any"
              },
              "variadic": true
            }
          ],
          "docs": {
            "comment": "Returns an ARN that represents all objects within the bucket that match\nthe key pattern specified. To represent all keys, specify ``\"*\"``.\n\nIf you specify multiple components for keyPattern, they will be concatenated::\n\n     arnForObjects('home/', team, '/', user, '/*')"
          },
          "name": "arnForObjects",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Arn"
          },
          "variadic": true
        },
        {
          "parameters": [
            {
              "name": "identity",
              "type": {
                "fqn": "jsii$_aws_cdk_iam$.IIdentityResource",
                "optional": true
              }
            },
            {
              "name": "objectsKeyPattern",
              "type": {
                "primitive": "string",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Temporary API for granting read permissions for this bucket and it's\ncontents to an IAM principal (Role/Group/User).\n\nIf an encryption key is used, permission to ues the key to decrypt the\ncontents of the bucket will also be granted."
          },
          "name": "grantRead"
        },
        {
          "parameters": [
            {
              "name": "identity",
              "type": {
                "fqn": "jsii$_aws_cdk_iam$.IIdentityResource",
                "optional": true
              }
            },
            {
              "name": "objectsKeyPattern",
              "type": {
                "primitive": "string",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Grants read/write permissions for this bucket and it's contents to an IAM\nprincipal (Role/Group/User).\n\nIf an encryption key is used, permission to use the key for\nencrypt/decrypt will also be granted."
          },
          "name": "grantReadWrite"
        }
      ],
      "fqn": "jsii$_aws_cdk_s3$.BucketRef",
      "module": "jsii$_aws_cdk_s3$",
      "namespace": "jsii$_aws_cdk_s3$",
      "name": "BucketRef",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "abstract": true,
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_s3$.BucketProps": {
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "default": "Unencrypted",
            "comment": "The kind of server-side encryption to apply to this bucket.\n\nIf you choose KMS, you can specify a KMS key via `encryptionKey`. If\nencryption key is not specified, a key will automatically be created."
          },
          "name": "encryption",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "If encryption is set to \"Kms\" and this property is undefined, a\nnew KMS key will be created and associated with this bucket.",
            "comment": "External KMS key to use for bucket encryption.\n\nThe 'encryption' property must be either not specified or set to \"Kms\".\nAn error will be emitted if encryption is set to \"Unencrypted\" or\n\"Managed\"."
          },
          "name": "encryptionKey",
          "type": {
            "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyRef",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "Assigned by CloudFormation (recommended)",
            "comment": "Physical name of this bucket."
          },
          "name": "bucketName",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "By default, the bucket will be destroyed if it is removed from the stack.",
            "comment": "Policy to apply when the bucket is removed from this stack."
          },
          "name": "removalPolicy",
          "type": {
            "primitive": "number",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "A bucket policy will be created automatically in the first call\nto addToPolicy.",
            "comment": "The bucket policy associated with this bucket."
          },
          "name": "policy",
          "type": {
            "fqn": "jsii$_aws_cdk_s3$.BucketPolicy",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "false",
            "comment": "Whether this bucket should have versioning turned on or not."
          },
          "name": "versioned",
          "type": {
            "primitive": "boolean",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "No lifecycle rules",
            "comment": "Rules that define how Amazon S3 manages objects during their lifetime."
          },
          "name": "lifecycleRules",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_s3$.LifecycleRule"
              },
              "kind": "array"
            },
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_s3$.BucketProps",
      "module": "jsii$_aws_cdk_s3$",
      "namespace": "jsii$_aws_cdk_s3$",
      "name": "BucketProps",
      "datatype": true
    },
    "jsii$_aws_cdk_s3$.Bucket": {
      "docs": {
        "comment": "An S3 bucket with associated policy objects\n\nThis bucket does not yet have all features that exposed by the underlying\nBucketResource."
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of the bucket."
          },
          "name": "bucketArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.s3.BucketArn"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The name of the bucket."
          },
          "name": "bucketName",
          "type": {
            "fqn": "jsii$_aws_cdk_s3$.BucketName"
          },
          "immutable": true
        },
        {
          "name": "domainName",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.s3.BucketDomainName"
          },
          "immutable": true
        },
        {
          "name": "dualstackDomainName",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.s3.BucketDualStackDomainName"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Optional KMS encryption key associated with this bucket."
          },
          "name": "encryptionKey",
          "type": {
            "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyRef",
            "optional": true
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The resource policy assoicated with this bucket.\n\nIf `autoCreatePolicy` is true, a `BucketPolicy` will be created upon the\nfirst call to addToResourcePolicy(s)."
          },
          "name": "policy",
          "type": {
            "fqn": "jsii$_aws_cdk_s3$.BucketPolicy",
            "optional": true
          },
          "protected": true
        },
        {
          "docs": {
            "comment": "Indicates if a bucket resource policy should automatically created upon\nthe first call to `addToResourcePolicy`."
          },
          "name": "autoCreatePolicy",
          "type": {
            "primitive": "boolean"
          },
          "protected": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "docs": {
                "param": "rule The rule to add",
                "comment": "The rule to add"
              },
              "name": "rule",
              "type": {
                "fqn": "jsii$_aws_cdk_s3$.LifecycleRule"
              }
            }
          ],
          "docs": {
            "comment": "Add a lifecycle rule to the bucket"
          },
          "name": "addLifecycleRule"
        }
      ],
      "fqn": "jsii$_aws_cdk_s3$.Bucket",
      "module": "jsii$_aws_cdk_s3$",
      "namespace": "jsii$_aws_cdk_s3$",
      "name": "Bucket",
      "base": {
        "fqn": "jsii$_aws_cdk_s3$.BucketRef"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_s3$.BucketProps",
              "optional": true
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_s3$.BucketEncryption": {
      "docs": {
        "comment": "What kind of server-side encryption to apply to this bucket"
      },
      "kind": "enum",
      "members": [
        {
          "name": "Unencrypted"
        },
        {
          "name": "KmsManaged"
        },
        {
          "name": "Kms"
        }
      ],
      "fqn": "jsii$_aws_cdk_s3$.BucketEncryption",
      "module": "jsii$_aws_cdk_s3$",
      "namespace": "jsii$_aws_cdk_s3$",
      "name": "BucketEncryption"
    },
    "jsii$_aws_cdk_s3$.BucketName": {
      "docs": {
        "comment": "The name of the bucket."
      },
      "kind": "class",
      "fqn": "jsii$_aws_cdk_s3$.BucketName",
      "module": "jsii$_aws_cdk_s3$",
      "namespace": "jsii$_aws_cdk_s3$",
      "name": "BucketName",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_s3$.BucketPolicyProps": {
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "The Amazon S3 bucket that the policy applies to."
          },
          "name": "bucket",
          "type": {
            "fqn": "jsii$_aws_cdk_s3$.BucketRef"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_s3$.BucketPolicyProps",
      "module": "jsii$_aws_cdk_s3$",
      "namespace": "jsii$_aws_cdk_s3$",
      "name": "BucketPolicyProps",
      "datatype": true
    },
    "jsii$_aws_cdk_s3$.BucketPolicy": {
      "docs": {
        "comment": "Applies an Amazon S3 bucket policy to an Amazon S3 bucket."
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "A policy document containing permissions to add to the specified bucket.\nFor more information, see Access Policy Language Overview in the Amazon\nSimple Storage Service Developer Guide."
          },
          "name": "document",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.PolicyDocument"
          },
          "immutable": true
        }
      ],
      "fqn": "jsii$_aws_cdk_s3$.BucketPolicy",
      "module": "jsii$_aws_cdk_s3$",
      "namespace": "jsii$_aws_cdk_s3$",
      "name": "BucketPolicy",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_s3$.BucketPolicyProps"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_s3$.LifecycleRule": {
      "docs": {
        "comment": "Declaration of a Life cycle rule"
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "A unique identifier for this rule. The value cannot be more than 255 characters."
          },
          "name": "id",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "true",
            "comment": "Whether this rule is enabled."
          },
          "name": "enabled",
          "type": {
            "primitive": "boolean",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "Incomplete uploads are never aborted",
            "comment": "Specifies a lifecycle rule that aborts incomplete multipart uploads to an Amazon S3 bucket.\n\nThe AbortIncompleteMultipartUpload property type creates a lifecycle\nrule that aborts incomplete multipart uploads to an Amazon S3 bucket.\nWhen Amazon S3 aborts a multipart upload, it deletes all parts\nassociated with the multipart upload."
          },
          "name": "abortIncompleteMultipartUploadAfterDays",
          "type": {
            "primitive": "number",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "No expiration date",
            "comment": "Indicates when objects are deleted from Amazon S3 and Amazon Glacier.\n\nThe date value must be in ISO 8601 format. The time is always midnight UTC.\n\nIf you specify an expiration and transition time, you must use the same\ntime unit for both properties (either in days or by date). The\nexpiration time must also be later than the transition time."
          },
          "name": "expirationDate",
          "type": {
            "primitive": "date",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "No expiration timeout",
            "comment": "Indicates the number of days after creation when objects are deleted from Amazon S3 and Amazon Glacier.\n\nIf you specify an expiration and transition time, you must use the same\ntime unit for both properties (either in days or by date). The\nexpiration time must also be later than the transition time."
          },
          "name": "expirationInDays",
          "type": {
            "primitive": "number",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "No noncurrent version expiration",
            "comment": "Time between when a new version of the object is uploaded to the bucket and when old versions of the object expire.\n\nFor buckets with versioning enabled (or suspended), specifies the time,\nin days, between when a new version of the object is uploaded to the\nbucket and when old versions of the object expire. When object versions\nexpire, Amazon S3 permanently deletes them. If you specify a transition\nand expiration time, the expiration time must be later than the\ntransition time."
          },
          "name": "noncurrentVersionExpirationInDays",
          "type": {
            "primitive": "number",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "One or more transition rules that specify when non-current objects transition to a specified storage class.\n\nOnly for for buckets with versioning enabled (or suspended).\n\nIf you specify a transition and expiration time, the expiration time\nmust be later than the transition time."
          },
          "name": "noncurrentVersionTransitions",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_s3$.NoncurrentVersionTransition"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "default": "No transition rules",
            "comment": "One or more transition rules that specify when an object transitions to a specified storage class.\n\nIf you specify an expiration and transition time, you must use the same\ntime unit for both properties (either in days or by date). The\nexpiration time must also be later than the transition time."
          },
          "name": "transitions",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_s3$.Transition"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "default": "Rule applies to all objects",
            "comment": "Object key prefix that identifies one or more objects to which this rule applies."
          },
          "name": "prefix",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "Rule applies to all objects",
            "comment": "The TagFilter property type specifies tags to use to identify a subset of objects for an Amazon S3 bucket."
          },
          "name": "tagFilters",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            },
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_s3$.LifecycleRule",
      "module": "jsii$_aws_cdk_s3$",
      "namespace": "jsii$_aws_cdk_s3$",
      "name": "LifecycleRule",
      "datatype": true
    },
    "jsii$_aws_cdk_s3$.Transition": {
      "docs": {
        "comment": "Describes when an object transitions to a specified storage class."
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "The storage class to which you want the object to transition."
          },
          "name": "storageClass",
          "type": {
            "fqn": "jsii$_aws_cdk_s3$.StorageClass"
          }
        },
        {
          "docs": {
            "default": "No transition date.",
            "comment": "Indicates when objects are transitioned to the specified storage class.\n\nThe date value must be in ISO 8601 format. The time is always midnight UTC."
          },
          "name": "transitionDate",
          "type": {
            "primitive": "date",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "No transition count.",
            "comment": "Indicates the number of days after creation when objects are transitioned to the specified storage class."
          },
          "name": "transitionInDays",
          "type": {
            "primitive": "number",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_s3$.Transition",
      "module": "jsii$_aws_cdk_s3$",
      "namespace": "jsii$_aws_cdk_s3$",
      "name": "Transition",
      "datatype": true
    },
    "jsii$_aws_cdk_s3$.NoncurrentVersionTransition": {
      "docs": {
        "comment": "Describes when noncurrent versions transition to a specified storage class."
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "The storage class to which you want the object to transition."
          },
          "name": "storageClass",
          "type": {
            "fqn": "jsii$_aws_cdk_s3$.StorageClass"
          }
        },
        {
          "docs": {
            "default": "No transition count.",
            "comment": "Indicates the number of days after creation when objects are transitioned to the specified storage class."
          },
          "name": "transitionInDays",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_s3$.NoncurrentVersionTransition",
      "module": "jsii$_aws_cdk_s3$",
      "namespace": "jsii$_aws_cdk_s3$",
      "name": "NoncurrentVersionTransition",
      "datatype": true
    },
    "jsii$_aws_cdk_s3$.StorageClass": {
      "docs": {
        "comment": "Storage class to move an object to"
      },
      "kind": "enum",
      "members": [
        {
          "name": "InfrequentAccess"
        },
        {
          "name": "OneZoneInfrequentAccess"
        },
        {
          "name": "Glacier"
        }
      ],
      "fqn": "jsii$_aws_cdk_s3$.StorageClass",
      "module": "jsii$_aws_cdk_s3$",
      "namespace": "jsii$_aws_cdk_s3$",
      "name": "StorageClass"
    }
  },
  "nametree": {
    "jsii$_aws_cdk_s3$": {
      "BucketRefProps": {
        "_": "jsii$_aws_cdk_s3$.BucketRefProps"
      },
      "BucketRef": {
        "_": "jsii$_aws_cdk_s3$.BucketRef"
      },
      "BucketProps": {
        "_": "jsii$_aws_cdk_s3$.BucketProps"
      },
      "Bucket": {
        "_": "jsii$_aws_cdk_s3$.Bucket"
      },
      "BucketEncryption": {
        "_": "jsii$_aws_cdk_s3$.BucketEncryption"
      },
      "BucketName": {
        "_": "jsii$_aws_cdk_s3$.BucketName"
      },
      "BucketPolicyProps": {
        "_": "jsii$_aws_cdk_s3$.BucketPolicyProps"
      },
      "BucketPolicy": {
        "_": "jsii$_aws_cdk_s3$.BucketPolicy"
      },
      "LifecycleRule": {
        "_": "jsii$_aws_cdk_s3$.LifecycleRule"
      },
      "Transition": {
        "_": "jsii$_aws_cdk_s3$.Transition"
      },
      "NoncurrentVersionTransition": {
        "_": "jsii$_aws_cdk_s3$.NoncurrentVersionTransition"
      },
      "StorageClass": {
        "_": "jsii$_aws_cdk_s3$.StorageClass"
      }
    }
  },
  "typecount": 12,
  "externalTypes": {
    "jsii$_aws_cdk_resources$.s3.BucketArn": {
      "kind": "class",
      "fqn": "jsii$_aws_cdk_resources$.s3.BucketArn",
      "module": "jsii$_aws_cdk_resources$",
      "namespace": "jsii$_aws_cdk_resources$.s3",
      "name": "BucketArn",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Arn"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_core$.Construct": {
      "docs": {
        "comment": "Represents the building block of the construct graph.\nWhen a construct is created, it is always added as a child"
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "Returns the parent of this node or undefined if this is a root node."
          },
          "name": "parent",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.Construct",
            "optional": true
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The name of this construct"
          },
          "name": "name",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "All direct children of this construct."
          },
          "name": "children",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              },
              "kind": "array"
            }
          },
          "immutable": true
        },
        {
          "docs": {
            "returns": "/-separated path of this Construct.",
            "comment": "Returns the path of all constructs from root to this construct, in string form."
          },
          "name": "path",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "An array of metadata objects associated with this construct.\nThis can be used, for example, to implement support for deprecation notices, source mapping, etc."
          },
          "name": "metadata",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.MetadataEntry"
              },
              "kind": "array"
            }
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "docs": {
            "comment": "Returns a string representation of this construct."
          },
          "name": "toString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "parameters": [
            {
              "name": "depth",
              "type": {
                "primitive": "number",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Returns a string with a tree representation of this construct and it's children."
          },
          "name": "toTreeString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "a child by path or undefined if not found.",
            "comment": "Return a descendant by path, or undefined"
          },
          "name": "tryFindChild",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct",
            "optional": true
          }
        },
        {
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "Child with the given path.",
            "comment": "Return a descendant by path\n\nThrows an exception if the descendant is not found."
          },
          "name": "findChild",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "key The context key",
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "value The context value",
                "comment": "The context value"
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "This can be used to set contextual values.\nContext must be set before any children are added, since children may consult context info during construction.\nIf the key already exists, it will be overridden."
          },
          "name": "setContext"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "key The context key",
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "The context value or undefined",
            "comment": "Retrieves a value from tree context.\n\nContext is usually initialized at the root, but can be overridden at any point in the tree."
          },
          "name": "getContext",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Retrieve a value from tree-global context\n\nIt is an error if the context object is not available."
          },
          "name": "requireContext",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "type a string denoting the type of metadata",
                "comment": "a string denoting the type of metadata"
              },
              "name": "type",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "data the value of the metadata (can be a Token). If null/undefined, metadata will not be added.",
                "comment": "the value of the metadata (can be a Token). If null/undefined, metadata will not be added."
              },
              "name": "data",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "param": "from a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)",
                "comment": "a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)"
              },
              "name": "from",
              "type": {
                "primitive": "any",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Adds a metadata entry to this construct.\nEntries are arbitrary values and will also include a stack trace to allow tracing back to\nthe code location for when the entry was added. It can be used, for example, to include source\nmapping in CloudFormation templates to improve diagnostics."
          },
          "name": "addMetadata",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "message The warning message.",
                "comment": "The warning message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Adds a { warning: <message> } metadata entry to this construct."
          },
          "name": "addWarning",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "docs": {
            "returns": "An array of validation error messages, or an empty array if there the construct is valid.",
            "comment": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis."
          },
          "name": "validate",
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "returns": "A list of validation errors. If the list is empty, all constructs are valid.",
            "comment": "Invokes 'validate' on all child constructs and then on this construct (depth-first)."
          },
          "name": "validateTree",
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.ValidationError"
              },
              "kind": "array"
            }
          }
        },
        {
          "parameters": [
            {
              "name": "upTo",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Return the ancestors (including self) of this Construct up until and excluding the indicated component"
          },
          "name": "ancestors",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              },
              "kind": "array"
            }
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "props The props bag.",
                "comment": "The props bag."
              },
              "name": "props",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "param": "name The name of the required property.",
                "comment": "The name of the required property."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Throws if the `props` bag doesn't include the property `name`.\nIn the future we can add some type-checking here, maybe even auto-generate during compilation."
          },
          "name": "required",
          "protected": true,
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "child The child construct",
                "comment": "The child construct"
              },
              "name": "child",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "name": "childName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "The resolved path part name of the child",
            "comment": "Adds a child construct to this node."
          },
          "name": "addChild",
          "protected": true
        },
        {
          "docs": {
            "comment": "Locks this construct from allowing more children to be added. After this\ncall, no more children can be added to this construct or to any children."
          },
          "name": "lock",
          "protected": true
        },
        {
          "docs": {
            "comment": "Unlocks this costruct and allows mutations (adding children)."
          },
          "name": "unlock",
          "protected": true
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.Construct",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "Construct",
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_kms$.EncryptionKeyRef": {
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of the key."
          },
          "name": "keyArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.kms.KeyArn"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "Optional policy document that represents the resource policy of this key.\n\nIf specified, addToResourcePolicy can be used to edit this policy.\nOtherwise this method will no-op."
          },
          "name": "policy",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.PolicyDocument",
            "optional": true
          },
          "immutable": true,
          "protected": true,
          "abstract": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "docs": {
                "param": "parent The parent construct.",
                "comment": "The parent construct."
              },
              "name": "parent",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "docs": {
                "param": "name The name of the construct.",
                "comment": "The name of the construct."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "props The key reference.",
                "comment": "The key reference."
              },
              "name": "props",
              "type": {
                "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyRefProps"
              }
            }
          ],
          "docs": {
            "comment": "Defines an imported encryption key.\n\n`ref` can be obtained either via a call to `key.export()` or using\nliterals.\n\nFor example:\n\n     const keyRefProps = key.export();\n     const keyRef1 = EncryptionKeyRef.import(this, 'MyImportedKey1', keyRefProps);\n     const keyRef2 = EncryptionKeyRef.import(this, 'MyImportedKey2', {\n         keyArn: new KeyArn('arn:aws:kms:...')\n     });"
          },
          "name": "import",
          "static": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyRef"
          }
        },
        {
          "parameters": [
            {
              "name": "alias",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Defines a new alias for the key."
          },
          "name": "addAlias",
          "returns": {
            "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyAlias"
          }
        },
        {
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              }
            }
          ],
          "docs": {
            "comment": "Adds a statement to the KMS key resource policy."
          },
          "name": "addToResourcePolicy"
        },
        {
          "docs": {
            "returns": "a key ref which can be used in a call to `EncryptionKey.import(ref)`.",
            "comment": "Exports this key from the current stack."
          },
          "name": "export",
          "returns": {
            "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyRefProps"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyRef",
      "module": "jsii$_aws_cdk_kms$",
      "namespace": "jsii$_aws_cdk_kms$",
      "name": "EncryptionKeyRef",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "abstract": true,
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_core$.PolicyStatement": {
      "docs": {
        "comment": "Represents a statement in an IAM policy document."
      },
      "subtypes": [
        "jsii$_aws_cdk_core$.PolicyStatement.Effect"
      ],
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "Indicates if this permission has a \"Principal\" section."
          },
          "name": "hasPrincipal",
          "type": {
            "primitive": "boolean"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Indicates if this permission as at least one resource associated with it."
          },
          "name": "hasResource",
          "type": {
            "primitive": "boolean"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Indicates if this permission has only a ``\"*\"`` resource associated with it."
          },
          "name": "isOnlyStarResource",
          "type": {
            "primitive": "boolean"
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "name": "action",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "name": "addAction",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "actions",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "name": "addActions",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          },
          "variadic": true
        },
        {
          "parameters": [
            {
              "name": "principal",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyPrincipal"
              }
            }
          ],
          "name": "addPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "arn",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "addAwsPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "accountId",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "addAwsAccountPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "service",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "addServicePrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "federated",
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "conditions",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "name": "addFederatedPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "name": "addAccountRootPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "resource",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "addResource",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Adds a ``\"*\"`` resource to this statement."
          },
          "name": "addAllResources",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "resources",
              "type": {
                "primitive": "any"
              },
              "variadic": true
            }
          ],
          "name": "addResources",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          },
          "variadic": true
        },
        {
          "parameters": [
            {
              "name": "sid",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "describe",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Sets the permission effect to deny access to resources."
          },
          "name": "allow",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Sets the permission effect to allow access to resources."
          },
          "name": "deny",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "Add a condition to the Policy"
          },
          "name": "addCondition",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "conditions",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "docs": {
            "comment": "Add multiple conditions to the Policy"
          },
          "name": "addConditions",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "deprecated": "For backwards compatibility. Use addCondition() instead.",
            "comment": "Add a condition to the Policy."
          },
          "name": "setCondition",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "accountId",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "limitToAccount",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "name": "resolve",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "name": "toJson",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.PolicyStatement",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "PolicyStatement",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "effect",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.PolicyStatement.Effect",
              "optional": true
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_core$.Arn": {
      "docs": {
        "comment": "An Amazon Resource Name (ARN).\nhttp://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"
      },
      "kind": "class",
      "methods": [
        {
          "parameters": [
            {
              "name": "components",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.ArnComponents"
              }
            }
          ],
          "docs": {
            "comment": "Creates an ARN from components.\nIf any component is the empty string,\nan empty string will be inserted into the generated ARN\nat the location that component corresponds to."
          },
          "name": "fromComponents",
          "static": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Arn"
          }
        },
        {
          "parameters": [
            {
              "name": "arn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "an ArnComponents object which allows access to the various\ncomponents of the ARN.",
            "comment": "Given an ARN, parses it and returns components.\n\nThe ARN it will be parsed and validated. The separator (`sep`) will be\nset to '/' if the 6th component includes a '/', in which case, `resource`\nwill be set to the value before the '/' and `resourceName` will be the\nrest. In case there is no '/', `resource` will be set to the 6th\ncomponents and `resourceName` will be set to the rest of the string."
          },
          "name": "parse",
          "static": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.ArnComponents"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.Arn",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "Arn",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_iam$.IIdentityResource": {
      "kind": "interface",
      "methods": [
        {
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              }
            }
          ],
          "docs": {
            "comment": "Adds an IAM statement to the default inline policy associated with this\nprincipal. If a policy doesn't exist, it is created."
          },
          "name": "addToPolicy"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "policy The policy resource to attach to this principal.",
                "comment": "The policy resource to attach to this principal."
              },
              "name": "policy",
              "type": {
                "fqn": "jsii$_aws_cdk_iam$.Policy"
              }
            }
          ],
          "docs": {
            "comment": "Attaches an inline policy to this principal.\nThis is the same as calling `policy.addToXxx(principal)`."
          },
          "name": "attachInlinePolicy"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "arn The ARN of the managed policy",
                "comment": "The ARN of the managed policy"
              },
              "name": "arn",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "Attaches a managed policy to this principal."
          },
          "name": "attachManagedPolicy"
        }
      ],
      "properties": [
        {
          "docs": {
            "comment": "The IAM principal of this identity (i.e. AWS principal, service principal, etc)."
          },
          "name": "principal",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.PolicyPrincipal"
          },
          "immutable": true
        }
      ],
      "fqn": "jsii$_aws_cdk_iam$.IIdentityResource",
      "module": "jsii$_aws_cdk_iam$",
      "namespace": "jsii$_aws_cdk_iam$",
      "name": "IIdentityResource"
    },
    "jsii$_aws_cdk_resources$.s3.BucketDomainName": {
      "kind": "class",
      "fqn": "jsii$_aws_cdk_resources$.s3.BucketDomainName",
      "module": "jsii$_aws_cdk_resources$",
      "namespace": "jsii$_aws_cdk_resources$.s3",
      "name": "BucketDomainName",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_resources$.s3.BucketDualStackDomainName": {
      "kind": "class",
      "fqn": "jsii$_aws_cdk_resources$.s3.BucketDualStackDomainName",
      "module": "jsii$_aws_cdk_resources$",
      "namespace": "jsii$_aws_cdk_resources$.s3",
      "name": "BucketDualStackDomainName",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_core$.Token": {
      "docs": {
        "comment": "Represents a lazy-evaluated value. Can be used to delay evaluation of a certain value\nin case, for example, that it requires some context or late-bound data."
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "returns": "The resolved value for this token."
          },
          "name": "resolve",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.Token",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "Token",
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_core$.PolicyDocument": {
      "kind": "class",
      "properties": [
        {
          "name": "isEmpty",
          "type": {
            "primitive": "boolean"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The number of statements already added to this policy.\nCan be used, for example, to generate uniuqe \"sid\"s within the policy."
          },
          "name": "statementCount",
          "type": {
            "primitive": "number"
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "name": "resolve",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              }
            }
          ],
          "name": "addStatement",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyDocument"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.PolicyDocument",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "PolicyDocument",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "baseDocument",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a new IAM policy document."
        },
        "initializer": true
      }
    }
  },
  "name": "jsii$_aws_cdk_s3$",
  "package": "@aws-cdk/s3",
  "version": "0.7.2-beta",
  "dependencies": {
    "jsii$_aws_cdk_core$": {
      "package": "@aws-cdk/core",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_iam$": {
      "package": "@aws-cdk/iam",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_kms$": {
      "package": "@aws-cdk/kms",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_resources$": {
      "package": "@aws-cdk/resources",
      "version": "0.7.2-beta"
    }
  },
  "names": {
    "java": "com.amazonaws.cdk.s3",
    "dotnet": "Aws.Cdk.S3",
    "js": "@aws-cdk/s3"
  },
  "nativenames": {
    "jsii$_aws_cdk_core$": {
      "java": "com.amazonaws.cdk",
      "dotnet": "Aws.Cdk",
      "js": "@aws-cdk/core"
    },
    "jsii$_aws_cdk_iam$": {
      "java": "com.amazonaws.cdk.iam",
      "dotnet": "Aws.Cdk.Iam",
      "js": "@aws-cdk/iam"
    },
    "jsii$_aws_cdk_kms$": {
      "java": "com.amazonaws.cdk.kms",
      "dotnet": "Aws.Cdk.Kms",
      "js": "@aws-cdk/kms"
    },
    "jsii$_aws_cdk_resources$": {
      "java": "com.amazonaws.cdk.resources",
      "dotnet": "Aws.Cdk.Resources",
      "js": "@aws-cdk/resources"
    },
    "jsii$_aws_cdk_s3$": {
      "java": "com.amazonaws.cdk.s3",
      "dotnet": "Aws.Cdk.S3",
      "js": "@aws-cdk/s3"
    }
  },
  "readme": {
    "markdown": "## AWS S3 Construct Library\n\nDefine an unencrypted S3 bucket.\n\n```ts\nnew Bucket(this, 'MyFirstBucket');\n```\n\n### Encryption\n\nDefine a KMS-encrypted bucket:\n\n```ts\nconst bucket = new Bucket(this, 'MyUnencryptedBucket', {\n    encryption: BucketEncryption.Kms\n});\n\n// you can access the encryption key:\nassert(bucket.encryptionKey instanceof kms.EncryptionKey);\n```\n\nYou can also supply your own key:\n\n```ts\nconst myKmsKey = new kms.EncryptionKey(this, 'MyKey');\n\nconst bucket = new Bucket(this, 'MyEncryptedBucket', {\n    encryption: BucketEncryption.Kms,\n    encryptionKey: myKmsKey\n});\n\nassert(bucket.encryptionKey === myKmsKey);\n```\n\nUse `BucketEncryption.ManagedKms` to use the S3 master KMS key:\n\n```ts\nconst bucket = new Bucket(this, 'Buck', {\n    encryption: BucketEncryption.ManagedKms\n});\n\nassert(bucket.encryptionKey == null);\n```\n\n### Bucket Policy\n\nBy default, a bucket policy will be automatically created for the bucket upon the first call to `addToPolicy(statement)`:\n\n```ts\nconst bucket = new Bucket(this, 'MyBucket');\nbucket.addToPolicy(statement);\n\n// we now have a policy!\n```\n\nYou can bring you own policy as well:\n\n```ts\nconst policy = new BucketPolicy(this, 'MyBucketPolicy');\nconst bucket = new Bucket(this, 'MyBucket', { policy });\n```\n\n### Importing and Exporting Buckets\n\nYou can create a `Bucket` construct that represents an external/existing/unowned bucket by using the `Bucket.import` factory method.\n\nThis method accepts an object that adheres to `BucketRef` which basically include tokens to bucket's attributes.\n\nThis means that you can define a `BucketRef` using token literals:\n\n```ts\nconst bucket = Bucket.import(this, {\n    bucketArn: new BucketArn('arn:aws:s3:::my-bucket')\n});\n\n// now you can just call methods on the bucket\nbucket.grantReadWrite(user);\n```\n\nThe `bucket.export()` method can be used to \"export\" the bucket from the current stack. It returns a `BucketRef` object that can later be used in a call to `Bucket.import` in another stack.\n\nHere's an example.\n\nLet's define a stack with an S3 bucket and export it using `bucket.export()`.\n\n```ts\nclass Producer extends Stack {\n    public readonly myBucketRef: BucketRef;\n\n    constructor(parent: App, name: string) {\n        super(parent, name);\n\n        const bucket = new Bucket(this, 'MyBucket');\n        this.myBucketRef = bucket.export();\n    }\n}\n```\n\nNow let's define a stack that requires a BucketRef as an input and uses\n`Bucket.import` to create a `Bucket` object that represents this external\nbucket. Grant a user principal created within this consuming stack read/write\npermissions to this bucket and contents.\n\n```ts\ninterface ConsumerProps {\n    public userBucketRef: BucketRef;\n}\n\nclass Consumer extends Stack {\n    constructor(parent: App, name: string, props: ConsumerProps) {\n        super(parent, name);\n\n        const user = new User(this, 'MyUser');\n        const userBucket = Bucket.import(this, props.userBucketRef);\n        userBucket.grantReadWrite(user);\n    }\n}\n```\n\nNow, let's define our CDK app to bind these together:\n\n```ts\nconst app = new App(process.argv);\n\nconst producer = new Producer(app, 'produce');\n\nnew Consumer(app, 'consume', {\n    userBucketRef: producer.myBucketRef\n});\n\nprocess.stdout.write(app.run());\n```\n"
  },
  "code": "var jsii$_aws_cdk_s3$ =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 3);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_core$;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_resources$;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(0);\nconst resources_1 = __webpack_require__(1);\n/**\n * Applies an Amazon S3 bucket policy to an Amazon S3 bucket.\n */\nclass BucketPolicy extends core_1.Construct {\n    constructor(parent, name, props) {\n        super(parent, name);\n        /**\n         * A policy document containing permissions to add to the specified bucket.\n         * For more information, see Access Policy Language Overview in the Amazon\n         * Simple Storage Service Developer Guide.\n         */\n        this.document = new core_1.PolicyDocument();\n        if (!props.bucket.bucketName) {\n            throw new Error('Bucket doesn\\'t have a bucketName defined');\n        }\n        new resources_1.s3.BucketPolicyResource(this, 'Resource', {\n            bucket: props.bucket.bucketName,\n            policyDocument: this.document,\n        });\n    }\n}\nexports.BucketPolicy = BucketPolicy;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(4));\n__export(__webpack_require__(2));\n__export(__webpack_require__(8));\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(0);\nconst kms = __webpack_require__(5);\nconst resources_1 = __webpack_require__(1);\nconst bucket_policy_1 = __webpack_require__(2);\nconst perms = __webpack_require__(6);\nconst util_1 = __webpack_require__(7);\n/**\n * Represents an S3 Bucket.\n *\n * Buckets can be either defined within this stack:\n *\n *     new Bucket(this, 'MyBucket', { props });\n *\n * Or imported from an existing bucket:\n *\n *     BucketRef.import(this, 'MyImportedBucket', { bucketArn: ... });\n *\n * You can also export a bucket and import it into another stack:\n *\n *     const ref = myBucket.export();\n *     BucketRef.import(this, 'MyImportedBucket', ref);\n *\n */\nclass BucketRef extends core_1.Construct {\n    constructor() {\n        super(...arguments);\n        /**\n         * Indicates if a bucket resource policy should automatically created upon\n         * the first call to `addToResourcePolicy`.\n         */\n        this.autoCreatePolicy = false;\n    }\n    /**\n     * Creates a Bucket construct that represents an external bucket.\n     *\n     * @param parent The parent creating construct (usually `this`).\n     * @param name The construct's name.\n     * @param ref A BucketRefProps object. Can be obtained from a call to\n     * `bucket.export()`.\n     */\n    static import(parent, name, props) {\n        return new ImportedBucketRef(parent, name, props);\n    }\n    /**\n     * Exports this bucket from the stack.\n     */\n    export() {\n        return {\n            bucketArn: new core_1.Output(this, 'BucketArn', { value: this.bucketArn }).makeImportValue(),\n            bucketName: new core_1.Output(this, 'BucketName', { value: this.bucketName }).makeImportValue(),\n        };\n    }\n    /**\n     * Adds a statement to the resource policy for a principal (i.e.\n     * account/role/service) to perform actions on this bucket and/or it's\n     * contents. Use `bucketArn` and `arnForObjects(keys)` to obtain ARNs for\n     * this bucket or objects.\n     */\n    addToResourcePolicy(permission) {\n        if (!this.policy && this.autoCreatePolicy) {\n            this.policy = new bucket_policy_1.BucketPolicy(this, 'Policy', { bucket: this });\n        }\n        if (this.policy) {\n            this.policy.document.addStatement(permission);\n        }\n    }\n    /**\n     * Returns an ARN that represents all objects within the bucket that match\n     * the key pattern specified. To represent all keys, specify ``\"*\"``.\n     *\n     * If you specify multiple components for keyPattern, they will be concatenated::\n     *\n     *     arnForObjects('home/', team, '/', user, '/*')\n     *\n     */\n    arnForObjects(...keyPattern) {\n        return new core_1.FnConcat(this.bucketArn, '/', ...keyPattern);\n    }\n    /**\n     * Temporary API for granting read permissions for this bucket and it's\n     * contents to an IAM principal (Role/Group/User).\n     *\n     * If an encryption key is used, permission to ues the key to decrypt the\n     * contents of the bucket will also be granted.\n     */\n    grantRead(identity, objectsKeyPattern = '*') {\n        if (!identity) {\n            return;\n        }\n        this.grant(identity, objectsKeyPattern, perms.BUCKET_READ_ACTIONS, perms.KEY_READ_ACTIONS);\n    }\n    /**\n     * Grants read/write permissions for this bucket and it's contents to an IAM\n     * principal (Role/Group/User).\n     *\n     * If an encryption key is used, permission to use the key for\n     * encrypt/decrypt will also be granted.\n     */\n    grantReadWrite(identity, objectsKeyPattern = '*') {\n        if (!identity) {\n            return;\n        }\n        const bucketActions = perms.BUCKET_READ_ACTIONS.concat(perms.BUCKET_WRITE_ACTIONS);\n        const keyActions = perms.KEY_READ_ACTIONS.concat(perms.KEY_WRITE_ACTIONS);\n        this.grant(identity, objectsKeyPattern, bucketActions, keyActions);\n    }\n    grant(identity, objectsKeyPattern, bucketActions, keyActions) {\n        const resources = [\n            this.bucketArn,\n            this.arnForObjects(objectsKeyPattern)\n        ];\n        identity.addToPolicy(new core_1.PolicyStatement()\n            .addResources(...resources)\n            .addActions(...bucketActions));\n        // grant key permissions if there's an associated key.\n        if (this.encryptionKey) {\n            // KMS permissions need to be granted both directions\n            identity.addToPolicy(new core_1.PolicyStatement()\n                .addResource(this.encryptionKey.keyArn)\n                .addActions(...keyActions));\n            this.encryptionKey.addToResourcePolicy(new core_1.PolicyStatement()\n                .addResource('*')\n                .addPrincipal(identity.principal)\n                .addActions(...keyActions));\n        }\n    }\n}\nexports.BucketRef = BucketRef;\n/**\n * An S3 bucket with associated policy objects\n *\n * This bucket does not yet have all features that exposed by the underlying\n * BucketResource.\n */\nclass Bucket extends BucketRef {\n    constructor(parent, name, props = {}) {\n        super(parent, name);\n        this.autoCreatePolicy = true;\n        this.lifecycleRules = [];\n        util_1.validateBucketName(props && props.bucketName);\n        const { bucketEncryption, encryptionKey } = this.parseEncryption(props);\n        const resource = new resources_1.s3.BucketResource(this, 'Resource', {\n            bucketName: props && props.bucketName,\n            bucketEncryption,\n            versioningConfiguration: props.versioned ? { status: 'Enabled' } : undefined,\n            lifecycleConfiguration: new core_1.Token(() => this.parseLifecycleConfiguration()),\n        });\n        core_1.applyRemovalPolicy(resource, props.removalPolicy);\n        this.versioned = props.versioned;\n        this.policy = props.policy;\n        this.encryptionKey = encryptionKey;\n        this.bucketArn = resource.bucketArn;\n        this.bucketName = resource.ref;\n        this.domainName = resource.bucketDomainName;\n        this.dualstackDomainName = resource.bucketDualStackDomainName;\n        // Add all lifecycle rules\n        (props.lifecycleRules || []).forEach(this.addLifecycleRule.bind(this));\n    }\n    /**\n     * Add a lifecycle rule to the bucket\n     *\n     * @param rule The rule to add\n     */\n    addLifecycleRule(rule) {\n        if ((rule.noncurrentVersionExpirationInDays !== undefined\n            || (rule.noncurrentVersionTransitions && rule.noncurrentVersionTransitions.length > 0))\n            && !this.versioned) {\n            throw new Error(\"Cannot use 'noncurrent' rules on a nonversioned bucket\");\n        }\n        this.lifecycleRules.push(rule);\n    }\n    /**\n     * Set up key properties and return the Bucket encryption property from the\n     * user's configuration.\n     */\n    parseEncryption(props) {\n        // default to unencrypted.\n        const encryptionType = props.encryption || BucketEncryption.Unencrypted;\n        // if encryption key is set, encryption must be set to KMS.\n        if (encryptionType !== BucketEncryption.Kms && props.encryptionKey) {\n            throw new Error(`encryptionKey is specified, so 'encryption' must be set to KMS (value: ${encryptionType})`);\n        }\n        if (encryptionType === BucketEncryption.Unencrypted) {\n            return { bucketEncryption: undefined, encryptionKey: undefined };\n        }\n        if (encryptionType === BucketEncryption.Kms) {\n            const encryptionKey = props.encryptionKey || new kms.EncryptionKey(this, 'Key', {\n                description: `Created by ${this.path}`\n            });\n            const bucketEncryption = {\n                serverSideEncryptionConfiguration: [\n                    {\n                        serverSideEncryptionByDefault: {\n                            sseAlgorithm: 'aws:kms',\n                            kmsMasterKeyId: encryptionKey.keyArn\n                        }\n                    }\n                ]\n            };\n            return { encryptionKey, bucketEncryption };\n        }\n        if (encryptionType === BucketEncryption.KmsManaged) {\n            const bucketEncryption = {\n                serverSideEncryptionConfiguration: [\n                    { serverSideEncryptionByDefault: { sseAlgorithm: 'aws:kms' } }\n                ]\n            };\n            return { bucketEncryption };\n        }\n        throw new Error(`Unexpected 'encryptionType': ${encryptionType}`);\n    }\n    /**\n     * Parse the lifecycle configuration out of the uucket props\n     * @param props Par\n     */\n    parseLifecycleConfiguration() {\n        if (!this.lifecycleRules || this.lifecycleRules.length === 0) {\n            return undefined;\n        }\n        return { rules: this.lifecycleRules.map(parseLifecycleRule) };\n        function parseLifecycleRule(rule) {\n            const enabled = rule.enabled !== undefined ? rule.enabled : true;\n            const x = {\n                // tslint:disable-next-line:max-line-length\n                abortIncompleteMultipartUpload: rule.abortIncompleteMultipartUploadAfterDays !== undefined ? { daysAfterInitiation: rule.abortIncompleteMultipartUploadAfterDays } : undefined,\n                expirationDate: rule.expirationDate,\n                expirationInDays: rule.expirationInDays,\n                id: rule.id,\n                noncurrentVersionExpirationInDays: rule.noncurrentVersionExpirationInDays,\n                noncurrentVersionTransitions: rule.noncurrentVersionTransitions,\n                prefix: rule.prefix,\n                status: enabled ? 'Enabled' : 'Disabled',\n                transitions: rule.transitions,\n                tagFilters: parseTagFilters(rule.tagFilters)\n            };\n            return x;\n        }\n        function parseTagFilters(tagFilters) {\n            if (!tagFilters || tagFilters.length === 0) {\n                return undefined;\n            }\n            return Object.keys(tagFilters).map(tag => ({\n                key: tag,\n                value: tagFilters[tag]\n            }));\n        }\n    }\n}\nexports.Bucket = Bucket;\n/**\n * What kind of server-side encryption to apply to this bucket\n */\nvar BucketEncryption;\n(function (BucketEncryption) {\n    /**\n     * Objects in the bucket are not encrypted.\n     */\n    BucketEncryption[\"Unencrypted\"] = \"NONE\";\n    /**\n     * Server-side KMS encryption with a master key managed by S3.\n     */\n    BucketEncryption[\"KmsManaged\"] = \"MANAGED\";\n    /**\n     * Server-side encryption with a KMS key managed by the user.\n     * If `encryptionKey` is specified, this key will be used, otherwise, one will be defined.\n     */\n    BucketEncryption[\"Kms\"] = \"KMS\";\n})(BucketEncryption = exports.BucketEncryption || (exports.BucketEncryption = {}));\n/**\n * The name of the bucket.\n */\nclass BucketName extends core_1.Token {\n}\nexports.BucketName = BucketName;\nclass ImportedBucketRef extends BucketRef {\n    constructor(parent, name, props) {\n        super(parent, name);\n        this.bucketArn = util_1.parseBucketArn(props);\n        this.bucketName = util_1.parseBucketName(props);\n        this.autoCreatePolicy = false;\n        this.policy = undefined;\n    }\n}\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_kms$;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BUCKET_READ_ACTIONS = [\n    's3:GetObject*',\n    's3:GetBucket*',\n    's3:List*',\n];\nexports.BUCKET_WRITE_ACTIONS = [\n    's3:PutObject*',\n    's3:DeleteObject*',\n    's3:Abort*'\n];\nexports.KEY_READ_ACTIONS = [\n    'kms:Decrypt',\n    'kms:DescribeKey',\n];\nexports.KEY_WRITE_ACTIONS = [\n    'kms:Encrypt',\n    'kms:ReEncrypt*',\n    'kms:GenerateDataKey*',\n];\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(0);\nfunction validateBucketName(bucketName) {\n    if (!bucketName) {\n        return;\n    }\n    if (bucketName.search(/[^a-z0-9.-]/g) !== -1) {\n        throw new Error('Bucket name contains invalid characters: ' + bucketName);\n    }\n}\nexports.validateBucketName = validateBucketName;\nfunction parseBucketArn(props) {\n    // if we have an explicit bucket ARN, use it.\n    if (props.bucketArn) {\n        return props.bucketArn;\n    }\n    if (props.bucketName) {\n        return core_1.Arn.fromComponents({\n            // S3 Bucket names are globally unique in a partition,\n            // and so their ARNs have empty region and account components\n            region: '',\n            account: '',\n            service: 's3',\n            resource: props.bucketName\n        });\n    }\n    throw new Error('Cannot determine bucket ARN. At least `bucketArn` or `bucketName` is needed');\n}\nexports.parseBucketArn = parseBucketArn;\nfunction parseBucketName(props) {\n    // if we have an explicit bucket name, use it.\n    if (props.bucketName) {\n        return props.bucketName;\n    }\n    // if we have a string arn, we can extract the bucket name from it.\n    if (props.bucketArn) {\n        const resolved = props.bucketArn.resolve();\n        if (typeof (resolved) === 'string') {\n            const components = core_1.Arn.parse(resolved);\n            if (components.service !== 's3') {\n                throw new Error('Invalid ARN. Expecting \"s3\" service:' + resolved);\n            }\n            if (components.resourceName) {\n                throw new Error(`Bucket ARN must not contain a path`);\n            }\n            return components.resource;\n        }\n    }\n    // no bucket name is okay since it's optional.\n    return undefined;\n}\nexports.parseBucketName = parseBucketName;\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Storage class to move an object to\n */\nvar StorageClass;\n(function (StorageClass) {\n    /**\n     * Storage class for data that is accessed less frequently, but requires rapid access when needed.\n     *\n     * Has lower availability than Standard storage.\n     */\n    StorageClass[\"InfrequentAccess\"] = \"STANDARD_IA\";\n    /**\n     * Infrequent Access that's only stored in one availability zone.\n     *\n     * Has lower availability than standard InfrequentAccess.\n     */\n    StorageClass[\"OneZoneInfrequentAccess\"] = \"ONEZONE_IA\";\n    /**\n     * Storage class for long-term archival that can take between minutes and hours to access.\n     */\n    StorageClass[\"Glacier\"] = \"GLACIER\";\n})(StorageClass = exports.StorageClass || (exports.StorageClass = {}));\n\n\n/***/ })\n/******/ ]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"
}
