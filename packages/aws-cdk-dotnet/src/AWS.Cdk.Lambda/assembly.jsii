{
  "schema": "jsii/1.0",
  "types": {
    "jsii$_aws_cdk_lambda$.AliasProps": {
      "docs": {
        "comment": "Properties for a new Lambda alias"
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "default": "No description",
            "comment": "Description for the alias"
          },
          "name": "description",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Function version this alias refers to\n\nUse lambda.addVersion() to obtain a new lambda version to refer to."
          },
          "name": "version",
          "type": {
            "fqn": "jsii$_aws_cdk_lambda$.Version"
          }
        },
        {
          "docs": {
            "comment": "Name of this alias"
          },
          "name": "aliasName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "default": "No additional versions",
            "comment": "Additional versions with individual weights this alias points to\n\nIndividual additional version weights specified here should add up to\n(less than) one. All remaining weight is routed to the default\nversion.\n\nFor example, the config is\n\n      version: \"1\"\n      additionalVersions: [{ version: \"2\", weight: 0.05 }]\n\nThen 5% of traffic will be routed to function version 2, while\nthe remaining 95% of traffic will be routed to function version 1."
          },
          "name": "additionalVersions",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_lambda$.VersionWeight"
              },
              "kind": "array"
            },
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_lambda$.AliasProps",
      "module": "jsii$_aws_cdk_lambda$",
      "namespace": "jsii$_aws_cdk_lambda$",
      "name": "AliasProps",
      "datatype": true
    },
    "jsii$_aws_cdk_lambda$.Alias": {
      "docs": {
        "comment": "A new alias to a particular version of a Lambda function."
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "ARN of this alias\n\nUsed to be able to use Alias in place of a regular Lambda. Lambda accepts\nARNs everywhere it accepts function names."
          },
          "name": "functionName",
          "type": {
            "fqn": "jsii$_aws_cdk_lambda$.FunctionName"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "ARN of this alias\n\nUsed to be able to use Alias in place of a regular Lambda. Lambda accepts\nARNs everywhere it accepts function names."
          },
          "name": "functionArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.lambda.FunctionArn"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Role associated with this alias"
          },
          "name": "role",
          "type": {
            "fqn": "jsii$_aws_cdk_iam$.Role",
            "optional": true
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Whether the addPermission() call adds any permissions\n\nTrue for new Lambdas, false for imported Lambdas (they might live in different accounts)."
          },
          "name": "canCreatePermissions",
          "type": {
            "primitive": "boolean"
          },
          "protected": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "permission",
              "type": {
                "fqn": "jsii$_aws_cdk_lambda$.LambdaPermission"
              }
            }
          ],
          "docs": {
            "comment": "Adds a permission to the Lambda resource policy."
          },
          "name": "addPermission"
        }
      ],
      "fqn": "jsii$_aws_cdk_lambda$.Alias",
      "module": "jsii$_aws_cdk_lambda$",
      "namespace": "jsii$_aws_cdk_lambda$",
      "name": "Alias",
      "base": {
        "fqn": "jsii$_aws_cdk_lambda$.LambdaRef"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_lambda$.AliasProps"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_lambda$.VersionWeight": {
      "docs": {
        "comment": "A version/weight pair for routing traffic to Lambda functions"
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "The version to route traffic to"
          },
          "name": "version",
          "type": {
            "fqn": "jsii$_aws_cdk_lambda$.Version"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "How much weight to assign to this version (0..1)"
          },
          "name": "weight",
          "type": {
            "primitive": "number"
          },
          "immutable": true
        }
      ],
      "fqn": "jsii$_aws_cdk_lambda$.VersionWeight",
      "module": "jsii$_aws_cdk_lambda$",
      "namespace": "jsii$_aws_cdk_lambda$",
      "name": "VersionWeight",
      "datatype": true
    },
    "jsii$_aws_cdk_lambda$.LambdaRefProps": {
      "docs": {
        "comment": "Represents a Lambda function defined outside of this stack."
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of the Lambda function.\nFormat: arn:<partition>:lambda:<region>:<account-id>:function:<function-name>"
          },
          "name": "functionArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.lambda.FunctionArn"
          }
        },
        {
          "docs": {
            "comment": "The IAM execution role associated with this function.\nIf the role is not specified, any role-related operations will no-op."
          },
          "name": "role",
          "type": {
            "fqn": "jsii$_aws_cdk_iam$.Role",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_lambda$.LambdaRefProps",
      "module": "jsii$_aws_cdk_lambda$",
      "namespace": "jsii$_aws_cdk_lambda$",
      "name": "LambdaRefProps",
      "datatype": true
    },
    "jsii$_aws_cdk_lambda$.LambdaRef": {
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The name of the function."
          },
          "name": "functionName",
          "type": {
            "fqn": "jsii$_aws_cdk_lambda$.FunctionName"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "The ARN fo the function."
          },
          "name": "functionArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.lambda.FunctionArn"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "The IAM role associated with this function."
          },
          "name": "role",
          "type": {
            "fqn": "jsii$_aws_cdk_iam$.Role",
            "optional": true
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "Whether the addPermission() call adds any permissions\n\nTrue for new Lambdas, false for imported Lambdas (they might live in different accounts)."
          },
          "name": "canCreatePermissions",
          "type": {
            "primitive": "boolean"
          },
          "immutable": true,
          "protected": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "Returns a RuleTarget that can be used to trigger this Lambda as a\nresult from a CloudWatch event."
          },
          "name": "eventRuleTarget",
          "type": {
            "fqn": "jsii$_aws_cdk_events$.EventRuleTarget"
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "docs": {
                "param": "parent The parent construct",
                "comment": "The parent construct"
              },
              "name": "parent",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "docs": {
                "param": "name The name of the lambda construct",
                "comment": "The name of the lambda construct"
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "ref A reference to a Lambda function. Can be created manually (see\nexample above) or obtained through a call to `lambda.export()`.",
                "comment": "A reference to a Lambda function. Can be created manually (see\nexample above) or obtained through a call to `lambda.export()`."
              },
              "name": "ref",
              "type": {
                "fqn": "jsii$_aws_cdk_lambda$.LambdaRefProps"
              }
            }
          ],
          "docs": {
            "comment": "Creates a Lambda function object which represents a function not defined\nwithin this stack.\n\n      Lambda.import(this, 'MyImportedFunction', { lambdaArn: new LambdaArn('arn:aws:...') });"
          },
          "name": "import",
          "static": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_lambda$.LambdaRef"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "name A name for the permission construct",
                "comment": "A name for the permission construct"
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "permission",
              "type": {
                "fqn": "jsii$_aws_cdk_lambda$.LambdaPermission"
              }
            }
          ],
          "docs": {
            "comment": "Adds a permission to the Lambda resource policy."
          },
          "name": "addPermission"
        },
        {
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              }
            }
          ],
          "name": "addToRolePolicy"
        }
      ],
      "interfaces": [
        {
          "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget"
        }
      ],
      "fqn": "jsii$_aws_cdk_lambda$.LambdaRef",
      "module": "jsii$_aws_cdk_lambda$",
      "namespace": "jsii$_aws_cdk_lambda$",
      "name": "LambdaRef",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "abstract": true,
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_lambda$.FunctionName": {
      "kind": "class",
      "fqn": "jsii$_aws_cdk_lambda$.FunctionName",
      "module": "jsii$_aws_cdk_lambda$",
      "namespace": "jsii$_aws_cdk_lambda$",
      "name": "FunctionName",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_lambda$.LambdaProps": {
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "The source code of your Lambda function. You can point to a file in an\nAmazon Simple Storage Service (Amazon S3) bucket or specify your source\ncode as inline text."
          },
          "name": "code",
          "type": {
            "fqn": "jsii$_aws_cdk_lambda$.LambdaCode"
          }
        },
        {
          "docs": {
            "comment": "A description of the function."
          },
          "name": "description",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The name of the function (within your source code) that Lambda calls to\nstart running your code. For more information, see the Handler property\nin the AWS Lambda Developer Guide.\n\nNOTE: If you specify your source code as inline text by specifying the\nZipFile property within the Code property, specify index.function_name as\nthe handler."
          },
          "name": "handler",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "default": "3 seconds.",
            "comment": "The function execution time (in seconds) after which Lambda terminates\nthe function. Because the execution time affects cost, set this value\nbased on the function's expected execution time."
          },
          "name": "timeout",
          "type": {
            "primitive": "number",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Key-value pairs that Lambda caches and makes available for your Lambda\nfunctions. Use environment variables to apply configuration changes, such\nas test and production environment configurations, without changing your\nLambda function source code."
          },
          "name": "environment",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The runtime environment for the Lambda function that you are uploading.\nFor valid values, see the Runtime property in the AWS Lambda Developer\nGuide."
          },
          "name": "runtime",
          "type": {
            "fqn": "jsii$_aws_cdk_lambda$.LambdaRuntime"
          }
        },
        {
          "docs": {
            "comment": "A name for the function. If you don't specify a name, AWS CloudFormation\ngenerates a unique physical ID and uses that ID for the function's name.\nFor more information, see Name Type."
          },
          "name": "functionName",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "The default value is 128 MB",
            "comment": "The amount of memory, in MB, that is allocated to your Lambda function.\nLambda uses this value to proportionally allocate the amount of CPU\npower. For more information, see Resource Model in the AWS Lambda\nDeveloper Guide."
          },
          "name": "memorySize",
          "type": {
            "primitive": "number",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Initial policy statements to add to the created Lambda Role.\n\nYou can call `addToRolePolicy` to the created lambda to add statements post creation."
          },
          "name": "initialPolicy",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              },
              "kind": "array"
            },
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_lambda$.LambdaProps",
      "module": "jsii$_aws_cdk_lambda$",
      "namespace": "jsii$_aws_cdk_lambda$",
      "name": "LambdaProps",
      "datatype": true
    },
    "jsii$_aws_cdk_lambda$.Lambda": {
      "docs": {
        "comment": "Deploys a file from from inside the construct library as a function.\n\nThe supplied file is subject to the 4096 bytes limit of being embedded in a\nCloudFormation template.\n\nThe construct includes an associated role with the lambda.\n\nThis construct does not yet reproduce all features from the underlying resource\nlibrary."
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "Name of this function"
          },
          "name": "functionName",
          "type": {
            "fqn": "jsii$_aws_cdk_lambda$.FunctionName"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "ARN of this function"
          },
          "name": "functionArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.lambda.FunctionArn"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Execution role associated with this function"
          },
          "name": "role",
          "type": {
            "fqn": "jsii$_aws_cdk_iam$.Role",
            "optional": true
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Whether the addPermission() call adds any permissions\n\nTrue for new Lambdas, false for imported Lambdas (they might live in different accounts)."
          },
          "name": "canCreatePermissions",
          "type": {
            "primitive": "boolean"
          },
          "immutable": true,
          "protected": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "docs": {
                "param": "key The environment variable key.",
                "comment": "The environment variable key."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "value The environment variable's value.",
                "comment": "The environment variable's value."
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "Adds an environment variable to this Lambda function.\nIf this is a ref to a Lambda function, this operation results in a no-op."
          },
          "name": "addEnvironment"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "name A unique name for this version",
                "comment": "A unique name for this version"
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "codeSha256 The SHA-256 hash of the most recently deployed Lambda source code, or\nomit to skip validation.",
                "comment": "The SHA-256 hash of the most recently deployed Lambda source code, or\nomit to skip validation."
              },
              "name": "codeSha256",
              "type": {
                "primitive": "string",
                "optional": true
              }
            },
            {
              "docs": {
                "param": "description A description for this version.",
                "comment": "A description for this version."
              },
              "name": "description",
              "type": {
                "primitive": "string",
                "optional": true
              }
            }
          ],
          "docs": {
            "returns": "A new Version object.",
            "comment": "Add a new version for this Lambda\n\nIf you want to deploy through CloudFormation and use aliases, you need to\nadd a new version (with a new name) to your Lambda every time you want\nto deploy an update. An alias can then refer to the newly created Version.\n\nAll versions should have distinct names, and you should not delete versions\nas long as your Alias needs to refer to them."
          },
          "name": "addVersion",
          "returns": {
            "fqn": "jsii$_aws_cdk_lambda$.Version"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_lambda$.Lambda",
      "module": "jsii$_aws_cdk_lambda$",
      "namespace": "jsii$_aws_cdk_lambda$",
      "name": "Lambda",
      "base": {
        "fqn": "jsii$_aws_cdk_lambda$.LambdaRef"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_lambda$.LambdaProps"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_lambda$.LambdaPermission": {
      "docs": {
        "comment": "Represents a permission statement that can be added to a Lambda's resource policy\nvia the `addToResourcePolicy` method."
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "default": "'lambda:InvokeFunction'",
            "comment": "The Lambda actions that you want to allow in this statement. For example,\nyou can specify lambda:CreateFunction to specify a certain action, or use\na wildcard (``lambda:*``) to grant permission to all Lambda actions. For a\nlist of actions, see Actions and Condition Context Keys for AWS Lambda in\nthe IAM User Guide."
          },
          "name": "action",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "The caller would not need to present a token.",
            "comment": "A unique token that must be supplied by the principal invoking the\nfunction."
          },
          "name": "eventSourceToken",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The entity for which you are granting permission to invoke the Lambda\nfunction. This entity can be any valid AWS service principal, such as\ns3.amazonaws.com or sns.amazonaws.com, or, if you are granting\ncross-account permission, an AWS account ID. For example, you might want\nto allow a custom application in another AWS account to push events to\nLambda by invoking your function.\n\nThe principal can be either an AccountPrincipal or a ServicePrincipal."
          },
          "name": "principal",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.PolicyPrincipal"
          }
        },
        {
          "docs": {
            "comment": "The AWS account ID (without hyphens) of the source owner. For example, if\nyou specify an S3 bucket in the SourceArn property, this value is the\nbucket owner's account ID. You can use this property to ensure that all\nsource principals are owned by a specific account."
          },
          "name": "sourceAccount",
          "type": {
            "primitive": "any",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The ARN of a resource that is invoking your function. When granting\nAmazon Simple Storage Service (Amazon S3) permission to invoke your\nfunction, specify this property with the bucket ARN as its value. This\nensures that events generated only from the specified bucket, not just\nany bucket from any AWS account that creates a mapping to your function,\ncan invoke the function."
          },
          "name": "sourceArn",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.Arn",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_lambda$.LambdaPermission",
      "module": "jsii$_aws_cdk_lambda$",
      "namespace": "jsii$_aws_cdk_lambda$",
      "name": "LambdaPermission",
      "datatype": true
    },
    "jsii$_aws_cdk_lambda$.LambdaRuntime": {
      "docs": {
        "comment": "Lambda function runtime environment."
      },
      "kind": "enum",
      "members": [
        {
          "name": "NodeJS"
        },
        {
          "name": "NodeJS43"
        },
        {
          "name": "NodeJS43Edge"
        },
        {
          "name": "NodeJS610"
        },
        {
          "name": "Java8"
        },
        {
          "name": "Python27"
        },
        {
          "name": "Python36"
        },
        {
          "name": "DotNetCore1"
        },
        {
          "name": "DotNetCore2"
        },
        {
          "name": "Go1x"
        }
      ],
      "fqn": "jsii$_aws_cdk_lambda$.LambdaRuntime",
      "module": "jsii$_aws_cdk_lambda$",
      "namespace": "jsii$_aws_cdk_lambda$",
      "name": "LambdaRuntime"
    },
    "jsii$_aws_cdk_lambda$.LambdaCode": {
      "kind": "class",
      "methods": [
        {
          "parameters": [
            {
              "name": "runtime",
              "type": {
                "fqn": "jsii$_aws_cdk_lambda$.LambdaRuntime"
              }
            }
          ],
          "name": "toJSON",
          "abstract": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_resources$.lambda.FunctionResource.CodeProperty"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_lambda$.LambdaCode",
      "module": "jsii$_aws_cdk_lambda$",
      "namespace": "jsii$_aws_cdk_lambda$",
      "name": "LambdaCode",
      "abstract": true,
      "initializer": {
        "initializer": true
      }
    },
    "jsii$_aws_cdk_lambda$.LambdaS3Code": {
      "kind": "class",
      "methods": [
        {
          "parameters": [
            {
              "name": "_runtime",
              "type": {
                "fqn": "jsii$_aws_cdk_lambda$.LambdaRuntime"
              }
            }
          ],
          "name": "toJSON",
          "returns": {
            "fqn": "jsii$_aws_cdk_resources$.lambda.FunctionResource.CodeProperty"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_lambda$.LambdaS3Code",
      "module": "jsii$_aws_cdk_lambda$",
      "namespace": "jsii$_aws_cdk_lambda$",
      "name": "LambdaS3Code",
      "base": {
        "fqn": "jsii$_aws_cdk_lambda$.LambdaCode"
      },
      "initializer": {
        "parameters": [
          {
            "name": "bucket",
            "type": {
              "fqn": "jsii$_aws_cdk_s3$.BucketRef"
            }
          },
          {
            "name": "key",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "objectVersion",
            "type": {
              "primitive": "string",
              "optional": true
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_lambda$.LambdaInlineCode": {
      "kind": "class",
      "methods": [
        {
          "parameters": [
            {
              "name": "runtime",
              "type": {
                "fqn": "jsii$_aws_cdk_lambda$.LambdaRuntime"
              }
            }
          ],
          "name": "toJSON",
          "returns": {
            "fqn": "jsii$_aws_cdk_resources$.lambda.FunctionResource.CodeProperty"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_lambda$.LambdaInlineCode",
      "module": "jsii$_aws_cdk_lambda$",
      "namespace": "jsii$_aws_cdk_lambda$",
      "name": "LambdaInlineCode",
      "base": {
        "fqn": "jsii$_aws_cdk_lambda$.LambdaCode"
      },
      "initializer": {
        "parameters": [
          {
            "name": "code",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_lambda$.IJavaScriptLambdaHandler": {
      "docs": {
        "comment": "Defines the handler code for an inline JavaScript lambda function.\n\nAWS Lambda invokes your Lambda function via a handler object. A handler\nrepresents the name of your Lambda function (and serves as the entry point\nthat AWS Lambda uses to execute your function code. For example:"
      },
      "kind": "interface",
      "methods": [
        {
          "parameters": [
            {
              "docs": {
                "param": "event Event sources can range from a supported AWS service or\ncustom applications that invoke your Lambda function. For examples, see\n[Sample Events Published by Event\nSources](https://docs.aws.amazon.com/lambda/latest/dg/eventsources.html).",
                "comment": "Event sources can range from a supported AWS service or\ncustom applications that invoke your Lambda function. For examples, see\n[Sample Events Published by Event\nSources](https://docs.aws.amazon.com/lambda/latest/dg/eventsources.html)."
              },
              "name": "event",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "param": "context AWS Lambda uses this parameter to provide details of your\nLambda function's execution. For more information, see [The Context\nObject](https://docs.aws.amazon.com/lambda/latest/dg/nodejs-prog-model-context.html).",
                "comment": "AWS Lambda uses this parameter to provide details of your\nLambda function's execution. For more information, see [The Context\nObject](https://docs.aws.amazon.com/lambda/latest/dg/nodejs-prog-model-context.html)."
              },
              "name": "context",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "param": "callback The Node.js runtimes v6.10 and v8.10 support the optional\ncallback parameter. You can use it to explicitly return information back\nto the caller. Signature is `callback(err, response)`.",
                "comment": "The Node.js runtimes v6.10 and v8.10 support the optional\ncallback parameter. You can use it to explicitly return information back\nto the caller. Signature is `callback(err, response)`."
              },
              "name": "callback",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "The main Lambda entrypoint."
          },
          "name": "fn"
        }
      ],
      "fqn": "jsii$_aws_cdk_lambda$.IJavaScriptLambdaHandler",
      "module": "jsii$_aws_cdk_lambda$",
      "namespace": "jsii$_aws_cdk_lambda$",
      "name": "IJavaScriptLambdaHandler"
    },
    "jsii$_aws_cdk_lambda$.InlineJavaScriptLambdaRuntime": {
      "docs": {
        "comment": "The set of runtime that support inline javascript code."
      },
      "kind": "enum",
      "members": [
        {
          "name": "NodeJS"
        },
        {
          "name": "NodeJS43"
        },
        {
          "name": "NodeJS610"
        }
      ],
      "fqn": "jsii$_aws_cdk_lambda$.InlineJavaScriptLambdaRuntime",
      "module": "jsii$_aws_cdk_lambda$",
      "namespace": "jsii$_aws_cdk_lambda$",
      "name": "InlineJavaScriptLambdaRuntime"
    },
    "jsii$_aws_cdk_lambda$.InlineJavaScriptLambdaProps": {
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "The lambda handler as a javascript function.\n\nThis must be a javascript function object. The reason it is `any` is due\nto limitations of the jsii compiler."
          },
          "name": "handler",
          "type": {
            "fqn": "jsii$_aws_cdk_lambda$.IJavaScriptLambdaHandler"
          }
        },
        {
          "docs": {
            "comment": "A description of the function."
          },
          "name": "description",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "30 seconds.",
            "comment": "The function execution time (in seconds) after which Lambda terminates\nthe function. Because the execution time affects cost, set this value\nbased on the function's expected execution time."
          },
          "name": "timeout",
          "type": {
            "primitive": "number",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Key-value pairs that Lambda caches and makes available for your Lambda\nfunctions. Use environment variables to apply configuration changes, such\nas test and production environment configurations, without changing your\nLambda function source code."
          },
          "name": "environment",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "default": "NodeJS610",
            "comment": "The runtime environment for the Lambda function that you are uploading.\nFor valid values, see the Runtime property in the AWS Lambda Developer\nGuide."
          },
          "name": "runtime",
          "type": {
            "primitive": "number",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "A name for the function. If you don't specify a name, AWS CloudFormation\ngenerates a unique physical ID and uses that ID for the function's name.\nFor more information, see Name Type."
          },
          "name": "functionName",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "The default value is 128 MB",
            "comment": "The amount of memory, in MB, that is allocated to your Lambda function.\nLambda uses this value to proportionally allocate the amount of CPU\npower. For more information, see Resource Model in the AWS Lambda\nDeveloper Guide."
          },
          "name": "memorySize",
          "type": {
            "primitive": "number",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_lambda$.InlineJavaScriptLambdaProps",
      "module": "jsii$_aws_cdk_lambda$",
      "namespace": "jsii$_aws_cdk_lambda$",
      "name": "InlineJavaScriptLambdaProps",
      "datatype": true
    },
    "jsii$_aws_cdk_lambda$.InlineJavaScriptLambda": {
      "docs": {
        "comment": "A lambda function with inline node.js code.\n\nUsage:\n\n    new InlineJavaScriptLambda(this, 'MyFunc', {\n      handler: {\n        fn: (event, context, callback) => {\n          console.log('hello, world');\n          callback();\n        }\n      }\n    });\n\nThis will define a node.js 6.10 function with the provided function has\nthe handler code."
      },
      "kind": "class",
      "fqn": "jsii$_aws_cdk_lambda$.InlineJavaScriptLambda",
      "module": "jsii$_aws_cdk_lambda$",
      "namespace": "jsii$_aws_cdk_lambda$",
      "name": "InlineJavaScriptLambda",
      "base": {
        "fqn": "jsii$_aws_cdk_lambda$.Lambda"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_lambda$.InlineJavaScriptLambdaProps"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_lambda$.VersionProps": {
      "docs": {
        "comment": "Properties for a new Lambda version"
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "default": "No validation is performed",
            "comment": "SHA256 of the version of the Lambda source code\n\nSpecify to validate that you're deploying the right version."
          },
          "name": "codeSha256",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "Description of the Lambda",
            "comment": "Description of the version"
          },
          "name": "description",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Function to get the value of"
          },
          "name": "lambda",
          "type": {
            "fqn": "jsii$_aws_cdk_lambda$.LambdaRef"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_lambda$.VersionProps",
      "module": "jsii$_aws_cdk_lambda$",
      "namespace": "jsii$_aws_cdk_lambda$",
      "name": "VersionProps",
      "datatype": true
    },
    "jsii$_aws_cdk_lambda$.Version": {
      "docs": {
        "comment": "A single newly-deployed version of a Lambda function.\n\nThis object exists to--at deploy time--query the \"then-current\" version of\nthe Lambda function that it refers to. This Version object can then be\nused in `Alias` to refer to a particular deployment of a Lambda.\n\nThis means that for every new update you deploy to your Lambda (using the\nCDK and Aliases), you must always create a new Version object. In\nparticular, it must have a different name, so that a new resource is\ncreated.\n\nIf you want to ensure that you're associating the right version with\nthe right deployment, specify the `codeSha256` property while\ncreating the `Version.\n *"
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The most recently deployed version of this function."
          },
          "name": "functionVersion",
          "type": {
            "fqn": "jsii$_aws_cdk_lambda$.FunctionVersion"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Lambda object this version is associated with"
          },
          "name": "lambda",
          "type": {
            "fqn": "jsii$_aws_cdk_lambda$.LambdaRef"
          },
          "immutable": true
        }
      ],
      "fqn": "jsii$_aws_cdk_lambda$.Version",
      "module": "jsii$_aws_cdk_lambda$",
      "namespace": "jsii$_aws_cdk_lambda$",
      "name": "Version",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_lambda$.VersionProps"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_lambda$.FunctionVersion": {
      "docs": {
        "comment": "A single version of a Lambda function"
      },
      "kind": "class",
      "fqn": "jsii$_aws_cdk_lambda$.FunctionVersion",
      "module": "jsii$_aws_cdk_lambda$",
      "namespace": "jsii$_aws_cdk_lambda$",
      "name": "FunctionVersion",
      "base": {
        "fqn": "jsii$_aws_cdk_resources$.lambda.Version"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    }
  },
  "nametree": {
    "jsii$_aws_cdk_lambda$": {
      "AliasProps": {
        "_": "jsii$_aws_cdk_lambda$.AliasProps"
      },
      "Alias": {
        "_": "jsii$_aws_cdk_lambda$.Alias"
      },
      "VersionWeight": {
        "_": "jsii$_aws_cdk_lambda$.VersionWeight"
      },
      "LambdaRefProps": {
        "_": "jsii$_aws_cdk_lambda$.LambdaRefProps"
      },
      "LambdaRef": {
        "_": "jsii$_aws_cdk_lambda$.LambdaRef"
      },
      "FunctionName": {
        "_": "jsii$_aws_cdk_lambda$.FunctionName"
      },
      "LambdaProps": {
        "_": "jsii$_aws_cdk_lambda$.LambdaProps"
      },
      "Lambda": {
        "_": "jsii$_aws_cdk_lambda$.Lambda"
      },
      "LambdaPermission": {
        "_": "jsii$_aws_cdk_lambda$.LambdaPermission"
      },
      "LambdaRuntime": {
        "_": "jsii$_aws_cdk_lambda$.LambdaRuntime"
      },
      "LambdaCode": {
        "_": "jsii$_aws_cdk_lambda$.LambdaCode"
      },
      "LambdaS3Code": {
        "_": "jsii$_aws_cdk_lambda$.LambdaS3Code"
      },
      "LambdaInlineCode": {
        "_": "jsii$_aws_cdk_lambda$.LambdaInlineCode"
      },
      "IJavaScriptLambdaHandler": {
        "_": "jsii$_aws_cdk_lambda$.IJavaScriptLambdaHandler"
      },
      "InlineJavaScriptLambdaRuntime": {
        "_": "jsii$_aws_cdk_lambda$.InlineJavaScriptLambdaRuntime"
      },
      "InlineJavaScriptLambdaProps": {
        "_": "jsii$_aws_cdk_lambda$.InlineJavaScriptLambdaProps"
      },
      "InlineJavaScriptLambda": {
        "_": "jsii$_aws_cdk_lambda$.InlineJavaScriptLambda"
      },
      "VersionProps": {
        "_": "jsii$_aws_cdk_lambda$.VersionProps"
      },
      "Version": {
        "_": "jsii$_aws_cdk_lambda$.Version"
      },
      "FunctionVersion": {
        "_": "jsii$_aws_cdk_lambda$.FunctionVersion"
      }
    }
  },
  "typecount": 20,
  "externalTypes": {
    "jsii$_aws_cdk_core$.Construct": {
      "docs": {
        "comment": "Represents the building block of the construct graph.\nWhen a construct is created, it is always added as a child"
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "Returns the parent of this node or undefined if this is a root node."
          },
          "name": "parent",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.Construct",
            "optional": true
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The name of this construct"
          },
          "name": "name",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "All direct children of this construct."
          },
          "name": "children",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              },
              "kind": "array"
            }
          },
          "immutable": true
        },
        {
          "docs": {
            "returns": "/-separated path of this Construct.",
            "comment": "Returns the path of all constructs from root to this construct, in string form."
          },
          "name": "path",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "An array of metadata objects associated with this construct.\nThis can be used, for example, to implement support for deprecation notices, source mapping, etc."
          },
          "name": "metadata",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.MetadataEntry"
              },
              "kind": "array"
            }
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "docs": {
            "comment": "Returns a string representation of this construct."
          },
          "name": "toString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "parameters": [
            {
              "name": "depth",
              "type": {
                "primitive": "number",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Returns a string with a tree representation of this construct and it's children."
          },
          "name": "toTreeString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "a child by path or undefined if not found.",
            "comment": "Return a descendant by path, or undefined"
          },
          "name": "tryFindChild",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct",
            "optional": true
          }
        },
        {
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "Child with the given path.",
            "comment": "Return a descendant by path\n\nThrows an exception if the descendant is not found."
          },
          "name": "findChild",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "key The context key",
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "value The context value",
                "comment": "The context value"
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "This can be used to set contextual values.\nContext must be set before any children are added, since children may consult context info during construction.\nIf the key already exists, it will be overridden."
          },
          "name": "setContext"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "key The context key",
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "The context value or undefined",
            "comment": "Retrieves a value from tree context.\n\nContext is usually initialized at the root, but can be overridden at any point in the tree."
          },
          "name": "getContext",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Retrieve a value from tree-global context\n\nIt is an error if the context object is not available."
          },
          "name": "requireContext",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "type a string denoting the type of metadata",
                "comment": "a string denoting the type of metadata"
              },
              "name": "type",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "data the value of the metadata (can be a Token). If null/undefined, metadata will not be added.",
                "comment": "the value of the metadata (can be a Token). If null/undefined, metadata will not be added."
              },
              "name": "data",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "param": "from a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)",
                "comment": "a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)"
              },
              "name": "from",
              "type": {
                "primitive": "any",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Adds a metadata entry to this construct.\nEntries are arbitrary values and will also include a stack trace to allow tracing back to\nthe code location for when the entry was added. It can be used, for example, to include source\nmapping in CloudFormation templates to improve diagnostics."
          },
          "name": "addMetadata",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "message The warning message.",
                "comment": "The warning message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Adds a { warning: <message> } metadata entry to this construct."
          },
          "name": "addWarning",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "docs": {
            "returns": "An array of validation error messages, or an empty array if there the construct is valid.",
            "comment": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis."
          },
          "name": "validate",
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "returns": "A list of validation errors. If the list is empty, all constructs are valid.",
            "comment": "Invokes 'validate' on all child constructs and then on this construct (depth-first)."
          },
          "name": "validateTree",
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.ValidationError"
              },
              "kind": "array"
            }
          }
        },
        {
          "parameters": [
            {
              "name": "upTo",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Return the ancestors (including self) of this Construct up until and excluding the indicated component"
          },
          "name": "ancestors",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              },
              "kind": "array"
            }
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "props The props bag.",
                "comment": "The props bag."
              },
              "name": "props",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "param": "name The name of the required property.",
                "comment": "The name of the required property."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Throws if the `props` bag doesn't include the property `name`.\nIn the future we can add some type-checking here, maybe even auto-generate during compilation."
          },
          "name": "required",
          "protected": true,
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "child The child construct",
                "comment": "The child construct"
              },
              "name": "child",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "name": "childName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "The resolved path part name of the child",
            "comment": "Adds a child construct to this node."
          },
          "name": "addChild",
          "protected": true
        },
        {
          "docs": {
            "comment": "Locks this construct from allowing more children to be added. After this\ncall, no more children can be added to this construct or to any children."
          },
          "name": "lock",
          "protected": true
        },
        {
          "docs": {
            "comment": "Unlocks this costruct and allows mutations (adding children)."
          },
          "name": "unlock",
          "protected": true
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.Construct",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "Construct",
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_resources$.lambda.FunctionArn": {
      "kind": "class",
      "fqn": "jsii$_aws_cdk_resources$.lambda.FunctionArn",
      "module": "jsii$_aws_cdk_resources$",
      "namespace": "jsii$_aws_cdk_resources$.lambda",
      "name": "FunctionArn",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Arn"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_iam$.Role": {
      "docs": {
        "comment": "IAM Role\n\nDefines an IAM role. The role is created with an assume policy document associated with\nthe specified AWS service principal defined in `serviceAssumeRole`."
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The assume role policy document associated with this role."
          },
          "name": "assumeRolePolicy",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.PolicyDocument",
            "optional": true
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Returns the ARN of this role."
          },
          "name": "roleArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.iam.RoleArn"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Returns the name of the role."
          },
          "name": "roleName",
          "type": {
            "fqn": "jsii$_aws_cdk_iam$.RoleName"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Returns the ARN of this role."
          },
          "name": "principal",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.PolicyPrincipal"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Returns the role."
          },
          "name": "dependencyElements",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.IDependable"
              },
              "kind": "array"
            }
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              }
            }
          ],
          "docs": {
            "comment": "Adds a permission to the role's default policy document.\nIf there is no default policy attached to this role, it will be created."
          },
          "name": "addToPolicy"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "arn The ARN of the managed policy to attach.",
                "comment": "The ARN of the managed policy to attach."
              },
              "name": "arn",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "Attaches a managed policy to this role."
          },
          "name": "attachManagedPolicy"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "policy The policy to attach",
                "comment": "The policy to attach"
              },
              "name": "policy",
              "type": {
                "fqn": "jsii$_aws_cdk_iam$.Policy"
              }
            }
          ],
          "docs": {
            "comment": "Attaches a policy to this role."
          },
          "name": "attachInlinePolicy"
        }
      ],
      "interfaces": [
        {
          "fqn": "jsii$_aws_cdk_iam$.IIdentityResource"
        },
        {
          "fqn": "jsii$_aws_cdk_core$.IDependable"
        }
      ],
      "fqn": "jsii$_aws_cdk_iam$.Role",
      "module": "jsii$_aws_cdk_iam$",
      "namespace": "jsii$_aws_cdk_iam$",
      "name": "Role",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_iam$.RoleProps"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_events$.IEventRuleTarget": {
      "docs": {
        "comment": "An abstract target for EventRules."
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "Returns the rule target specification.\nNOTE: Do not use the various `inputXxx` options. They can be set in a call to `addTarget`."
          },
          "name": "eventRuleTarget",
          "type": {
            "fqn": "jsii$_aws_cdk_events$.EventRuleTarget"
          },
          "immutable": true
        }
      ],
      "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
      "module": "jsii$_aws_cdk_events$",
      "namespace": "jsii$_aws_cdk_events$",
      "name": "IEventRuleTarget",
      "datatype": true
    },
    "jsii$_aws_cdk_core$.PolicyStatement": {
      "docs": {
        "comment": "Represents a statement in an IAM policy document."
      },
      "subtypes": [
        "jsii$_aws_cdk_core$.PolicyStatement.Effect"
      ],
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "Indicates if this permission has a \"Principal\" section."
          },
          "name": "hasPrincipal",
          "type": {
            "primitive": "boolean"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Indicates if this permission as at least one resource associated with it."
          },
          "name": "hasResource",
          "type": {
            "primitive": "boolean"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Indicates if this permission has only a ``\"*\"`` resource associated with it."
          },
          "name": "isOnlyStarResource",
          "type": {
            "primitive": "boolean"
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "name": "action",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "name": "addAction",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "actions",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "name": "addActions",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          },
          "variadic": true
        },
        {
          "parameters": [
            {
              "name": "principal",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyPrincipal"
              }
            }
          ],
          "name": "addPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "arn",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "addAwsPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "accountId",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "addAwsAccountPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "service",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "addServicePrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "federated",
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "conditions",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "name": "addFederatedPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "name": "addAccountRootPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "resource",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "addResource",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Adds a ``\"*\"`` resource to this statement."
          },
          "name": "addAllResources",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "resources",
              "type": {
                "primitive": "any"
              },
              "variadic": true
            }
          ],
          "name": "addResources",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          },
          "variadic": true
        },
        {
          "parameters": [
            {
              "name": "sid",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "describe",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Sets the permission effect to deny access to resources."
          },
          "name": "allow",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Sets the permission effect to allow access to resources."
          },
          "name": "deny",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "Add a condition to the Policy"
          },
          "name": "addCondition",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "conditions",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "docs": {
            "comment": "Add multiple conditions to the Policy"
          },
          "name": "addConditions",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "deprecated": "For backwards compatibility. Use addCondition() instead.",
            "comment": "Add a condition to the Policy."
          },
          "name": "setCondition",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "accountId",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "limitToAccount",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "name": "resolve",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "name": "toJson",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.PolicyStatement",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "PolicyStatement",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "effect",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.PolicyStatement.Effect",
              "optional": true
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_events$.EventRuleTarget": {
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "A unique, user-defined identifier for the target. Acceptable values\ninclude alphanumeric characters, periods (.), hyphens (-), and\nunderscores (_)."
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The Amazon Resource Name (ARN) of the target."
          },
          "name": "arn",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.Arn"
          }
        },
        {
          "docs": {
            "comment": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management\n(IAM) role to use for this target when the rule is triggered. If one rule\ntriggers multiple targets, you can use a different IAM role for each\ntarget."
          },
          "name": "roleArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.iam.RoleArn",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The Amazon ECS task definition and task count to use, if the event target\nis an Amazon ECS task."
          },
          "name": "ecsParameters",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.events.RuleResource.EcsParametersProperty",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Settings that control shard assignment, when the target is a Kinesis\nstream. If you don't include this parameter, eventId is used as the\npartition key."
          },
          "name": "kinesisParameters",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.events.RuleResource.KinesisParametersProperty",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Parameters used when the rule invokes Amazon EC2 Systems Manager Run\nCommand."
          },
          "name": "runCommandParameters",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.events.RuleResource.RunCommandParametersProperty",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_events$.EventRuleTarget",
      "module": "jsii$_aws_cdk_events$",
      "namespace": "jsii$_aws_cdk_events$",
      "name": "EventRuleTarget",
      "datatype": true
    },
    "jsii$_aws_cdk_core$.Token": {
      "docs": {
        "comment": "Represents a lazy-evaluated value. Can be used to delay evaluation of a certain value\nin case, for example, that it requires some context or late-bound data."
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "returns": "The resolved value for this token."
          },
          "name": "resolve",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.Token",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "Token",
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_core$.PolicyPrincipal": {
      "docs": {
        "comment": "Represents an IAM principal."
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "When this Principal is used in an AssumeRole policy, the action to use."
          },
          "name": "assumeRoleAction",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "docs": {
            "comment": "Return the policy fragment that identifies this principal in a Policy."
          },
          "name": "policyFragment",
          "abstract": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PrincipalPolicyFragment"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.PolicyPrincipal",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "PolicyPrincipal",
      "abstract": true,
      "initializer": {
        "initializer": true
      }
    },
    "jsii$_aws_cdk_core$.Arn": {
      "docs": {
        "comment": "An Amazon Resource Name (ARN).\nhttp://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"
      },
      "kind": "class",
      "methods": [
        {
          "parameters": [
            {
              "name": "components",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.ArnComponents"
              }
            }
          ],
          "docs": {
            "comment": "Creates an ARN from components.\nIf any component is the empty string,\nan empty string will be inserted into the generated ARN\nat the location that component corresponds to."
          },
          "name": "fromComponents",
          "static": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Arn"
          }
        },
        {
          "parameters": [
            {
              "name": "arn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "an ArnComponents object which allows access to the various\ncomponents of the ARN.",
            "comment": "Given an ARN, parses it and returns components.\n\nThe ARN it will be parsed and validated. The separator (`sep`) will be\nset to '/' if the 6th component includes a '/', in which case, `resource`\nwill be set to the value before the '/' and `resourceName` will be the\nrest. In case there is no '/', `resource` will be set to the 6th\ncomponents and `resourceName` will be set to the rest of the string."
          },
          "name": "parse",
          "static": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.ArnComponents"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.Arn",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "Arn",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_resources$.lambda.FunctionResource.CodeProperty": {
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html"
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-s3bucket",
            "comment": "FunctionResource.CodeProperty.S3Bucket"
          },
          "name": "s3Bucket",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "jsii$_aws_cdk_core$.Token"
                }
              ]
            },
            "optional": true
          }
        },
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-s3key",
            "comment": "FunctionResource.CodeProperty.S3Key"
          },
          "name": "s3Key",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "jsii$_aws_cdk_core$.Token"
                }
              ]
            },
            "optional": true
          }
        },
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-s3objectversion",
            "comment": "FunctionResource.CodeProperty.S3ObjectVersion"
          },
          "name": "s3ObjectVersion",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "jsii$_aws_cdk_core$.Token"
                }
              ]
            },
            "optional": true
          }
        },
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-zipfile",
            "comment": "FunctionResource.CodeProperty.ZipFile"
          },
          "name": "zipFile",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "jsii$_aws_cdk_core$.Token"
                }
              ]
            },
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_resources$.lambda.FunctionResource.CodeProperty",
      "module": "jsii$_aws_cdk_resources$",
      "namespace": "jsii$_aws_cdk_resources$.lambda.FunctionResource",
      "name": "CodeProperty",
      "datatype": true,
      "parenttype": "jsii$_aws_cdk_resources$.lambda.FunctionResource"
    },
    "jsii$_aws_cdk_s3$.BucketRef": {
      "docs": {
        "comment": "Represents an S3 Bucket.\n\nBuckets can be either defined within this stack:\n\n     new Bucket(this, 'MyBucket', { props });\n\nOr imported from an existing bucket:\n\n     BucketRef.import(this, 'MyImportedBucket', { bucketArn: ... });\n\nYou can also export a bucket and import it into another stack:\n\n     const ref = myBucket.export();\n     BucketRef.import(this, 'MyImportedBucket', ref);"
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of the bucket."
          },
          "name": "bucketArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.s3.BucketArn"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "The name of the bucket."
          },
          "name": "bucketName",
          "type": {
            "fqn": "jsii$_aws_cdk_s3$.BucketName"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "Optional KMS encryption key associated with this bucket."
          },
          "name": "encryptionKey",
          "type": {
            "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyRef",
            "optional": true
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "The resource policy assoicated with this bucket.\n\nIf `autoCreatePolicy` is true, a `BucketPolicy` will be created upon the\nfirst call to addToResourcePolicy(s)."
          },
          "name": "policy",
          "type": {
            "fqn": "jsii$_aws_cdk_s3$.BucketPolicy",
            "optional": true
          },
          "protected": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "Indicates if a bucket resource policy should automatically created upon\nthe first call to `addToResourcePolicy`."
          },
          "name": "autoCreatePolicy",
          "type": {
            "primitive": "boolean"
          },
          "protected": true,
          "abstract": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "docs": {
                "param": "parent The parent creating construct (usually `this`).",
                "comment": "The parent creating construct (usually `this`)."
              },
              "name": "parent",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "docs": {
                "param": "name The construct's name.",
                "comment": "The construct's name."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "jsii$_aws_cdk_s3$.BucketRefProps"
              }
            }
          ],
          "docs": {
            "comment": "Creates a Bucket construct that represents an external bucket."
          },
          "name": "import",
          "static": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_s3$.BucketRef"
          }
        },
        {
          "docs": {
            "comment": "Exports this bucket from the stack."
          },
          "name": "export",
          "returns": {
            "fqn": "jsii$_aws_cdk_s3$.BucketRefProps"
          }
        },
        {
          "parameters": [
            {
              "name": "permission",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              }
            }
          ],
          "docs": {
            "comment": "Adds a statement to the resource policy for a principal (i.e.\naccount/role/service) to perform actions on this bucket and/or it's\ncontents. Use `bucketArn` and `arnForObjects(keys)` to obtain ARNs for\nthis bucket or objects."
          },
          "name": "addToResourcePolicy"
        },
        {
          "parameters": [
            {
              "name": "keyPattern",
              "type": {
                "primitive": "any"
              },
              "variadic": true
            }
          ],
          "docs": {
            "comment": "Returns an ARN that represents all objects within the bucket that match\nthe key pattern specified. To represent all keys, specify ``\"*\"``.\n\nIf you specify multiple components for keyPattern, they will be concatenated::\n\n     arnForObjects('home/', team, '/', user, '/*')"
          },
          "name": "arnForObjects",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Arn"
          },
          "variadic": true
        },
        {
          "parameters": [
            {
              "name": "identity",
              "type": {
                "fqn": "jsii$_aws_cdk_iam$.IIdentityResource",
                "optional": true
              }
            },
            {
              "name": "objectsKeyPattern",
              "type": {
                "primitive": "string",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Temporary API for granting read permissions for this bucket and it's\ncontents to an IAM principal (Role/Group/User).\n\nIf an encryption key is used, permission to ues the key to decrypt the\ncontents of the bucket will also be granted."
          },
          "name": "grantRead"
        },
        {
          "parameters": [
            {
              "name": "identity",
              "type": {
                "fqn": "jsii$_aws_cdk_iam$.IIdentityResource",
                "optional": true
              }
            },
            {
              "name": "objectsKeyPattern",
              "type": {
                "primitive": "string",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Grants read/write permissions for this bucket and it's contents to an IAM\nprincipal (Role/Group/User).\n\nIf an encryption key is used, permission to use the key for\nencrypt/decrypt will also be granted."
          },
          "name": "grantReadWrite"
        }
      ],
      "fqn": "jsii$_aws_cdk_s3$.BucketRef",
      "module": "jsii$_aws_cdk_s3$",
      "namespace": "jsii$_aws_cdk_s3$",
      "name": "BucketRef",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "abstract": true,
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_resources$.lambda.Version": {
      "kind": "class",
      "fqn": "jsii$_aws_cdk_resources$.lambda.Version",
      "module": "jsii$_aws_cdk_resources$",
      "namespace": "jsii$_aws_cdk_resources$.lambda",
      "name": "Version",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    }
  },
  "name": "jsii$_aws_cdk_lambda$",
  "package": "@aws-cdk/lambda",
  "version": "0.7.2-beta",
  "dependencies": {
    "jsii$_aws_cdk_core$": {
      "package": "@aws-cdk/core",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_events$": {
      "package": "@aws-cdk/events",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_iam$": {
      "package": "@aws-cdk/iam",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_resources$": {
      "package": "@aws-cdk/resources",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_s3$": {
      "package": "@aws-cdk/s3",
      "version": "0.7.2-beta"
    }
  },
  "names": {
    "java": "com.amazonaws.cdk.lambda",
    "dotnet": "AWS.Cdk.Lambda",
    "js": "@aws-cdk/lambda"
  },
  "nativenames": {
    "jsii$_aws_cdk_core$": {
      "java": "com.amazonaws.cdk",
      "dotnet": "AWS.Cdk",
      "js": "@aws-cdk/core"
    },
    "jsii$_aws_cdk_events$": {
      "java": "com.amazonaws.cdk.events",
      "dotnet": "AWS.Cdk.Events",
      "js": "@aws-cdk/events"
    },
    "jsii$_aws_cdk_iam$": {
      "java": "com.amazonaws.cdk.iam",
      "dotnet": "AWS.Cdk.Iam",
      "js": "@aws-cdk/iam"
    },
    "jsii$_aws_cdk_resources$": {
      "java": "com.amazonaws.cdk.resources",
      "dotnet": "AWS.Cdk.Resources",
      "js": "@aws-cdk/resources"
    },
    "jsii$_aws_cdk_s3$": {
      "java": "com.amazonaws.cdk.s3",
      "dotnet": "AWS.Cdk.S3",
      "js": "@aws-cdk/s3"
    },
    "jsii$_aws_cdk_lambda$": {
      "java": "com.amazonaws.cdk.lambda",
      "dotnet": "AWS.Cdk.Lambda",
      "js": "@aws-cdk/lambda"
    }
  },
  "readme": {
    "markdown": "## AWS Lambda Construct Library\n\n```ts\nconst fn = new Lambda(this, 'MyFunction', {\n    runtime: LambdaRuntime.DOTNETCORE_2,\n    code: new LambdaS3Code(bucket, 'myKey'),\n    handler: 'index.handler'\n});\n\nfn.role.addToPolicy(new PolicyStatement()....);\n```\n\n### Inline node.js Lambda Functions\n\nThe subclass called `LambdaInlineNodeJS` allows embedding the function's handler\nas a JavaScript function within the construct code.\n\nThe following example defines a node.js Lambda and an S3 bucket. When invoked,\na file named \"myfile.txt\" will be uploaded to the bucket with the string \"hello, world\".\n\nA few things to note:\n\n - The function's execution role is granted read/write permissions on the\n   bucket.\n - The require statement for `aws-sdk` is invoked within the function's body. Due to\n   node.js' module caching, this is equivalent in performance to requiring\n   outside.\n - The bucket name is passed to the function via the environment variable\n   `BUCKET_NAME`.\n\n```ts\nconst bucket = new Bucket(this, 'MyBucket');\n\nconst lambda = new InlineJavaScriptLambda(this, 'MyLambda', {\n    environment: {\n        BUCKET_NAME: bucket.bucketName\n    },\n    handler: {\n        fn: (_event: any, _context: any, callback: any) => {\n            const S3 = require('aws-sdk').S3;\n            const s3 = new S3();\n            const bucketName = process.env.BUCKET_NAME;\n            s3.upload({ Bucket: bucketName, Key: 'myfile.txt', Body: 'Hello, world' }, (err, data) => {\n                if (err) {\n                    return callback(err);\n                }\n                console.log(data);\n                return callback();\n            });\n        }\n    }\n});\n\nbucket.grantReadWrite(lambda.role);\n```\n"
  },
  "code": "var jsii$_aws_cdk_lambda$ =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 7);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_resources$;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(2);\nconst resources_1 = __webpack_require__(0);\nclass LambdaRef extends core_1.Construct {\n    constructor() {\n        super(...arguments);\n        /**\n         * Indicates if the resource policy that allows CloudWatch events to publish\n         * notifications to this topic have been added.\n         */\n        this.eventRuleTargetPolicyAdded = false;\n    }\n    /**\n     * Creates a Lambda function object which represents a function not defined\n     * within this stack.\n     *\n     *      Lambda.import(this, 'MyImportedFunction', { lambdaArn: new LambdaArn('arn:aws:...') });\n     *\n     * @param parent The parent construct\n     * @param name The name of the lambda construct\n     * @param ref A reference to a Lambda function. Can be created manually (see\n     * example above) or obtained through a call to `lambda.export()`.\n     */\n    static import(parent, name, ref) {\n        return new LambdaRefImport(parent, name, ref);\n    }\n    /**\n     * Adds a permission to the Lambda resource policy.\n     * @param name A name for the permission construct\n     */\n    addPermission(name, permission) {\n        if (!this.canCreatePermissions) {\n            // FIXME: Report metadata\n            return;\n        }\n        const principal = this.parsePermissionPrincipal(permission.principal);\n        const action = permission.action || 'lambda:InvokeFunction';\n        new resources_1.lambda.PermissionResource(this, name, {\n            action,\n            principal,\n            functionName: this.functionName,\n            eventSourceToken: permission.eventSourceToken,\n            sourceAccount: permission.sourceAccount,\n            sourceArn: permission.sourceArn,\n        });\n    }\n    addToRolePolicy(statement) {\n        if (!this.role) {\n            return;\n        }\n        this.role.addToPolicy(statement);\n    }\n    parsePermissionPrincipal(principal) {\n        if (!principal) {\n            return undefined;\n        }\n        // use duck-typing, not instance of\n        if ('accountId' in principal) {\n            return principal.accountId;\n        }\n        if (`service` in principal) {\n            return principal.service;\n        }\n        throw new Error(`Invalid principal type for Lambda permission statement: ${JSON.stringify(core_1.resolve(principal))}. ` +\n            'Supported: AccountPrincipal, ServicePrincipal');\n    }\n    /**\n     * Returns a RuleTarget that can be used to trigger this Lambda as a\n     * result from a CloudWatch event.\n     */\n    get eventRuleTarget() {\n        if (!this.eventRuleTargetPolicyAdded) {\n            this.addPermission('InvokedByCloudWatch', {\n                action: 'lambda:InvokeFunction',\n                principal: new core_1.ServicePrincipal('events.amazonaws.com')\n            });\n            this.eventRuleTargetPolicyAdded = true;\n        }\n        return {\n            id: this.name,\n            arn: this.functionArn,\n        };\n    }\n}\nexports.LambdaRef = LambdaRef;\nclass LambdaRefImport extends LambdaRef {\n    constructor(parent, name, props) {\n        super(parent, name);\n        this.canCreatePermissions = false;\n        this.functionArn = props.functionArn;\n        this.functionName = this.extractNameFromArn(props.functionArn);\n        this.role = props.role;\n    }\n    /**\n     * Given an opaque (token) ARN, returns a CloudFormation expression that extracts the function\n     * name from the ARN.\n     *\n     * Function ARNs look like this:\n     *\n     *     arn:aws:lambda:region:account-id:function:function-name\n     *\n     * ..which means that in order to extract the `function-name` component from the ARN, we can\n     * split the ARN using \":\" and select the component in index 6.\n     *\n     * @returns `FnSelect(6, FnSplit(':', arn))`\n     */\n    extractNameFromArn(arn) {\n        return new core_1.FnSelect(6, new core_1.FnSplit(':', arn));\n    }\n}\nclass FunctionName extends core_1.Token {\n}\nexports.FunctionName = FunctionName;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_core$;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(2);\nconst iam_1 = __webpack_require__(9);\nconst resources_1 = __webpack_require__(0);\nconst lambda_ref_1 = __webpack_require__(1);\nconst version_1 = __webpack_require__(4);\n/**\n * Deploys a file from from inside the construct library as a function.\n *\n * The supplied file is subject to the 4096 bytes limit of being embedded in a\n * CloudFormation template.\n *\n * The construct includes an associated role with the lambda.\n *\n * This construct does not yet reproduce all features from the underlying resource\n * library.\n */\nclass Lambda extends lambda_ref_1.LambdaRef {\n    constructor(parent, name, props) {\n        super(parent, name);\n        this.canCreatePermissions = true;\n        this.environment = props.environment || {};\n        this.role = new iam_1.Role(this, 'ServiceRole', {\n            assumedBy: new core_1.ServicePrincipal('lambda.amazonaws.com'),\n            // the arn is in the form of - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\n            managedPolicyArns: [core_1.Arn.fromComponents({\n                    service: \"iam\",\n                    region: \"\",\n                    account: \"aws\",\n                    resource: \"policy\",\n                    resourceName: \"service-role/AWSLambdaBasicExecutionRole\",\n                })],\n        });\n        for (const statement of (props.initialPolicy || [])) {\n            this.role.addToPolicy(statement);\n        }\n        const resource = new resources_1.lambda.FunctionResource(this, 'Resource', {\n            functionName: props.functionName,\n            description: props.description,\n            code: props.code.toJSON(props.runtime),\n            handler: props.handler,\n            timeout: props.timeout,\n            runtime: props.runtime,\n            role: this.role.roleArn,\n            environment: new core_1.Token(() => this.renderEnvironment()),\n            memorySize: props.memorySize,\n        });\n        resource.addDependency(this.role);\n        this.functionName = resource.ref;\n        this.functionArn = resource.functionArn;\n    }\n    /**\n     * Adds an environment variable to this Lambda function.\n     * If this is a ref to a Lambda function, this operation results in a no-op.\n     * @param key The environment variable key.\n     * @param value The environment variable's value.\n     */\n    addEnvironment(key, value) {\n        if (!this.environment) {\n            // TODO: add metadata\n            return;\n        }\n        this.environment[key] = value;\n    }\n    /**\n     * Add a new version for this Lambda\n     *\n     * If you want to deploy through CloudFormation and use aliases, you need to\n     * add a new version (with a new name) to your Lambda every time you want\n     * to deploy an update. An alias can then refer to the newly created Version.\n     *\n     * All versions should have distinct names, and you should not delete versions\n     * as long as your Alias needs to refer to them.\n     *\n     * @param name A unique name for this version\n     * @param codeSha256 The SHA-256 hash of the most recently deployed Lambda source code, or\n     *    omit to skip validation.\n     * @param description A description for this version.\n     * @returns A new Version object.\n     */\n    addVersion(name, codeSha256, description) {\n        return new version_1.Version(this, 'Version' + name, {\n            lambda: this,\n            codeSha256,\n            description,\n        });\n    }\n    renderEnvironment() {\n        if (!this.environment || Object.keys(this.environment).length === 0) {\n            return undefined;\n        }\n        return {\n            variables: this.environment\n        };\n    }\n}\nexports.Lambda = Lambda;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(2);\nconst resources_1 = __webpack_require__(0);\n/**\n * A single newly-deployed version of a Lambda function.\n *\n * This object exists to--at deploy time--query the \"then-current\" version of\n * the Lambda function that it refers to. This Version object can then be\n * used in `Alias` to refer to a particular deployment of a Lambda.\n *\n * This means that for every new update you deploy to your Lambda (using the\n * CDK and Aliases), you must always create a new Version object. In\n * particular, it must have a different name, so that a new resource is\n * created.\n *\n * If you want to ensure that you're associating the right version with\n * the right deployment, specify the `codeSha256` property while\n * creating the `Version.\n */\nclass Version extends core_1.Construct {\n    constructor(parent, name, props) {\n        super(parent, name);\n        const version = new resources_1.lambda.VersionResource(this, 'Resource', {\n            codeSha256: props.codeSha256,\n            description: props.description,\n            functionName: props.lambda.functionName\n        });\n        this.functionVersion = version.version;\n        this.lambda = props.lambda;\n    }\n}\nexports.Version = Version;\n/**\n * A single version of a Lambda function\n */\nclass FunctionVersion extends resources_1.lambda.Version {\n}\nexports.FunctionVersion = FunctionVersion;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Lambda function runtime environment.\n */\nvar LambdaRuntime;\n(function (LambdaRuntime) {\n    LambdaRuntime[\"NodeJS\"] = \"nodejs\";\n    LambdaRuntime[\"NodeJS43\"] = \"nodejs4.3\";\n    LambdaRuntime[\"NodeJS43Edge\"] = \"nodejs4.3-edge\";\n    LambdaRuntime[\"NodeJS610\"] = \"nodejs6.10\";\n    LambdaRuntime[\"Java8\"] = \"java8\";\n    LambdaRuntime[\"Python27\"] = \"python2.7\";\n    LambdaRuntime[\"Python36\"] = \"python3.6\";\n    LambdaRuntime[\"DotNetCore1\"] = \"dotnetcore1.0\";\n    LambdaRuntime[\"DotNetCore2\"] = \"dotnetcore2.0\";\n    LambdaRuntime[\"Go1x\"] = \"go1.x\";\n})(LambdaRuntime = exports.LambdaRuntime || (exports.LambdaRuntime = {}));\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst runtime_1 = __webpack_require__(5);\nclass LambdaCode {\n}\nexports.LambdaCode = LambdaCode;\nclass LambdaS3Code extends LambdaCode {\n    constructor(bucket, key, objectVersion) {\n        super();\n        this.key = key;\n        this.objectVersion = objectVersion;\n        if (!bucket.bucketName) {\n            throw new Error('bucketName is undefined for the provided bucket');\n        }\n        this.bucketName = bucket.bucketName;\n    }\n    toJSON(_runtime) {\n        return {\n            s3Bucket: this.bucketName,\n            s3Key: this.key,\n            s3ObjectVersion: this.objectVersion\n        };\n    }\n}\nexports.LambdaS3Code = LambdaS3Code;\nclass LambdaInlineCode extends LambdaCode {\n    constructor(code) {\n        super();\n        this.code = code;\n        if (code.length > 4096) {\n            throw new Error(\"Lambda source is too large, must be <= 4096 but is \" + code.length);\n        }\n    }\n    toJSON(runtime) {\n        const allowed = [\n            runtime_1.LambdaRuntime.NodeJS,\n            runtime_1.LambdaRuntime.NodeJS43,\n            runtime_1.LambdaRuntime.NodeJS610,\n            runtime_1.LambdaRuntime.Python27,\n            runtime_1.LambdaRuntime.Python36\n        ];\n        if (!allowed.find(a => a === runtime)) {\n            throw new Error(`Inline source only allowed for: ${allowed.join(', ')}`);\n        }\n        return {\n            zipFile: this.code\n        };\n    }\n}\nexports.LambdaInlineCode = LambdaInlineCode;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(8));\n__export(__webpack_require__(1));\n__export(__webpack_require__(3));\n__export(__webpack_require__(5));\n__export(__webpack_require__(6));\n__export(__webpack_require__(10));\n__export(__webpack_require__(4));\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst resources_1 = __webpack_require__(0);\nconst lambda_ref_1 = __webpack_require__(1);\n/**\n * A new alias to a particular version of a Lambda function.\n */\nclass Alias extends lambda_ref_1.LambdaRef {\n    constructor(parent, name, props) {\n        super(parent, name);\n        this.canCreatePermissions = true; // Not used anyway\n        this.underlyingLambda = props.version.lambda;\n        const alias = new resources_1.lambda.AliasResource(this, 'Resource', {\n            aliasName: props.aliasName,\n            description: props.description,\n            functionName: this.underlyingLambda.functionName,\n            functionVersion: props.version.functionVersion,\n            routingConfig: this.determineRoutingConfig(props)\n        });\n        this.functionName = alias.ref;\n        this.functionArn = alias.ref;\n    }\n    addPermission(name, permission) {\n        // Forward addPermission() to the underlying Lambda object\n        this.underlyingLambda.addPermission(name, permission);\n    }\n    /**\n     * Calculate the routingConfig parameter from the input props\n     */\n    determineRoutingConfig(props) {\n        if (!props.additionalVersions || props.additionalVersions.length === 0) {\n            return undefined;\n        }\n        this.validateAdditionalWeights(props.additionalVersions);\n        return {\n            additionalVersionWeights: props.additionalVersions.map(vw => {\n                return {\n                    functionVersion: vw.version.functionVersion,\n                    functionWeight: vw.weight\n                };\n            })\n        };\n    }\n    /**\n     * Validate that the additional version weights make sense\n     *\n     * We validate that they are positive and add up to something <= 1.\n     */\n    validateAdditionalWeights(weights) {\n        const total = weights.map(w => {\n            if (w.weight < 0 || w.weight > 1) {\n                throw new Error(`Additional version weight must be between 0 and 1, got: ${w.weight}`);\n            }\n            return w.weight;\n        }).reduce((a, x) => a + x);\n        if (total > 1) {\n            throw new Error(`Sum of additional version weights must not exceed 1, got: ${total}`);\n        }\n    }\n}\nexports.Alias = Alias;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_iam$;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = __webpack_require__(6);\nconst lambda_1 = __webpack_require__(3);\n/**\n * The set of runtime that support inline javascript code.\n */\nvar InlineJavaScriptLambdaRuntime;\n(function (InlineJavaScriptLambdaRuntime) {\n    InlineJavaScriptLambdaRuntime[\"NodeJS\"] = \"nodejs\";\n    InlineJavaScriptLambdaRuntime[\"NodeJS43\"] = \"nodejs4.3\";\n    InlineJavaScriptLambdaRuntime[\"NodeJS610\"] = \"nodejs6.10\";\n})(InlineJavaScriptLambdaRuntime = exports.InlineJavaScriptLambdaRuntime || (exports.InlineJavaScriptLambdaRuntime = {}));\n/**\n * A lambda function with inline node.js code.\n *\n * Usage:\n *\n *    new InlineJavaScriptLambda(this, 'MyFunc', {\n *      handler: {\n *        fn: (event, context, callback) => {\n *          console.log('hello, world');\n *          callback();\n *        }\n *      }\n *    });\n *\n * This will define a node.js 6.10 function with the provided function has\n * the handler code.\n */\nclass InlineJavaScriptLambda extends lambda_1.Lambda {\n    constructor(parent, name, props) {\n        const code = new code_1.LambdaInlineCode(renderCode(props.handler));\n        const runtime = (props.runtime || InlineJavaScriptLambdaRuntime.NodeJS610);\n        const handler = 'index.handler';\n        const timeout = props.timeout || 30;\n        super(parent, name, {\n            code,\n            runtime,\n            handler,\n            timeout,\n            description: props.description,\n            memorySize: props.memorySize,\n            functionName: props.functionName,\n            environment: props.environment,\n        });\n    }\n}\nexports.InlineJavaScriptLambda = InlineJavaScriptLambda;\nfunction renderCode(handler) {\n    return `exports.handler = ${handler.fn.toString()}`;\n}\n\n\n/***/ })\n/******/ ]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"
}
