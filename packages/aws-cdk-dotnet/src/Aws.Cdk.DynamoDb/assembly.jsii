{
  "schema": "jsii/1.0",
  "types": {
    "jsii$_aws_cdk_dynamodb$.TableProps": {
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "default": "5",
            "comment": "The read capacity for the table. Careful if you add Global Secondary Indexes, as\nthose will share the table's provisioned throughput."
          },
          "name": "readCapacity",
          "type": {
            "primitive": "number",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "5",
            "comment": "The write capacity for the table. Careful if you add Global Secondary Indexes, as\nthose will share the table's provisioned throughput."
          },
          "name": "writeCapacity",
          "type": {
            "primitive": "number",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "<generated>",
            "comment": "Enforces a particular physical table name."
          },
          "name": "tableName",
          "type": {
            "primitive": "string",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_dynamodb$.TableProps",
      "module": "jsii$_aws_cdk_dynamodb$",
      "namespace": "jsii$_aws_cdk_dynamodb$",
      "name": "TableProps",
      "datatype": true
    },
    "jsii$_aws_cdk_dynamodb$.Table": {
      "docs": {
        "comment": "Provides a DynamoDB table."
      },
      "kind": "class",
      "properties": [
        {
          "name": "tableArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.dynamodb.TableArn"
          },
          "immutable": true
        },
        {
          "name": "tableName",
          "type": {
            "fqn": "jsii$_aws_cdk_dynamodb$.TableName"
          },
          "immutable": true
        },
        {
          "name": "tableStreamArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.dynamodb.TableStreamArn"
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "type",
              "type": {
                "fqn": "jsii$_aws_cdk_dynamodb$.KeyAttributeType"
              }
            }
          ],
          "name": "addPartitionKey",
          "returns": {
            "fqn": "jsii$_aws_cdk_dynamodb$.Table"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "type",
              "type": {
                "fqn": "jsii$_aws_cdk_dynamodb$.KeyAttributeType"
              }
            }
          ],
          "name": "addSortKey",
          "returns": {
            "fqn": "jsii$_aws_cdk_dynamodb$.Table"
          }
        },
        {
          "docs": {
            "comment": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis."
          },
          "name": "validate",
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_dynamodb$.Table",
      "module": "jsii$_aws_cdk_dynamodb$",
      "namespace": "jsii$_aws_cdk_dynamodb$",
      "name": "Table",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_dynamodb$.TableProps",
              "optional": true
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_dynamodb$.TableName": {
      "kind": "class",
      "fqn": "jsii$_aws_cdk_dynamodb$.TableName",
      "module": "jsii$_aws_cdk_dynamodb$",
      "namespace": "jsii$_aws_cdk_dynamodb$",
      "name": "TableName",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_dynamodb$.KeyAttributeType": {
      "kind": "enum",
      "members": [
        {
          "name": "Binary"
        },
        {
          "name": "Number"
        },
        {
          "name": "String"
        }
      ],
      "fqn": "jsii$_aws_cdk_dynamodb$.KeyAttributeType",
      "module": "jsii$_aws_cdk_dynamodb$",
      "namespace": "jsii$_aws_cdk_dynamodb$",
      "name": "KeyAttributeType"
    }
  },
  "nametree": {
    "jsii$_aws_cdk_dynamodb$": {
      "TableProps": {
        "_": "jsii$_aws_cdk_dynamodb$.TableProps"
      },
      "Table": {
        "_": "jsii$_aws_cdk_dynamodb$.Table"
      },
      "TableName": {
        "_": "jsii$_aws_cdk_dynamodb$.TableName"
      },
      "KeyAttributeType": {
        "_": "jsii$_aws_cdk_dynamodb$.KeyAttributeType"
      }
    }
  },
  "typecount": 4,
  "externalTypes": {
    "jsii$_aws_cdk_core$.Construct": {
      "docs": {
        "comment": "Represents the building block of the construct graph.\nWhen a construct is created, it is always added as a child"
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "Returns the parent of this node or undefined if this is a root node."
          },
          "name": "parent",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.Construct",
            "optional": true
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The name of this construct"
          },
          "name": "name",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "All direct children of this construct."
          },
          "name": "children",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              },
              "kind": "array"
            }
          },
          "immutable": true
        },
        {
          "docs": {
            "returns": "/-separated path of this Construct.",
            "comment": "Returns the path of all constructs from root to this construct, in string form."
          },
          "name": "path",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "An array of metadata objects associated with this construct.\nThis can be used, for example, to implement support for deprecation notices, source mapping, etc."
          },
          "name": "metadata",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.MetadataEntry"
              },
              "kind": "array"
            }
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "docs": {
            "comment": "Returns a string representation of this construct."
          },
          "name": "toString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "parameters": [
            {
              "name": "depth",
              "type": {
                "primitive": "number",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Returns a string with a tree representation of this construct and it's children."
          },
          "name": "toTreeString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "a child by path or undefined if not found.",
            "comment": "Return a descendant by path, or undefined"
          },
          "name": "tryFindChild",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct",
            "optional": true
          }
        },
        {
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "Child with the given path.",
            "comment": "Return a descendant by path\n\nThrows an exception if the descendant is not found."
          },
          "name": "findChild",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "key The context key",
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "value The context value",
                "comment": "The context value"
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "This can be used to set contextual values.\nContext must be set before any children are added, since children may consult context info during construction.\nIf the key already exists, it will be overridden."
          },
          "name": "setContext"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "key The context key",
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "The context value or undefined",
            "comment": "Retrieves a value from tree context.\n\nContext is usually initialized at the root, but can be overridden at any point in the tree."
          },
          "name": "getContext",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Retrieve a value from tree-global context\n\nIt is an error if the context object is not available."
          },
          "name": "requireContext",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "type a string denoting the type of metadata",
                "comment": "a string denoting the type of metadata"
              },
              "name": "type",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "data the value of the metadata (can be a Token). If null/undefined, metadata will not be added.",
                "comment": "the value of the metadata (can be a Token). If null/undefined, metadata will not be added."
              },
              "name": "data",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "param": "from a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)",
                "comment": "a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)"
              },
              "name": "from",
              "type": {
                "primitive": "any",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Adds a metadata entry to this construct.\nEntries are arbitrary values and will also include a stack trace to allow tracing back to\nthe code location for when the entry was added. It can be used, for example, to include source\nmapping in CloudFormation templates to improve diagnostics."
          },
          "name": "addMetadata",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "message The warning message.",
                "comment": "The warning message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Adds a { warning: <message> } metadata entry to this construct."
          },
          "name": "addWarning",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "docs": {
            "returns": "An array of validation error messages, or an empty array if there the construct is valid.",
            "comment": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis."
          },
          "name": "validate",
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "returns": "A list of validation errors. If the list is empty, all constructs are valid.",
            "comment": "Invokes 'validate' on all child constructs and then on this construct (depth-first)."
          },
          "name": "validateTree",
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.ValidationError"
              },
              "kind": "array"
            }
          }
        },
        {
          "parameters": [
            {
              "name": "upTo",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Return the ancestors (including self) of this Construct up until and excluding the indicated component"
          },
          "name": "ancestors",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              },
              "kind": "array"
            }
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "props The props bag.",
                "comment": "The props bag."
              },
              "name": "props",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "param": "name The name of the required property.",
                "comment": "The name of the required property."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Throws if the `props` bag doesn't include the property `name`.\nIn the future we can add some type-checking here, maybe even auto-generate during compilation."
          },
          "name": "required",
          "protected": true,
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "child The child construct",
                "comment": "The child construct"
              },
              "name": "child",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "name": "childName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "The resolved path part name of the child",
            "comment": "Adds a child construct to this node."
          },
          "name": "addChild",
          "protected": true
        },
        {
          "docs": {
            "comment": "Locks this construct from allowing more children to be added. After this\ncall, no more children can be added to this construct or to any children."
          },
          "name": "lock",
          "protected": true
        },
        {
          "docs": {
            "comment": "Unlocks this costruct and allows mutations (adding children)."
          },
          "name": "unlock",
          "protected": true
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.Construct",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "Construct",
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_resources$.dynamodb.TableArn": {
      "kind": "class",
      "fqn": "jsii$_aws_cdk_resources$.dynamodb.TableArn",
      "module": "jsii$_aws_cdk_resources$",
      "namespace": "jsii$_aws_cdk_resources$.dynamodb",
      "name": "TableArn",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Arn"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_resources$.dynamodb.TableStreamArn": {
      "kind": "class",
      "fqn": "jsii$_aws_cdk_resources$.dynamodb.TableStreamArn",
      "module": "jsii$_aws_cdk_resources$",
      "namespace": "jsii$_aws_cdk_resources$.dynamodb",
      "name": "TableStreamArn",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Arn"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_core$.Token": {
      "docs": {
        "comment": "Represents a lazy-evaluated value. Can be used to delay evaluation of a certain value\nin case, for example, that it requires some context or late-bound data."
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "returns": "The resolved value for this token."
          },
          "name": "resolve",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.Token",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "Token",
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    }
  },
  "name": "jsii$_aws_cdk_dynamodb$",
  "package": "@aws-cdk/dynamodb",
  "version": "0.7.2-beta",
  "dependencies": {
    "jsii$_aws_cdk_core$": {
      "package": "@aws-cdk/core",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_iam$": {
      "package": "@aws-cdk/iam",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_resources$": {
      "package": "@aws-cdk/resources",
      "version": "0.7.2-beta"
    }
  },
  "names": {
    "java": "com.amazonaws.cdk.dynamodb",
    "dotnet": "Aws.Cdk.DynamoDb",
    "js": "@aws-cdk/dynamodb"
  },
  "nativenames": {
    "jsii$_aws_cdk_core$": {
      "java": "com.amazonaws.cdk",
      "dotnet": "Aws.Cdk",
      "js": "@aws-cdk/core"
    },
    "jsii$_aws_cdk_iam$": {
      "java": "com.amazonaws.cdk.iam",
      "dotnet": "Aws.Cdk.Iam",
      "js": "@aws-cdk/iam"
    },
    "jsii$_aws_cdk_resources$": {
      "java": "com.amazonaws.cdk.resources",
      "dotnet": "Aws.Cdk.Resources",
      "js": "@aws-cdk/resources"
    },
    "jsii$_aws_cdk_dynamodb$": {
      "java": "com.amazonaws.cdk.dynamodb",
      "dotnet": "Aws.Cdk.DynamoDb",
      "js": "@aws-cdk/dynamodb"
    }
  },
  "readme": {
    "markdown": "## AWS DynamoDB Construct Library\nAdd a DynamoDB table to you stack like so:\n```ts\nimport { Table } from '@aws-cdk/dynamodb';\n\nconst defaultTable = new Table(stack, 'TableName');\n\nconst customTable = new Table(stack, 'CustomTable', {\n    readCapacity: readUnits, // Default is 5\n    writeCapacity: writeUnits, // Default is 5\n    tableName: 'MyTableName' // Default is CloudFormation-generated, which is the preferred approach\n})\n```\n"
  },
  "code": "var jsii$_aws_cdk_dynamodb$ =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(1);\nconst resources_1 = __webpack_require__(2);\nconst HASH_KEY_TYPE = 'HASH';\nconst RANGE_KEY_TYPE = 'RANGE';\n/**\n * Provides a DynamoDB table.\n */\nclass Table extends core_1.Construct {\n    constructor(parent, name, props = {}) {\n        super(parent, name);\n        this.keySchema = new Array();\n        this.attributeDefinitions = new Array();\n        const readCapacityUnits = props.readCapacity || 5;\n        const writeCapacityUnits = props.writeCapacity || 5;\n        this.table = new resources_1.dynamodb.TableResource(this, 'Resource', {\n            tableName: props.tableName,\n            keySchema: this.keySchema,\n            attributeDefinitions: this.attributeDefinitions,\n            provisionedThroughput: { readCapacityUnits, writeCapacityUnits }\n        });\n        if (props.tableName) {\n            this.addMetadata('aws:cdk:hasPhysicalName', props.tableName);\n        }\n    }\n    get tableArn() {\n        return this.table.tableArn;\n    }\n    get tableName() {\n        return this.table.ref;\n    }\n    get tableStreamArn() {\n        return this.table.tableStreamArn;\n    }\n    addPartitionKey(name, type) {\n        this.addKey(name, type, HASH_KEY_TYPE);\n        return this;\n    }\n    addSortKey(name, type) {\n        this.addKey(name, type, RANGE_KEY_TYPE);\n        return this;\n    }\n    validate() {\n        const errors = new Array();\n        if (!this.findKey(HASH_KEY_TYPE)) {\n            errors.push('a partition key must be specified');\n        }\n        return errors;\n    }\n    findKey(keyType) {\n        return this.keySchema.find(prop => prop.keyType === keyType);\n    }\n    addKey(name, type, keyType) {\n        const existingProp = this.findKey(keyType);\n        if (existingProp) {\n            throw new Error(`Unable to set ${name} as a ${keyType} key, because ${existingProp.attributeName} is a ${keyType} key`);\n        }\n        this.registerAttribute(name, type);\n        this.keySchema.push({\n            attributeName: name,\n            keyType\n        });\n        return this;\n    }\n    registerAttribute(name, type) {\n        const existingDef = this.attributeDefinitions.find(def => def.attributeName === name);\n        if (existingDef && existingDef.attributeType !== type) {\n            throw new Error(`Unable to specify ${name} as ${type} because it was already defined as ${existingDef.attributeType}`);\n        }\n        if (!existingDef) {\n            this.attributeDefinitions.push({\n                attributeName: name,\n                attributeType: type\n            });\n        }\n    }\n}\nexports.Table = Table;\nclass TableName extends core_1.Token {\n}\nexports.TableName = TableName;\nvar KeyAttributeType;\n(function (KeyAttributeType) {\n    KeyAttributeType[\"Binary\"] = \"B\";\n    KeyAttributeType[\"Number\"] = \"N\";\n    KeyAttributeType[\"String\"] = \"S\";\n})(KeyAttributeType = exports.KeyAttributeType || (exports.KeyAttributeType = {}));\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_core$;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_resources$;\n\n/***/ })\n/******/ ]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"
}
