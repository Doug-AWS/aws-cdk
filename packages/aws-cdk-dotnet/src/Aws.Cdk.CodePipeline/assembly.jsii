{
  "schema": "jsii/1.0",
  "types": {
    "jsii$_aws_cdk_codepipeline$.ActionCategory": {
      "kind": "enum",
      "members": [
        {
          "name": "Source"
        },
        {
          "name": "Build"
        },
        {
          "name": "Test"
        },
        {
          "name": "Approval"
        },
        {
          "name": "Deploy"
        },
        {
          "name": "Invoke"
        }
      ],
      "fqn": "jsii$_aws_cdk_codepipeline$.ActionCategory",
      "module": "jsii$_aws_cdk_codepipeline$",
      "namespace": "jsii$_aws_cdk_codepipeline$",
      "name": "ActionCategory"
    },
    "jsii$_aws_cdk_codepipeline$.ActionArtifactBounds": {
      "docs": {
        "comment": "Specifies the constraints on the number of input and output\nartifacts an action can have.\n\nThe constraints for each action type are documented on the\n{@link https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html Pipeline Structure Reference} page."
      },
      "kind": "interface",
      "properties": [
        {
          "name": "minInputs",
          "type": {
            "primitive": "number"
          }
        },
        {
          "name": "maxInputs",
          "type": {
            "primitive": "number"
          }
        },
        {
          "name": "minOutputs",
          "type": {
            "primitive": "number"
          }
        },
        {
          "name": "maxOutputs",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codepipeline$.ActionArtifactBounds",
      "module": "jsii$_aws_cdk_codepipeline$",
      "namespace": "jsii$_aws_cdk_codepipeline$",
      "name": "ActionArtifactBounds",
      "datatype": true
    },
    "jsii$_aws_cdk_codepipeline$.ActionProps": {
      "docs": {
        "comment": "Construction properties of the low level {@link Action action type}."
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "A category that defines which action type the owner (the entity that performs the action) performs.\nThe category that you select determine the providers that you can specify for the {@link #provider} property."
          },
          "name": "category",
          "type": {
            "fqn": "jsii$_aws_cdk_codepipeline$.ActionCategory"
          }
        },
        {
          "docs": {
            "comment": "The service provider that the action calls. The providers that you can specify are determined by\nthe category that you select. For example, a valid provider for the Deploy category is AWS CodeDeploy,\nwhich you would specify as CodeDeploy."
          },
          "name": "provider",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The constraints to apply to the number of input and output artifacts used by this action."
          },
          "name": "artifactBounds",
          "type": {
            "fqn": "jsii$_aws_cdk_codepipeline$.ActionArtifactBounds"
          }
        },
        {
          "docs": {
            "comment": "The action's configuration. These are key-value pairs that specify input values for an action.\nFor more information, see the AWS CodePipeline User Guide.\n\nhttp://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements"
          },
          "name": "configuration",
          "type": {
            "primitive": "any",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "1",
            "comment": "For all currently supported action types, the only valid version string is \"1\"."
          },
          "name": "version",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "'AWS'",
            "comment": "For all currently supported action types, the only valid owner string is\n\"AWS\", \"ThirdParty\", or \"Custom\". For more information, see the AWS\nCodePipeline API Reference."
          },
          "name": "owner",
          "type": {
            "primitive": "string",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codepipeline$.ActionProps",
      "module": "jsii$_aws_cdk_codepipeline$",
      "namespace": "jsii$_aws_cdk_codepipeline$",
      "name": "ActionProps",
      "datatype": true
    },
    "jsii$_aws_cdk_codepipeline$.Action": {
      "docs": {
        "comment": "Low level class for generically creating pipeline actions.\nIt is recommended that concrete types are used instead, such as {@link CodeCommitSource} or\n{@link CodeBuildAction}."
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The category of the action. The category defines which action type the owner (the entity that performs the action) performs."
          },
          "name": "category",
          "type": {
            "fqn": "jsii$_aws_cdk_codepipeline$.ActionCategory"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The service provider that the action calls."
          },
          "name": "provider",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The action's configuration. These are key-value pairs that specify input values for an action.\nFor more information, see the AWS CodePipeline User Guide.\n\nhttp://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements"
          },
          "name": "configuration",
          "type": {
            "primitive": "any",
            "optional": true
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The order in which AWS CodePipeline runs this action.\nFor more information, see the AWS CodePipeline User Guide.\n\nhttps://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements"
          },
          "name": "runOrder",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "methods": [
        {
          "docs": {
            "comment": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis."
          },
          "name": "validate",
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Render the Action to a CloudFormation struct"
          },
          "name": "render",
          "returns": {
            "fqn": "jsii$_aws_cdk_resources$.codepipeline.PipelineResource.ActionDeclarationProperty"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
                "optional": true
              }
            }
          ],
          "name": "onStateChange",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        },
        {
          "parameters": [
            {
              "name": "child",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "If an Artifact is added as a child, add it to the list of output artifacts."
          },
          "name": "addChild",
          "protected": true
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "name": "addOutputArtifact",
          "protected": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_codepipeline$.Artifact"
          }
        },
        {
          "parameters": [
            {
              "name": "artifact",
              "type": {
                "fqn": "jsii$_aws_cdk_codepipeline$.Artifact"
              }
            }
          ],
          "name": "addInputArtifact",
          "protected": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_codepipeline$.Action"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codepipeline$.Action",
      "module": "jsii$_aws_cdk_codepipeline$",
      "namespace": "jsii$_aws_cdk_codepipeline$",
      "name": "Action",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "abstract": true,
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_codepipeline$.Stage"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_codepipeline$.ActionProps"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codepipeline$.SourceProps": {
      "docs": {
        "comment": "Construction properties of the low level {@link Source source action}"
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "default": "AWS",
            "comment": "The source action owner (could e \"AWS\", \"ThirdParty\" or \"Custom\")"
          },
          "name": "owner",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "\"1\"",
            "comment": "The source action verison."
          },
          "name": "version",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The name of the source's output artifact. Output artifacts are used by CodePipeline as\ninputs into other actions."
          },
          "name": "artifactName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The service provider that the action calls. For example, a valid provider for Source actions is S3."
          },
          "name": "provider",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The action's configuration. These are key-value pairs that specify input values for an action.\nFor more information, see the AWS CodePipeline User Guide.\n\nhttp://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements"
          },
          "name": "configuration",
          "type": {
            "primitive": "any",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codepipeline$.SourceProps",
      "module": "jsii$_aws_cdk_codepipeline$",
      "namespace": "jsii$_aws_cdk_codepipeline$",
      "name": "SourceProps",
      "datatype": true
    },
    "jsii$_aws_cdk_codepipeline$.Source": {
      "docs": {
        "comment": "Low level class for source actions.\nIt is recommended that concrete types are used instead, such as {@link AmazonS3Source} or\n{@link CodeCommitSource}."
      },
      "kind": "class",
      "properties": [
        {
          "name": "artifact",
          "type": {
            "fqn": "jsii$_aws_cdk_codepipeline$.Artifact"
          },
          "immutable": true
        }
      ],
      "fqn": "jsii$_aws_cdk_codepipeline$.Source",
      "module": "jsii$_aws_cdk_codepipeline$",
      "namespace": "jsii$_aws_cdk_codepipeline$",
      "name": "Source",
      "base": {
        "fqn": "jsii$_aws_cdk_codepipeline$.Action"
      },
      "abstract": true,
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_codepipeline$.Stage"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_codepipeline$.SourceProps"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codepipeline$.AmazonS3SourceProps": {
      "docs": {
        "comment": "Construction properties of the {@link AmazonS3Source S3 source action}"
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "The name of the source's output artifact. Output artifacts are used by CodePipeline as\ninputs into other actions."
          },
          "name": "artifactName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The Amazon S3 bucket that stores the source code"
          },
          "name": "bucket",
          "type": {
            "fqn": "jsii$_aws_cdk_s3$.BucketRef"
          }
        },
        {
          "docs": {
            "comment": "The key within the S3 bucket that stores the source code"
          },
          "name": "bucketKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "default": "true",
            "comment": "Whether or not AWS CodePipeline should poll for source changes"
          },
          "name": "pollForSourceChanges",
          "type": {
            "primitive": "boolean",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codepipeline$.AmazonS3SourceProps",
      "module": "jsii$_aws_cdk_codepipeline$",
      "namespace": "jsii$_aws_cdk_codepipeline$",
      "name": "AmazonS3SourceProps",
      "datatype": true
    },
    "jsii$_aws_cdk_codepipeline$.AmazonS3Source": {
      "docs": {
        "comment": "Source that is provided by a specific Amazon S3 object"
      },
      "kind": "class",
      "fqn": "jsii$_aws_cdk_codepipeline$.AmazonS3Source",
      "module": "jsii$_aws_cdk_codepipeline$",
      "namespace": "jsii$_aws_cdk_codepipeline$",
      "name": "AmazonS3Source",
      "base": {
        "fqn": "jsii$_aws_cdk_codepipeline$.Source"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_codepipeline$.Stage"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_codepipeline$.AmazonS3SourceProps"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codepipeline$.CodeCommitSourceProps": {
      "docs": {
        "comment": "Construction properties of the {@link CodeCommitSource CodeCommit source action}"
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "The name of the source's output artifact. Output artifacts are used by CodePipeline as\ninputs into other actions."
          },
          "name": "artifactName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The CodeCommit repository."
          },
          "name": "repository",
          "type": {
            "fqn": "jsii$_aws_cdk_codecommit$.RepositoryRef"
          }
        },
        {
          "docs": {
            "default": "'master'"
          },
          "name": "branch",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "true",
            "comment": "Whether or not AWS CodePipeline should poll for source changes"
          },
          "name": "pollForSourceChanges",
          "type": {
            "primitive": "boolean",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codepipeline$.CodeCommitSourceProps",
      "module": "jsii$_aws_cdk_codepipeline$",
      "namespace": "jsii$_aws_cdk_codepipeline$",
      "name": "CodeCommitSourceProps",
      "datatype": true
    },
    "jsii$_aws_cdk_codepipeline$.CodeCommitSource": {
      "docs": {
        "comment": "Source that is provided by an AWS CodeCommit repository"
      },
      "kind": "class",
      "fqn": "jsii$_aws_cdk_codepipeline$.CodeCommitSource",
      "module": "jsii$_aws_cdk_codepipeline$",
      "namespace": "jsii$_aws_cdk_codepipeline$",
      "name": "CodeCommitSource",
      "base": {
        "fqn": "jsii$_aws_cdk_codepipeline$.Source"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_codepipeline$.Stage"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_codepipeline$.CodeCommitSourceProps"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codepipeline$.GithubSourceProps": {
      "docs": {
        "comment": "Construction properties of the {@link GitHubSource GitHub source action}"
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "The name of the source's output artifact. Output artifacts are used by CodePipeline as\ninputs into other actions."
          },
          "name": "artifactName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The GitHub account/user that owns the repo."
          },
          "name": "owner",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The name of the repo, without the username."
          },
          "name": "repo",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "default": "\"master\"",
            "comment": "The branch to use."
          },
          "name": "branch",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "A GitHub OAuth token to use for authentication.\n\nIt is recommended to use a `SecretParameter` to obtain the token from the SSM\nParameter Store:\n\n     const oauth = new SecretParameter(this, 'GitHubOAuthToken', { ssmParameter: 'my-github-token });\n     new GitHubSource(stage, 'GH' { oauthToken: oauth });"
          },
          "name": "oauthToken",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.Secret"
          }
        },
        {
          "docs": {
            "default": "true",
            "comment": "Whether or not AWS CodePipeline should poll for source changes"
          },
          "name": "pollForSourceChanges",
          "type": {
            "primitive": "boolean",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codepipeline$.GithubSourceProps",
      "module": "jsii$_aws_cdk_codepipeline$",
      "namespace": "jsii$_aws_cdk_codepipeline$",
      "name": "GithubSourceProps",
      "datatype": true
    },
    "jsii$_aws_cdk_codepipeline$.GitHubSource": {
      "docs": {
        "comment": "Source that is provided by a GitHub repository"
      },
      "kind": "class",
      "fqn": "jsii$_aws_cdk_codepipeline$.GitHubSource",
      "module": "jsii$_aws_cdk_codepipeline$",
      "namespace": "jsii$_aws_cdk_codepipeline$",
      "name": "GitHubSource",
      "base": {
        "fqn": "jsii$_aws_cdk_codepipeline$.Source"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_codepipeline$.Stage"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_codepipeline$.GithubSourceProps"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codepipeline$.BuildActionProps": {
      "docs": {
        "comment": "Construction properties of the low level {@link BuildAction build action}"
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "The source to use as input for this build"
          },
          "name": "inputArtifact",
          "type": {
            "fqn": "jsii$_aws_cdk_codepipeline$.Artifact"
          }
        },
        {
          "docs": {
            "comment": "The service provider that the action calls. For example, a valid provider for Source actions is CodeBuild."
          },
          "name": "provider",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The name of the build's output artifact"
          },
          "name": "artifactName",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The action's configuration. These are key-value pairs that specify input values for an action.\nFor more information, see the AWS CodePipeline User Guide.\n\nhttp://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements"
          },
          "name": "configuration",
          "type": {
            "primitive": "any",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codepipeline$.BuildActionProps",
      "module": "jsii$_aws_cdk_codepipeline$",
      "namespace": "jsii$_aws_cdk_codepipeline$",
      "name": "BuildActionProps",
      "datatype": true
    },
    "jsii$_aws_cdk_codepipeline$.BuildAction": {
      "docs": {
        "comment": "Low level class for build actions.\nIt is recommended that concrete types are used instead, such as {@link CodeBuildAction}."
      },
      "kind": "class",
      "properties": [
        {
          "name": "artifact",
          "type": {
            "fqn": "jsii$_aws_cdk_codepipeline$.Artifact",
            "optional": true
          },
          "immutable": true
        }
      ],
      "fqn": "jsii$_aws_cdk_codepipeline$.BuildAction",
      "module": "jsii$_aws_cdk_codepipeline$",
      "namespace": "jsii$_aws_cdk_codepipeline$",
      "name": "BuildAction",
      "base": {
        "fqn": "jsii$_aws_cdk_codepipeline$.Action"
      },
      "abstract": true,
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_codepipeline$.Stage"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_codepipeline$.BuildActionProps"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codepipeline$.CodeBuildActionProps": {
      "docs": {
        "comment": "Construction properties of the {@link CodeBuildAction CodeBuild action}"
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "The source to use as input for this build"
          },
          "name": "inputArtifact",
          "type": {
            "fqn": "jsii$_aws_cdk_codepipeline$.Artifact"
          }
        },
        {
          "docs": {
            "comment": "The name of the build's output artifact"
          },
          "name": "artifactName",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The build project"
          },
          "name": "project",
          "type": {
            "fqn": "jsii$_aws_cdk_codebuild$.BuildProjectRef"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codepipeline$.CodeBuildActionProps",
      "module": "jsii$_aws_cdk_codepipeline$",
      "namespace": "jsii$_aws_cdk_codepipeline$",
      "name": "CodeBuildActionProps",
      "datatype": true
    },
    "jsii$_aws_cdk_codepipeline$.CodeBuildAction": {
      "docs": {
        "comment": "Build action that uses AWS CodeBuild"
      },
      "kind": "class",
      "fqn": "jsii$_aws_cdk_codepipeline$.CodeBuildAction",
      "module": "jsii$_aws_cdk_codepipeline$",
      "namespace": "jsii$_aws_cdk_codepipeline$",
      "name": "CodeBuildAction",
      "base": {
        "fqn": "jsii$_aws_cdk_codepipeline$.BuildAction"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_codepipeline$.Stage"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_codepipeline$.CodeBuildActionProps"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codepipeline$.ApprovalAction": {
      "docs": {
        "comment": "Manual approval action"
      },
      "kind": "class",
      "fqn": "jsii$_aws_cdk_codepipeline$.ApprovalAction",
      "module": "jsii$_aws_cdk_codepipeline$",
      "namespace": "jsii$_aws_cdk_codepipeline$",
      "name": "ApprovalAction",
      "base": {
        "fqn": "jsii$_aws_cdk_codepipeline$.Action"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_codepipeline$.Stage"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codepipeline$.InvokeLambdaProps": {
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "The lambda function to invoke."
          },
          "name": "lambda",
          "type": {
            "fqn": "jsii$_aws_cdk_lambda$.LambdaRef"
          }
        },
        {
          "docs": {
            "comment": "String to be used in the event data parameter passed to the Lambda\nfunction\n\nSee an example JSON event in the CodePipeline documentation.\n\nhttps://docs.aws.amazon.com/codepipeline/latest/userguide/actions-invoke-lambda-function.html#actions-invoke-lambda-function-json-event-example"
          },
          "name": "userParameters",
          "type": {
            "primitive": "any",
            "optional": true
          }
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-invoke-lambda-function.html#actions-invoke-lambda-function-create-function",
            "default": "true",
            "comment": "Adds the \"codepipeline:PutJobSuccessResult\" and\n\"codepipeline:PutJobFailureResult\" for '*' resource to the Lambda\nexecution role policy.\n\nNOTE: the reason we can't add the specific pipeline ARN as a resource is\nto avoid a cyclic dependency between the pipeline and the Lambda function\n(the pipeline references) the Lambda and the Lambda needs permissions on\nthe pipeline."
          },
          "name": "addPutJobResultPolicy",
          "type": {
            "primitive": "boolean",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codepipeline$.InvokeLambdaProps",
      "module": "jsii$_aws_cdk_codepipeline$",
      "namespace": "jsii$_aws_cdk_codepipeline$",
      "name": "InvokeLambdaProps",
      "datatype": true
    },
    "jsii$_aws_cdk_codepipeline$.InvokeLambdaAction": {
      "docs": {
        "link": "https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-invoke-lambda-function.html"
      },
      "kind": "class",
      "methods": [
        {
          "parameters": [
            {
              "docs": {
                "param": "artifact"
              },
              "name": "artifact",
              "type": {
                "fqn": "jsii$_aws_cdk_codepipeline$.Artifact"
              }
            }
          ],
          "docs": {
            "comment": "Add an input artifact"
          },
          "name": "addInputArtifact",
          "returns": {
            "fqn": "jsii$_aws_cdk_codepipeline$.InvokeLambdaAction"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codepipeline$.InvokeLambdaAction",
      "module": "jsii$_aws_cdk_codepipeline$",
      "namespace": "jsii$_aws_cdk_codepipeline$",
      "name": "InvokeLambdaAction",
      "base": {
        "fqn": "jsii$_aws_cdk_codepipeline$.Action"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_codepipeline$.Stage"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_codepipeline$.InvokeLambdaProps"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codepipeline$.ArtifactAttribute": {
      "docs": {
        "link": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline-parameter-override-functions.html"
      },
      "kind": "class",
      "fqn": "jsii$_aws_cdk_codepipeline$.ArtifactAttribute",
      "module": "jsii$_aws_cdk_codepipeline$",
      "namespace": "jsii$_aws_cdk_codepipeline$",
      "name": "ArtifactAttribute",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "artifact",
            "type": {
              "fqn": "jsii$_aws_cdk_codepipeline$.Artifact"
            }
          },
          {
            "name": "attributeName",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codepipeline$.ArtifactGetParam": {
      "docs": {
        "link": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline-parameter-override-functions.html"
      },
      "kind": "class",
      "fqn": "jsii$_aws_cdk_codepipeline$.ArtifactGetParam",
      "module": "jsii$_aws_cdk_codepipeline$",
      "namespace": "jsii$_aws_cdk_codepipeline$",
      "name": "ArtifactGetParam",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "artifact",
            "type": {
              "fqn": "jsii$_aws_cdk_codepipeline$.Artifact"
            }
          },
          {
            "name": "jsonFile",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "keyName",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codepipeline$.Artifact": {
      "docs": {
        "comment": "An output artifact of an action. Artifacts can be used as input by some actions."
      },
      "kind": "class",
      "properties": [
        {
          "name": "name",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The artifact attribute for the name of the S3 bucket where the artifact is stored."
          },
          "name": "bucketName",
          "type": {
            "fqn": "jsii$_aws_cdk_codepipeline$.ArtifactAttribute"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The artifact attribute for The name of the .zip file that contains the artifact that is\ngenerated by AWS CodePipeline, such as 1ABCyZZ.zip."
          },
          "name": "objectKey",
          "type": {
            "fqn": "jsii$_aws_cdk_codepipeline$.ArtifactAttribute"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The artifact attribute of the Amazon Simple Storage Service (Amazon S3) URL of the artifact,\nsuch as https://s3-us-west-2.amazonaws.com/artifactstorebucket-yivczw8jma0c/test/TemplateSo/1ABCyZZ.zip."
          },
          "name": "url",
          "type": {
            "fqn": "jsii$_aws_cdk_codepipeline$.ArtifactAttribute"
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "docs": {
                "param": "fileName The name of the file",
                "comment": "The name of the file"
              },
              "name": "fileName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Returns an ArtifactPath for a file within this artifact.\nOutput is in the form \"<artifact-name>::<file-name>\""
          },
          "name": "subartifact",
          "returns": {
            "fqn": "jsii$_aws_cdk_codepipeline$.ArtifactPath"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "jsonFile The JSON file name.",
                "comment": "The JSON file name."
              },
              "name": "jsonFile",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "keyName The hash key.",
                "comment": "The hash key."
              },
              "name": "keyName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Returns a token for a value inside a JSON file within this artifact."
          },
          "name": "getParam",
          "returns": {
            "fqn": "jsii$_aws_cdk_codepipeline$.ArtifactGetParam"
          }
        },
        {
          "docs": {
            "comment": "Returns a string representation of this construct."
          },
          "name": "toString",
          "returns": {
            "primitive": "string"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codepipeline$.Artifact",
      "module": "jsii$_aws_cdk_codepipeline$",
      "namespace": "jsii$_aws_cdk_codepipeline$",
      "name": "Artifact",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_codepipeline$.Action"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codepipeline$.ArtifactPath": {
      "docs": {
        "comment": "A specific file within an output artifact.\n\nThe most common use case for this is specifying the template file\nfor a CloudFormation action."
      },
      "kind": "class",
      "properties": [
        {
          "name": "artifact",
          "type": {
            "fqn": "jsii$_aws_cdk_codepipeline$.Artifact"
          },
          "immutable": true
        },
        {
          "name": "fileName",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "name": "location",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        }
      ],
      "fqn": "jsii$_aws_cdk_codepipeline$.ArtifactPath",
      "module": "jsii$_aws_cdk_codepipeline$",
      "namespace": "jsii$_aws_cdk_codepipeline$",
      "name": "ArtifactPath",
      "initializer": {
        "parameters": [
          {
            "name": "artifact",
            "type": {
              "fqn": "jsii$_aws_cdk_codepipeline$.Artifact"
            }
          },
          {
            "name": "fileName",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codepipeline$.PipelineArn": {
      "docs": {
        "comment": "The ARN of a pipeline"
      },
      "kind": "class",
      "fqn": "jsii$_aws_cdk_codepipeline$.PipelineArn",
      "module": "jsii$_aws_cdk_codepipeline$",
      "namespace": "jsii$_aws_cdk_codepipeline$",
      "name": "PipelineArn",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Arn"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codepipeline$.PipelineProps": {
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "The S3 bucket used by this Pipeline to store artifacts.\nIf not specified, a new S3 bucket will be created."
          },
          "name": "artifactBucket",
          "type": {
            "fqn": "jsii$_aws_cdk_s3$.BucketRef",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Indicates whether to rerun the AWS CodePipeline pipeline after you update it."
          },
          "name": "restartExecutionOnUpdate",
          "type": {
            "primitive": "boolean",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Name of the pipeline. If you don't specify a name,  AWS CloudFormation generates an ID\nand uses that for the pipeline name."
          },
          "name": "pipelineName",
          "type": {
            "primitive": "string",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codepipeline$.PipelineProps",
      "module": "jsii$_aws_cdk_codepipeline$",
      "namespace": "jsii$_aws_cdk_codepipeline$",
      "name": "PipelineProps",
      "datatype": true
    },
    "jsii$_aws_cdk_codepipeline$.Pipeline": {
      "docs": {
        "example": "// create a pipeline\nconst pipeline = new Pipeline(this, 'Pipeline');\n\n// add a stage\nconst sourceStage = new Stage(pipeline, 'Source');\n\n// add a source action to the stage\nnew CodeCommitSource(sourceStage, 'Source', {\nartifactName: 'SourceArtifact',\nrepository: repo\n});\n\n// ... add more stages",
        "comment": "An AWS CodePipeline pipeline with its associated IAM role and S3 bucket."
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The IAM role AWS CodePipeline will use to perform actions or assume roles for actions with\na more specific IAM role."
          },
          "name": "role",
          "type": {
            "fqn": "jsii$_aws_cdk_iam$.Role"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "ARN of this pipeline"
          },
          "name": "pipelineArn",
          "type": {
            "fqn": "jsii$_aws_cdk_codepipeline$.PipelineArn"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Bucket used to store output artifacts"
          },
          "name": "artifactBucket",
          "type": {
            "fqn": "jsii$_aws_cdk_s3$.BucketRef"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Allows the pipeline to be used as a CloudWatch event rule target.\n\nUsage:\n\n      const pipeline = new Pipeline(this, 'MyPipeline');\n      const rule = new EventRule(this, 'MyRule', { schedule: 'rate(1 minute)' });\n      rule.addTarget(pipeline);"
          },
          "name": "eventRuleTarget",
          "type": {
            "fqn": "jsii$_aws_cdk_events$.EventRuleTarget"
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              }
            }
          ],
          "docs": {
            "comment": "Adds a statement to the pipeline role."
          },
          "name": "addToRolePolicy"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "name The name of the event rule construct. If you wish to define\nmore than a single onStateChange event, you will need to explicitly\nspecify a name.",
                "comment": "The name of the event rule construct. If you wish to define\nmore than a single onStateChange event, you will need to explicitly\nspecify a name."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "target Initial target to add to the event rule. You can also add\ntargets and customize target inputs by calling `rule.addTarget(target[,\n     * options])` after the rule was created.",
                "comment": "Initial target to add to the event rule. You can also add\ntargets and customize target inputs by calling `rule.addTarget(target[,\n     * options])` after the rule was created."
              },
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "docs": {
                "param": "options Additional options to pass to the event rule",
                "comment": "Additional options to pass to the event rule"
              },
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Defines an event rule triggered by the \"CodePipeline Pipeline Execution\nState Change\" event emitted from this pipeline."
          },
          "name": "onStateChange",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        },
        {
          "docs": {
            "override": "",
            "comment": "Validate the pipeline structure\n\nValidation happens according to the rules documented at\n\nhttps://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#pipeline-requirements"
          },
          "name": "validate",
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "parameters": [
            {
              "name": "child",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "override": "",
            "comment": "If a stage is added as a child, add it to the list of stages.\nTODO: This is a hack that should be removed once the CDK has an\n       onChildAdded type hook."
          },
          "name": "addChild",
          "protected": true
        }
      ],
      "interfaces": [
        {
          "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget"
        }
      ],
      "fqn": "jsii$_aws_cdk_codepipeline$.Pipeline",
      "module": "jsii$_aws_cdk_codepipeline$",
      "namespace": "jsii$_aws_cdk_codepipeline$",
      "name": "Pipeline",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_codepipeline$.PipelineProps",
              "optional": true
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codepipeline$.Stage": {
      "docs": {
        "example": "// add a stage to a pipeline\nnew Stage(pipeline, 'MyStage');",
        "comment": "A stage in a pipeline. Stages are added to a pipeline by constructing a Stage with\nthe pipeline as the first argument to the constructor."
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The Pipeline this stage is a member of"
          },
          "name": "pipeline",
          "type": {
            "fqn": "jsii$_aws_cdk_codepipeline$.Pipeline"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Get a duplicate of this stage's list of actions."
          },
          "name": "actions",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_codepipeline$.Action"
              },
              "kind": "array"
            }
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "docs": {
            "comment": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis."
          },
          "name": "validate",
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "name": "render",
          "returns": {
            "fqn": "jsii$_aws_cdk_resources$.codepipeline.PipelineResource.StageDeclarationProperty"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
                "optional": true
              }
            }
          ],
          "name": "onStateChange",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "child"
              },
              "name": "child",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "docs": {
                "param": "name"
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "override": "",
            "comment": "If an action is added as a child, add it to the list of actions.\nTODO: This is a hack that should be removed once the CDK has an\n       onChildAdded type hook."
          },
          "name": "addChild",
          "protected": true
        }
      ],
      "fqn": "jsii$_aws_cdk_codepipeline$.Stage",
      "module": "jsii$_aws_cdk_codepipeline$",
      "namespace": "jsii$_aws_cdk_codepipeline$",
      "name": "Stage",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_codepipeline$.Pipeline"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Append a new stage to the pipeline\n\nOnly a Pipeline can be passed in as a parent because stages should\nalways be attached to a pipeline. It's illogical to construct a Stage\nwith any other parent."
        },
        "initializer": true
      }
    }
  },
  "nametree": {
    "jsii$_aws_cdk_codepipeline$": {
      "ActionCategory": {
        "_": "jsii$_aws_cdk_codepipeline$.ActionCategory"
      },
      "ActionArtifactBounds": {
        "_": "jsii$_aws_cdk_codepipeline$.ActionArtifactBounds"
      },
      "ActionProps": {
        "_": "jsii$_aws_cdk_codepipeline$.ActionProps"
      },
      "Action": {
        "_": "jsii$_aws_cdk_codepipeline$.Action"
      },
      "SourceProps": {
        "_": "jsii$_aws_cdk_codepipeline$.SourceProps"
      },
      "Source": {
        "_": "jsii$_aws_cdk_codepipeline$.Source"
      },
      "AmazonS3SourceProps": {
        "_": "jsii$_aws_cdk_codepipeline$.AmazonS3SourceProps"
      },
      "AmazonS3Source": {
        "_": "jsii$_aws_cdk_codepipeline$.AmazonS3Source"
      },
      "CodeCommitSourceProps": {
        "_": "jsii$_aws_cdk_codepipeline$.CodeCommitSourceProps"
      },
      "CodeCommitSource": {
        "_": "jsii$_aws_cdk_codepipeline$.CodeCommitSource"
      },
      "GithubSourceProps": {
        "_": "jsii$_aws_cdk_codepipeline$.GithubSourceProps"
      },
      "GitHubSource": {
        "_": "jsii$_aws_cdk_codepipeline$.GitHubSource"
      },
      "BuildActionProps": {
        "_": "jsii$_aws_cdk_codepipeline$.BuildActionProps"
      },
      "BuildAction": {
        "_": "jsii$_aws_cdk_codepipeline$.BuildAction"
      },
      "CodeBuildActionProps": {
        "_": "jsii$_aws_cdk_codepipeline$.CodeBuildActionProps"
      },
      "CodeBuildAction": {
        "_": "jsii$_aws_cdk_codepipeline$.CodeBuildAction"
      },
      "ApprovalAction": {
        "_": "jsii$_aws_cdk_codepipeline$.ApprovalAction"
      },
      "InvokeLambdaProps": {
        "_": "jsii$_aws_cdk_codepipeline$.InvokeLambdaProps"
      },
      "InvokeLambdaAction": {
        "_": "jsii$_aws_cdk_codepipeline$.InvokeLambdaAction"
      },
      "ArtifactAttribute": {
        "_": "jsii$_aws_cdk_codepipeline$.ArtifactAttribute"
      },
      "ArtifactGetParam": {
        "_": "jsii$_aws_cdk_codepipeline$.ArtifactGetParam"
      },
      "Artifact": {
        "_": "jsii$_aws_cdk_codepipeline$.Artifact"
      },
      "ArtifactPath": {
        "_": "jsii$_aws_cdk_codepipeline$.ArtifactPath"
      },
      "PipelineArn": {
        "_": "jsii$_aws_cdk_codepipeline$.PipelineArn"
      },
      "PipelineProps": {
        "_": "jsii$_aws_cdk_codepipeline$.PipelineProps"
      },
      "Pipeline": {
        "_": "jsii$_aws_cdk_codepipeline$.Pipeline"
      },
      "Stage": {
        "_": "jsii$_aws_cdk_codepipeline$.Stage"
      }
    }
  },
  "typecount": 27,
  "externalTypes": {
    "jsii$_aws_cdk_core$.Construct": {
      "docs": {
        "comment": "Represents the building block of the construct graph.\nWhen a construct is created, it is always added as a child"
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "Returns the parent of this node or undefined if this is a root node."
          },
          "name": "parent",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.Construct",
            "optional": true
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The name of this construct"
          },
          "name": "name",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "All direct children of this construct."
          },
          "name": "children",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              },
              "kind": "array"
            }
          },
          "immutable": true
        },
        {
          "docs": {
            "returns": "/-separated path of this Construct.",
            "comment": "Returns the path of all constructs from root to this construct, in string form."
          },
          "name": "path",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "An array of metadata objects associated with this construct.\nThis can be used, for example, to implement support for deprecation notices, source mapping, etc."
          },
          "name": "metadata",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.MetadataEntry"
              },
              "kind": "array"
            }
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "docs": {
            "comment": "Returns a string representation of this construct."
          },
          "name": "toString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "parameters": [
            {
              "name": "depth",
              "type": {
                "primitive": "number",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Returns a string with a tree representation of this construct and it's children."
          },
          "name": "toTreeString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "a child by path or undefined if not found.",
            "comment": "Return a descendant by path, or undefined"
          },
          "name": "tryFindChild",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct",
            "optional": true
          }
        },
        {
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "Child with the given path.",
            "comment": "Return a descendant by path\n\nThrows an exception if the descendant is not found."
          },
          "name": "findChild",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "key The context key",
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "value The context value",
                "comment": "The context value"
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "This can be used to set contextual values.\nContext must be set before any children are added, since children may consult context info during construction.\nIf the key already exists, it will be overridden."
          },
          "name": "setContext"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "key The context key",
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "The context value or undefined",
            "comment": "Retrieves a value from tree context.\n\nContext is usually initialized at the root, but can be overridden at any point in the tree."
          },
          "name": "getContext",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Retrieve a value from tree-global context\n\nIt is an error if the context object is not available."
          },
          "name": "requireContext",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "type a string denoting the type of metadata",
                "comment": "a string denoting the type of metadata"
              },
              "name": "type",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "data the value of the metadata (can be a Token). If null/undefined, metadata will not be added.",
                "comment": "the value of the metadata (can be a Token). If null/undefined, metadata will not be added."
              },
              "name": "data",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "param": "from a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)",
                "comment": "a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)"
              },
              "name": "from",
              "type": {
                "primitive": "any",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Adds a metadata entry to this construct.\nEntries are arbitrary values and will also include a stack trace to allow tracing back to\nthe code location for when the entry was added. It can be used, for example, to include source\nmapping in CloudFormation templates to improve diagnostics."
          },
          "name": "addMetadata",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "message The warning message.",
                "comment": "The warning message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Adds a { warning: <message> } metadata entry to this construct."
          },
          "name": "addWarning",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "docs": {
            "returns": "An array of validation error messages, or an empty array if there the construct is valid.",
            "comment": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis."
          },
          "name": "validate",
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "returns": "A list of validation errors. If the list is empty, all constructs are valid.",
            "comment": "Invokes 'validate' on all child constructs and then on this construct (depth-first)."
          },
          "name": "validateTree",
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.ValidationError"
              },
              "kind": "array"
            }
          }
        },
        {
          "parameters": [
            {
              "name": "upTo",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Return the ancestors (including self) of this Construct up until and excluding the indicated component"
          },
          "name": "ancestors",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              },
              "kind": "array"
            }
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "props The props bag.",
                "comment": "The props bag."
              },
              "name": "props",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "param": "name The name of the required property.",
                "comment": "The name of the required property."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Throws if the `props` bag doesn't include the property `name`.\nIn the future we can add some type-checking here, maybe even auto-generate during compilation."
          },
          "name": "required",
          "protected": true,
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "child The child construct",
                "comment": "The child construct"
              },
              "name": "child",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "name": "childName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "The resolved path part name of the child",
            "comment": "Adds a child construct to this node."
          },
          "name": "addChild",
          "protected": true
        },
        {
          "docs": {
            "comment": "Locks this construct from allowing more children to be added. After this\ncall, no more children can be added to this construct or to any children."
          },
          "name": "lock",
          "protected": true
        },
        {
          "docs": {
            "comment": "Unlocks this costruct and allows mutations (adding children)."
          },
          "name": "unlock",
          "protected": true
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.Construct",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "Construct",
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_resources$.codepipeline.PipelineResource.ActionDeclarationProperty": {
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions.html"
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions.html#cfn-codepipeline-pipeline-stages-actions-actiontypeid",
            "comment": "PipelineResource.ActionDeclarationProperty.ActionTypeId"
          },
          "name": "actionTypeId",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "jsii$_aws_cdk_core$.Token"
                },
                {
                  "fqn": "jsii$_aws_cdk_resources$.codepipeline.PipelineResource.ActionTypeIdProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions.html#cfn-codepipeline-pipeline-stages-actions-configuration",
            "comment": "PipelineResource.ActionDeclarationProperty.Configuration"
          },
          "name": "configuration",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "json"
                },
                {
                  "fqn": "jsii$_aws_cdk_core$.Token"
                }
              ]
            },
            "optional": true
          }
        },
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions.html#cfn-codepipeline-pipeline-stages-actions-inputartifacts",
            "comment": "PipelineResource.ActionDeclarationProperty.InputArtifacts"
          },
          "name": "inputArtifacts",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "jsii$_aws_cdk_core$.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "jsii$_aws_cdk_core$.Token"
                          },
                          {
                            "fqn": "jsii$_aws_cdk_resources$.codepipeline.PipelineResource.InputArtifactProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            },
            "optional": true
          }
        },
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions.html#cfn-codepipeline-pipeline-stages-actions-name",
            "comment": "PipelineResource.ActionDeclarationProperty.Name"
          },
          "name": "name",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "jsii$_aws_cdk_core$.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions.html#cfn-codepipeline-pipeline-stages-actions-outputartifacts",
            "comment": "PipelineResource.ActionDeclarationProperty.OutputArtifacts"
          },
          "name": "outputArtifacts",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "jsii$_aws_cdk_core$.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "jsii$_aws_cdk_core$.Token"
                          },
                          {
                            "fqn": "jsii$_aws_cdk_resources$.codepipeline.PipelineResource.OutputArtifactProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            },
            "optional": true
          }
        },
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions.html#cfn-codepipeline-pipeline-stages-actions-rolearn",
            "comment": "PipelineResource.ActionDeclarationProperty.RoleArn"
          },
          "name": "roleArn",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "jsii$_aws_cdk_core$.Token"
                }
              ]
            },
            "optional": true
          }
        },
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions.html#cfn-codepipeline-pipeline-stages-actions-runorder",
            "comment": "PipelineResource.ActionDeclarationProperty.RunOrder"
          },
          "name": "runOrder",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "jsii$_aws_cdk_core$.Token"
                }
              ]
            },
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_resources$.codepipeline.PipelineResource.ActionDeclarationProperty",
      "module": "jsii$_aws_cdk_resources$",
      "namespace": "jsii$_aws_cdk_resources$.codepipeline.PipelineResource",
      "name": "ActionDeclarationProperty",
      "datatype": true,
      "parenttype": "jsii$_aws_cdk_resources$.codepipeline.PipelineResource"
    },
    "jsii$_aws_cdk_events$.EventRule": {
      "docs": {
        "comment": "Defines a CloudWatch Event Rule in this stack."
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The value of the event rule Amazon Resource Name (ARN), such as\narn:aws:events:us-east-2:123456789012:rule/example."
          },
          "name": "ruleArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.events.RuleArn"
          }
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "inputOptions",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.TargetInputTemplate",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Adds a target to the rule. The abstract class RuleTarget can be extended to define new\ntargets.\n\nNo-op if target is undefined."
          },
          "name": "addTarget"
        },
        {
          "parameters": [
            {
              "name": "eventPattern",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventPattern",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Adds an event pattern filter to this rule. If a pattern was already specified,\nthese values are merged into the existing pattern.\n\nFor example, if the rule already contains the pattern:\n\n      {\n          \"resources\": [ \"r1\" ],\n          \"detail\": {\n              \"hello\": [ 1 ]\n          }\n      }\n\nAnd `addEventPattern` is called with the pattern:\n\n      {\n          \"resources\": [ \"r2\" ],\n          \"detail\": {\n              \"foo\": [ \"bar\" ]\n          }\n      }\n\nThe resulting event pattern will be:\n\n      {\n          \"resources\": [ \"r1\", \"r2\" ],\n          \"detail\": {\n              \"hello\": [ 1 ],\n              \"foo\": [ \"bar\" ]\n          }\n      }"
          },
          "name": "addEventPattern"
        },
        {
          "docs": {
            "comment": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis."
          },
          "name": "validate",
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_events$.EventRule",
      "module": "jsii$_aws_cdk_events$",
      "namespace": "jsii$_aws_cdk_events$",
      "name": "EventRule",
      "base": {
        "fqn": "jsii$_aws_cdk_events$.EventRuleRef"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
              "optional": true
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_events$.IEventRuleTarget": {
      "docs": {
        "comment": "An abstract target for EventRules."
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "Returns the rule target specification.\nNOTE: Do not use the various `inputXxx` options. They can be set in a call to `addTarget`."
          },
          "name": "eventRuleTarget",
          "type": {
            "fqn": "jsii$_aws_cdk_events$.EventRuleTarget"
          },
          "immutable": true
        }
      ],
      "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
      "module": "jsii$_aws_cdk_events$",
      "namespace": "jsii$_aws_cdk_events$",
      "name": "IEventRuleTarget",
      "datatype": true
    },
    "jsii$_aws_cdk_events$.EventRuleProps": {
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "A description of the rule's purpose."
          },
          "name": "description",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "A name for the rule. If you don't specify a name, AWS CloudFormation\ngenerates a unique physical ID and uses that ID for the rule name. For\nmore information, see Name Type."
          },
          "name": "ruleName",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "Rule is enabled",
            "comment": "Indicates whether the rule is enabled."
          },
          "name": "enabled",
          "type": {
            "primitive": "boolean",
            "optional": true
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\n\nYou must specify this property, the `eventPattern` property, or both.",
            "comment": "The schedule or rate (frequency) that determines when CloudWatch Events\nruns the rule. For more information, see Schedule Expression Syntax for\nRules in the Amazon CloudWatch User Guide."
          },
          "name": "scheduleExpression",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CloudWatchEventsandEventPatterns.html\n\nYou must specify this property (either via props or via\n`addEventPattern`), the `scheduleExpression` property, or both. The\nmethod `addEventPattern` can be used to add filter values to the event\npattern.",
            "comment": "Describes which events CloudWatch Events routes to the specified target.\nThese routed events are matched events. For more information, see Events\nand Event Patterns in the Amazon CloudWatch User Guide."
          },
          "name": "eventPattern",
          "type": {
            "fqn": "jsii$_aws_cdk_events$.EventPattern",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Targets to invoke when this rule matches an event.\n\nInput will be the full matched event. If you wish to specify custom\ntarget input, use `addTarget(target[, inputOptions])`."
          },
          "name": "targets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget"
              },
              "kind": "array"
            },
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
      "module": "jsii$_aws_cdk_events$",
      "namespace": "jsii$_aws_cdk_events$",
      "name": "EventRuleProps",
      "datatype": true
    },
    "jsii$_aws_cdk_s3$.BucketRef": {
      "docs": {
        "comment": "Represents an S3 Bucket.\n\nBuckets can be either defined within this stack:\n\n     new Bucket(this, 'MyBucket', { props });\n\nOr imported from an existing bucket:\n\n     BucketRef.import(this, 'MyImportedBucket', { bucketArn: ... });\n\nYou can also export a bucket and import it into another stack:\n\n     const ref = myBucket.export();\n     BucketRef.import(this, 'MyImportedBucket', ref);"
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of the bucket."
          },
          "name": "bucketArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.s3.BucketArn"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "The name of the bucket."
          },
          "name": "bucketName",
          "type": {
            "fqn": "jsii$_aws_cdk_s3$.BucketName"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "Optional KMS encryption key associated with this bucket."
          },
          "name": "encryptionKey",
          "type": {
            "fqn": "jsii$_aws_cdk_kms$.EncryptionKeyRef",
            "optional": true
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "The resource policy assoicated with this bucket.\n\nIf `autoCreatePolicy` is true, a `BucketPolicy` will be created upon the\nfirst call to addToResourcePolicy(s)."
          },
          "name": "policy",
          "type": {
            "fqn": "jsii$_aws_cdk_s3$.BucketPolicy",
            "optional": true
          },
          "protected": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "Indicates if a bucket resource policy should automatically created upon\nthe first call to `addToResourcePolicy`."
          },
          "name": "autoCreatePolicy",
          "type": {
            "primitive": "boolean"
          },
          "protected": true,
          "abstract": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "docs": {
                "param": "parent The parent creating construct (usually `this`).",
                "comment": "The parent creating construct (usually `this`)."
              },
              "name": "parent",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "docs": {
                "param": "name The construct's name.",
                "comment": "The construct's name."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "jsii$_aws_cdk_s3$.BucketRefProps"
              }
            }
          ],
          "docs": {
            "comment": "Creates a Bucket construct that represents an external bucket."
          },
          "name": "import",
          "static": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_s3$.BucketRef"
          }
        },
        {
          "docs": {
            "comment": "Exports this bucket from the stack."
          },
          "name": "export",
          "returns": {
            "fqn": "jsii$_aws_cdk_s3$.BucketRefProps"
          }
        },
        {
          "parameters": [
            {
              "name": "permission",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              }
            }
          ],
          "docs": {
            "comment": "Adds a statement to the resource policy for a principal (i.e.\naccount/role/service) to perform actions on this bucket and/or it's\ncontents. Use `bucketArn` and `arnForObjects(keys)` to obtain ARNs for\nthis bucket or objects."
          },
          "name": "addToResourcePolicy"
        },
        {
          "parameters": [
            {
              "name": "keyPattern",
              "type": {
                "primitive": "any"
              },
              "variadic": true
            }
          ],
          "docs": {
            "comment": "Returns an ARN that represents all objects within the bucket that match\nthe key pattern specified. To represent all keys, specify ``\"*\"``.\n\nIf you specify multiple components for keyPattern, they will be concatenated::\n\n     arnForObjects('home/', team, '/', user, '/*')"
          },
          "name": "arnForObjects",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Arn"
          },
          "variadic": true
        },
        {
          "parameters": [
            {
              "name": "identity",
              "type": {
                "fqn": "jsii$_aws_cdk_iam$.IIdentityResource",
                "optional": true
              }
            },
            {
              "name": "objectsKeyPattern",
              "type": {
                "primitive": "string",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Temporary API for granting read permissions for this bucket and it's\ncontents to an IAM principal (Role/Group/User).\n\nIf an encryption key is used, permission to ues the key to decrypt the\ncontents of the bucket will also be granted."
          },
          "name": "grantRead"
        },
        {
          "parameters": [
            {
              "name": "identity",
              "type": {
                "fqn": "jsii$_aws_cdk_iam$.IIdentityResource",
                "optional": true
              }
            },
            {
              "name": "objectsKeyPattern",
              "type": {
                "primitive": "string",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Grants read/write permissions for this bucket and it's contents to an IAM\nprincipal (Role/Group/User).\n\nIf an encryption key is used, permission to use the key for\nencrypt/decrypt will also be granted."
          },
          "name": "grantReadWrite"
        }
      ],
      "fqn": "jsii$_aws_cdk_s3$.BucketRef",
      "module": "jsii$_aws_cdk_s3$",
      "namespace": "jsii$_aws_cdk_s3$",
      "name": "BucketRef",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "abstract": true,
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codecommit$.RepositoryRef": {
      "docs": {
        "comment": "Represents a reference to a CodeCommit Repository.\n\nIf you want to create a new Repository managed alongside your CDK code,\nuse the {@link Repository} class.\n\nIf you want to reference an already existing Repository,\nuse the {@link RepositoryRef.import} method."
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of this Repository. "
          },
          "name": "repositoryArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.codecommit.RepositoryArn"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "The human-visible name of this Repository. "
          },
          "name": "repositoryName",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.codecommit.RepositoryName"
          },
          "immutable": true,
          "abstract": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "docs": {
                "param": "parent the parent Construct for the Repository",
                "comment": "the parent Construct for the Repository"
              },
              "name": "parent",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "docs": {
                "param": "name the name of the Repository Construct",
                "comment": "the name of the Repository Construct"
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "props the properties used to identify the existing Repository",
                "comment": "the properties used to identify the existing Repository"
              },
              "name": "props",
              "type": {
                "fqn": "jsii$_aws_cdk_codecommit$.RepositoryRefProps"
              }
            }
          ],
          "docs": {
            "returns": "a reference to the existing Repository",
            "comment": "Import a Repository defined either outside the CDK, or in a different Stack\n(exported with the {@link export} method)."
          },
          "name": "import",
          "static": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_codecommit$.RepositoryRef"
          }
        },
        {
          "docs": {
            "see": "import",
            "comment": "Exports this Repository. Allows the same Repository to be used in 2 different Stacks."
          },
          "name": "export",
          "returns": {
            "fqn": "jsii$_aws_cdk_codecommit$.RepositoryRefProps"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Defines a CloudWatch event rule which triggers for repository events. Use\n`rule.addEventPattern(pattern)` to specify a filter."
          },
          "name": "onEvent",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Defines a CloudWatch event rule which triggers when a \"CodeCommit\nRepository State Change\" event occurs."
          },
          "name": "onStateChange",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Defines a CloudWatch event rule which triggers when a reference is\ncreated (i.e. a new brach/tag is created) to the repository."
          },
          "name": "onReferenceCreated",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Defines a CloudWatch event rule which triggers when a reference is\nupdated (i.e. a commit is pushed to an existig branch) from the repository."
          },
          "name": "onReferenceUpdated",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Defines a CloudWatch event rule which triggers when a reference is\ndelete (i.e. a branch/tag is deleted) from the repository."
          },
          "name": "onReferenceDeleted",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Defines a CloudWatch event rule which triggers when a pull request state is changed."
          },
          "name": "onPullRequestStateChange",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Defines a CloudWatch event rule which triggers when a comment is made on a pull request."
          },
          "name": "onCommentOnPullRequest",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Defines a CloudWatch event rule which triggers when a comment is made on a commit."
          },
          "name": "onCommentOnCommit",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "target The target of the event",
                "comment": "The target of the event"
              },
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "docs": {
                "param": "branch The branch to monitor. Defaults to all branches.",
                "comment": "The branch to monitor. Defaults to all branches."
              },
              "name": "branch",
              "type": {
                "primitive": "string",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Defines a CloudWatch event rule which triggers when a commit is pushed to a branch."
          },
          "name": "onCommit",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_codecommit$.RepositoryRef",
      "module": "jsii$_aws_cdk_codecommit$",
      "namespace": "jsii$_aws_cdk_codecommit$",
      "name": "RepositoryRef",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "abstract": true,
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_core$.Secret": {
      "docs": {
        "comment": "A token that represents a value that's expected to be a secret, like\npasswords and keys.\n\nIt is recommended to use the `SecretParameter` construct in order to import\nsecret values from the SSM Parameter Store instead of storing them in your\ncode.\n\nHowever, you can also just pass in values, like any other token: `new Secret('bla')`"
      },
      "kind": "class",
      "fqn": "jsii$_aws_cdk_core$.Secret",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "Secret",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_codebuild$.BuildProjectRef": {
      "docs": {
        "comment": "Represents a reference to a CodeBuild Project.\n\nIf you're managing the Project alongside the rest of your CDK resources,\nuse the {@link BuildProject} class.\n\nIf you want to reference an already existing Project\n(or one defined in a different CDK Stack),\nuse the {@link import} method."
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of this Project. "
          },
          "name": "projectArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.codebuild.ProjectArn"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "The human-visible name of this Project. "
          },
          "name": "projectName",
          "type": {
            "fqn": "jsii$_aws_cdk_codebuild$.ProjectName"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "The IAM service Role of this Project. Undefined for imported Projects. "
          },
          "name": "role",
          "type": {
            "fqn": "jsii$_aws_cdk_iam$.Role",
            "optional": true
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "Allows using build projects as event rule targets."
          },
          "name": "eventRuleTarget",
          "type": {
            "fqn": "jsii$_aws_cdk_events$.EventRuleTarget"
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "docs": {
                "param": "parent the parent Construct for this Construct",
                "comment": "the parent Construct for this Construct"
              },
              "name": "parent",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "docs": {
                "param": "name the logical name of this Construct",
                "comment": "the logical name of this Construct"
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "props the properties of the referenced Project",
                "comment": "the properties of the referenced Project"
              },
              "name": "props",
              "type": {
                "fqn": "jsii$_aws_cdk_codebuild$.BuildProjectRefProps"
              }
            }
          ],
          "docs": {
            "note": "if you're importing a CodeBuild Project for use\nin a CodePipeline, make sure the existing Project\nhas permissions to access the S3 Bucket of that Pipeline -\notherwise, builds in that Pipeline will always fail.",
            "returns": "a reference to the existing Project",
            "comment": "Import a Project defined either outside the CDK,\nor in a different CDK Stack\n(and exported using the {@link export} method)."
          },
          "name": "import",
          "static": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_codebuild$.BuildProjectRef"
          }
        },
        {
          "docs": {
            "comment": "Export this Project. Allows referencing this Project in a different CDK Stack."
          },
          "name": "export",
          "returns": {
            "fqn": "jsii$_aws_cdk_codebuild$.BuildProjectRefProps"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
                "optional": true
              }
            }
          ],
          "docs": {
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/sample-build-notifications.html",
            "comment": "Defines a CloudWatch event rule triggered when the build project state\nchanges. You can filter specific build status events using an event\npattern filter on the `build-status` detail field:\n\n      const rule = project.onStateChange('OnBuildStarted', target);\n      rule.addEventPattern({\n          detail: {\n              'build-status': [\n                  \"IN_PROGRESS\",\n                  \"SUCCEEDED\",\n                  \"FAILED\",\n                  \"STOPPED\"\n              ]\n          }\n      });\n\nYou can also use the methods `onBuildFailed` and `onBuildSucceeded` to define rules for\nthese specific state changes."
          },
          "name": "onStateChange",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
                "optional": true
              }
            }
          ],
          "docs": {
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/sample-build-notifications.html",
            "comment": "Defines a CloudWatch event rule that triggers upon phase change of this\nbuild project."
          },
          "name": "onPhaseChange",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Defines an event rule which triggers when a build starts."
          },
          "name": "onBuildStarted",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Defines an event rule which triggers when a build fails."
          },
          "name": "onBuildFailed",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_events$.EventRuleProps",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Defines an event rule which triggers when a build completes successfully."
          },
          "name": "onBuildSucceeded",
          "returns": {
            "fqn": "jsii$_aws_cdk_events$.EventRule"
          }
        }
      ],
      "interfaces": [
        {
          "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget"
        }
      ],
      "fqn": "jsii$_aws_cdk_codebuild$.BuildProjectRef",
      "module": "jsii$_aws_cdk_codebuild$",
      "namespace": "jsii$_aws_cdk_codebuild$",
      "name": "BuildProjectRef",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "abstract": true,
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_lambda$.LambdaRef": {
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The name of the function."
          },
          "name": "functionName",
          "type": {
            "fqn": "jsii$_aws_cdk_lambda$.FunctionName"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "The ARN fo the function."
          },
          "name": "functionArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.lambda.FunctionArn"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "The IAM role associated with this function."
          },
          "name": "role",
          "type": {
            "fqn": "jsii$_aws_cdk_iam$.Role",
            "optional": true
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "Whether the addPermission() call adds any permissions\n\nTrue for new Lambdas, false for imported Lambdas (they might live in different accounts)."
          },
          "name": "canCreatePermissions",
          "type": {
            "primitive": "boolean"
          },
          "immutable": true,
          "protected": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "Returns a RuleTarget that can be used to trigger this Lambda as a\nresult from a CloudWatch event."
          },
          "name": "eventRuleTarget",
          "type": {
            "fqn": "jsii$_aws_cdk_events$.EventRuleTarget"
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "docs": {
                "param": "parent The parent construct",
                "comment": "The parent construct"
              },
              "name": "parent",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "docs": {
                "param": "name The name of the lambda construct",
                "comment": "The name of the lambda construct"
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "ref A reference to a Lambda function. Can be created manually (see\nexample above) or obtained through a call to `lambda.export()`.",
                "comment": "A reference to a Lambda function. Can be created manually (see\nexample above) or obtained through a call to `lambda.export()`."
              },
              "name": "ref",
              "type": {
                "fqn": "jsii$_aws_cdk_lambda$.LambdaRefProps"
              }
            }
          ],
          "docs": {
            "comment": "Creates a Lambda function object which represents a function not defined\nwithin this stack.\n\n      Lambda.import(this, 'MyImportedFunction', { lambdaArn: new LambdaArn('arn:aws:...') });"
          },
          "name": "import",
          "static": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_lambda$.LambdaRef"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "name A name for the permission construct",
                "comment": "A name for the permission construct"
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "permission",
              "type": {
                "fqn": "jsii$_aws_cdk_lambda$.LambdaPermission"
              }
            }
          ],
          "docs": {
            "comment": "Adds a permission to the Lambda resource policy."
          },
          "name": "addPermission"
        },
        {
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              }
            }
          ],
          "name": "addToRolePolicy"
        }
      ],
      "interfaces": [
        {
          "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget"
        }
      ],
      "fqn": "jsii$_aws_cdk_lambda$.LambdaRef",
      "module": "jsii$_aws_cdk_lambda$",
      "namespace": "jsii$_aws_cdk_lambda$",
      "name": "LambdaRef",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "abstract": true,
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_core$.Token": {
      "docs": {
        "comment": "Represents a lazy-evaluated value. Can be used to delay evaluation of a certain value\nin case, for example, that it requires some context or late-bound data."
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "returns": "The resolved value for this token."
          },
          "name": "resolve",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.Token",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "Token",
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_core$.Arn": {
      "docs": {
        "comment": "An Amazon Resource Name (ARN).\nhttp://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"
      },
      "kind": "class",
      "methods": [
        {
          "parameters": [
            {
              "name": "components",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.ArnComponents"
              }
            }
          ],
          "docs": {
            "comment": "Creates an ARN from components.\nIf any component is the empty string,\nan empty string will be inserted into the generated ARN\nat the location that component corresponds to."
          },
          "name": "fromComponents",
          "static": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Arn"
          }
        },
        {
          "parameters": [
            {
              "name": "arn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "an ArnComponents object which allows access to the various\ncomponents of the ARN.",
            "comment": "Given an ARN, parses it and returns components.\n\nThe ARN it will be parsed and validated. The separator (`sep`) will be\nset to '/' if the 6th component includes a '/', in which case, `resource`\nwill be set to the value before the '/' and `resourceName` will be the\nrest. In case there is no '/', `resource` will be set to the 6th\ncomponents and `resourceName` will be set to the rest of the string."
          },
          "name": "parse",
          "static": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.ArnComponents"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.Arn",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "Arn",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_iam$.Role": {
      "docs": {
        "comment": "IAM Role\n\nDefines an IAM role. The role is created with an assume policy document associated with\nthe specified AWS service principal defined in `serviceAssumeRole`."
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The assume role policy document associated with this role."
          },
          "name": "assumeRolePolicy",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.PolicyDocument",
            "optional": true
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Returns the ARN of this role."
          },
          "name": "roleArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.iam.RoleArn"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Returns the name of the role."
          },
          "name": "roleName",
          "type": {
            "fqn": "jsii$_aws_cdk_iam$.RoleName"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Returns the ARN of this role."
          },
          "name": "principal",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.PolicyPrincipal"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Returns the role."
          },
          "name": "dependencyElements",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.IDependable"
              },
              "kind": "array"
            }
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              }
            }
          ],
          "docs": {
            "comment": "Adds a permission to the role's default policy document.\nIf there is no default policy attached to this role, it will be created."
          },
          "name": "addToPolicy"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "arn The ARN of the managed policy to attach.",
                "comment": "The ARN of the managed policy to attach."
              },
              "name": "arn",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "Attaches a managed policy to this role."
          },
          "name": "attachManagedPolicy"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "policy The policy to attach",
                "comment": "The policy to attach"
              },
              "name": "policy",
              "type": {
                "fqn": "jsii$_aws_cdk_iam$.Policy"
              }
            }
          ],
          "docs": {
            "comment": "Attaches a policy to this role."
          },
          "name": "attachInlinePolicy"
        }
      ],
      "interfaces": [
        {
          "fqn": "jsii$_aws_cdk_iam$.IIdentityResource"
        },
        {
          "fqn": "jsii$_aws_cdk_core$.IDependable"
        }
      ],
      "fqn": "jsii$_aws_cdk_iam$.Role",
      "module": "jsii$_aws_cdk_iam$",
      "namespace": "jsii$_aws_cdk_iam$",
      "name": "Role",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_iam$.RoleProps"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_core$.PolicyStatement": {
      "docs": {
        "comment": "Represents a statement in an IAM policy document."
      },
      "subtypes": [
        "jsii$_aws_cdk_core$.PolicyStatement.Effect"
      ],
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "Indicates if this permission has a \"Principal\" section."
          },
          "name": "hasPrincipal",
          "type": {
            "primitive": "boolean"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Indicates if this permission as at least one resource associated with it."
          },
          "name": "hasResource",
          "type": {
            "primitive": "boolean"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Indicates if this permission has only a ``\"*\"`` resource associated with it."
          },
          "name": "isOnlyStarResource",
          "type": {
            "primitive": "boolean"
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "name": "action",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "name": "addAction",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "actions",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "name": "addActions",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          },
          "variadic": true
        },
        {
          "parameters": [
            {
              "name": "principal",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyPrincipal"
              }
            }
          ],
          "name": "addPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "arn",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "addAwsPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "accountId",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "addAwsAccountPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "service",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "addServicePrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "federated",
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "conditions",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "name": "addFederatedPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "name": "addAccountRootPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "resource",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "addResource",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Adds a ``\"*\"`` resource to this statement."
          },
          "name": "addAllResources",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "resources",
              "type": {
                "primitive": "any"
              },
              "variadic": true
            }
          ],
          "name": "addResources",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          },
          "variadic": true
        },
        {
          "parameters": [
            {
              "name": "sid",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "describe",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Sets the permission effect to deny access to resources."
          },
          "name": "allow",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Sets the permission effect to allow access to resources."
          },
          "name": "deny",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "Add a condition to the Policy"
          },
          "name": "addCondition",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "conditions",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "docs": {
            "comment": "Add multiple conditions to the Policy"
          },
          "name": "addConditions",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "deprecated": "For backwards compatibility. Use addCondition() instead.",
            "comment": "Add a condition to the Policy."
          },
          "name": "setCondition",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "accountId",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "limitToAccount",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "name": "resolve",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "name": "toJson",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.PolicyStatement",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "PolicyStatement",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "effect",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.PolicyStatement.Effect",
              "optional": true
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_events$.EventRuleTarget": {
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "A unique, user-defined identifier for the target. Acceptable values\ninclude alphanumeric characters, periods (.), hyphens (-), and\nunderscores (_)."
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The Amazon Resource Name (ARN) of the target."
          },
          "name": "arn",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.Arn"
          }
        },
        {
          "docs": {
            "comment": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management\n(IAM) role to use for this target when the rule is triggered. If one rule\ntriggers multiple targets, you can use a different IAM role for each\ntarget."
          },
          "name": "roleArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.iam.RoleArn",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The Amazon ECS task definition and task count to use, if the event target\nis an Amazon ECS task."
          },
          "name": "ecsParameters",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.events.RuleResource.EcsParametersProperty",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Settings that control shard assignment, when the target is a Kinesis\nstream. If you don't include this parameter, eventId is used as the\npartition key."
          },
          "name": "kinesisParameters",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.events.RuleResource.KinesisParametersProperty",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Parameters used when the rule invokes Amazon EC2 Systems Manager Run\nCommand."
          },
          "name": "runCommandParameters",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.events.RuleResource.RunCommandParametersProperty",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_events$.EventRuleTarget",
      "module": "jsii$_aws_cdk_events$",
      "namespace": "jsii$_aws_cdk_events$",
      "name": "EventRuleTarget",
      "datatype": true
    },
    "jsii$_aws_cdk_resources$.codepipeline.PipelineResource.StageDeclarationProperty": {
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages.html"
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages.html#cfn-codepipeline-pipeline-stages-actions",
            "comment": "PipelineResource.StageDeclarationProperty.Actions"
          },
          "name": "actions",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "jsii$_aws_cdk_core$.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "jsii$_aws_cdk_core$.Token"
                          },
                          {
                            "fqn": "jsii$_aws_cdk_resources$.codepipeline.PipelineResource.ActionDeclarationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages.html#cfn-codepipeline-pipeline-stages-blockers",
            "comment": "PipelineResource.StageDeclarationProperty.Blockers"
          },
          "name": "blockers",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "jsii$_aws_cdk_core$.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "jsii$_aws_cdk_core$.Token"
                          },
                          {
                            "fqn": "jsii$_aws_cdk_resources$.codepipeline.PipelineResource.BlockerDeclarationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            },
            "optional": true
          }
        },
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages.html#cfn-codepipeline-pipeline-stages-name",
            "comment": "PipelineResource.StageDeclarationProperty.Name"
          },
          "name": "name",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "jsii$_aws_cdk_core$.Token"
                }
              ]
            }
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_resources$.codepipeline.PipelineResource.StageDeclarationProperty",
      "module": "jsii$_aws_cdk_resources$",
      "namespace": "jsii$_aws_cdk_resources$.codepipeline.PipelineResource",
      "name": "StageDeclarationProperty",
      "datatype": true,
      "parenttype": "jsii$_aws_cdk_resources$.codepipeline.PipelineResource"
    }
  },
  "name": "jsii$_aws_cdk_codepipeline$",
  "package": "@aws-cdk/codepipeline",
  "version": "0.7.2-beta",
  "dependencies": {
    "jsii$_aws_cdk_codebuild$": {
      "package": "@aws-cdk/codebuild",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_codecommit$": {
      "package": "@aws-cdk/codecommit",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_core$": {
      "package": "@aws-cdk/core",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_events$": {
      "package": "@aws-cdk/events",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_iam$": {
      "package": "@aws-cdk/iam",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_lambda$": {
      "package": "@aws-cdk/lambda",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_resources$": {
      "package": "@aws-cdk/resources",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_s3$": {
      "package": "@aws-cdk/s3",
      "version": "0.7.2-beta"
    }
  },
  "bundled": {
    "@aws-cdk/util": "^0.7.2-beta"
  },
  "names": {
    "java": "com.amazonaws.cdk.codepipeline",
    "dotnet": "Aws.Cdk.CodePipeline",
    "js": "@aws-cdk/codepipeline"
  },
  "nativenames": {
    "jsii$_aws_cdk_codebuild$": {
      "java": "com.amazonaws.cdk.codebuild",
      "dotnet": "Aws.Cdk.CodeBuild",
      "js": "@aws-cdk/codebuild"
    },
    "jsii$_aws_cdk_codecommit$": {
      "java": "com.amazonaws.cdk.codecommit",
      "dotnet": "Aws.Cdk.CodeCommit",
      "js": "@aws-cdk/codecommit"
    },
    "jsii$_aws_cdk_core$": {
      "java": "com.amazonaws.cdk",
      "dotnet": "Aws.Cdk",
      "js": "@aws-cdk/core"
    },
    "jsii$_aws_cdk_events$": {
      "java": "com.amazonaws.cdk.events",
      "dotnet": "Aws.Cdk.Events",
      "js": "@aws-cdk/events"
    },
    "jsii$_aws_cdk_iam$": {
      "java": "com.amazonaws.cdk.iam",
      "dotnet": "Aws.Cdk.Iam",
      "js": "@aws-cdk/iam"
    },
    "jsii$_aws_cdk_lambda$": {
      "java": "com.amazonaws.cdk.lambda",
      "dotnet": "Aws.Cdk.Lambda",
      "js": "@aws-cdk/lambda"
    },
    "jsii$_aws_cdk_resources$": {
      "java": "com.amazonaws.cdk.resources",
      "dotnet": "Aws.Cdk.Resources",
      "js": "@aws-cdk/resources"
    },
    "jsii$_aws_cdk_s3$": {
      "java": "com.amazonaws.cdk.s3",
      "dotnet": "Aws.Cdk.S3",
      "js": "@aws-cdk/s3"
    },
    "jsii$_aws_cdk_codepipeline$": {
      "java": "com.amazonaws.cdk.codepipeline",
      "dotnet": "Aws.Cdk.CodePipeline",
      "js": "@aws-cdk/codepipeline"
    }
  },
  "readme": {
    "markdown": "## AWS CodePipeline construct library\n\nConstruct an empty pipeline:\n\n```ts\nconst pipeline = new Pipeline(this, 'MyFirstPipeline');\n```\n\nAll of the components of a pipeline are modeled as constructs.\n\nAppend a stage to the pipeline:\n\n```ts\nconst sourceStage = new Stage(pipeline, 'Source');\n```\n\nAdd an action to a stage:\n\n```ts\nnew CodeCommitSource(sourceStage, 'source', {\n    artifactName: 'MyPackageSourceArtifact',\n    repository: 'MyPackage'\n})\n```\n\n### Events\n\n#### Using a pipeline as an event target\n\nA pipeline can be used as a target for a CloudWatch event rule:\n\n```ts\n// kick off the pipeline every day\nconst rule = new EventRule(this, 'Daily', { scheduleExpression: 'rate(1 day)' });\nrule.addTarget(pipeline);\n```\n\nWhen a pipeline is used as an event target, the\n\"codepipeline:StartPipelineExecution\" permission is granted to the AWS\nCloudWatch Events service.\n\n#### Event sources\n\nPipelines emit CloudWatch events. To define event rules for events emitted by\nthe pipeline, stages or action, use the `onXxx` methods on the respective\nconstruct:\n\n```ts\nmyPipeline.onStateChange('MyPipelineStateChage', target);\nmyStage.onStateChange('MyStageStateChange', target);\nmyAction.onStateChange('MyActioStateChange', target);\n```\n"
  },
  "code": "var jsii$_aws_cdk_codepipeline$ =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 8);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_core$;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst actions_1 = __webpack_require__(2);\n/**\n * Validation function that checks if the number of artifacts is within the given bounds\n */\nfunction validateArtifactBounds(type, artifacts, min, max, category, provider) {\n    const ret = [];\n    if (artifacts.length < min) {\n        ret.push(`${category}/${provider} must have at least ${min} ${type} artifacts`);\n    }\n    if (artifacts.length > max) {\n        ret.push(`${category}/${provider} cannot have more than ${max} ${type} artifacts`);\n    }\n    return ret;\n}\nexports.validateArtifactBounds = validateArtifactBounds;\n/**\n * Validation function that guarantees that an action is or is not a source action. This is useful because Source actions can only be\n * in the first stage of a pipeline, and the first stage can only contain source actions.\n */\nfunction validateSourceAction(mustBeSource, category, actionName, stageName) {\n    if (mustBeSource !== (category === actions_1.ActionCategory.Source)) {\n        return [`Action ${actionName} in stage ${stageName}: ` + (mustBeSource ? 'first stage may only contain Source actions'\n                : 'Source actions may only occur in first stage')];\n    }\n    return [];\n}\nexports.validateSourceAction = validateSourceAction;\n/**\n * Regex to validate Pipeline, Stage, Action names\n *\n * https://docs.aws.amazon.com/codepipeline/latest/userguide/limits.html\n */\nconst VALID_IDENTIFIER_REGEX = /^[a-zA-Z0-9.@_-]{1,100}$/;\n/**\n * Validate the given name of a pipeline component. Pipeline component names all have the same restrictions.\n * This can be used to validate the name of all components of a pipeline.\n */\nfunction validateName(thing, name) {\n    if (name !== undefined && !VALID_IDENTIFIER_REGEX.test(name)) {\n        throw new Error(`${thing} name must match regular expression: ${VALID_IDENTIFIER_REGEX.toString()}, got '${name}'`);\n    }\n}\nexports.validateName = validateName;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(0);\nconst events_1 = __webpack_require__(3);\nconst artifact_1 = __webpack_require__(4);\nconst validation = __webpack_require__(1);\nconst validation_1 = __webpack_require__(1);\nvar ActionCategory;\n(function (ActionCategory) {\n    ActionCategory[\"Source\"] = \"Source\";\n    ActionCategory[\"Build\"] = \"Build\";\n    ActionCategory[\"Test\"] = \"Test\";\n    ActionCategory[\"Approval\"] = \"Approval\";\n    ActionCategory[\"Deploy\"] = \"Deploy\";\n    ActionCategory[\"Invoke\"] = \"Invoke\";\n})(ActionCategory = exports.ActionCategory || (exports.ActionCategory = {}));\nfunction defaultBounds() {\n    return {\n        minInputs: 0,\n        maxInputs: 5,\n        minOutputs: 0,\n        maxOutputs: 5\n    };\n}\n/**\n * Low level class for generically creating pipeline actions.\n * It is recommended that concrete types are used instead, such as {@link CodeCommitSource} or\n * {@link CodeBuildAction}.\n */\nclass Action extends core_1.Construct {\n    constructor(parent, name, props) {\n        super(parent, name);\n        this.inputArtifacts = new Array();\n        this.outputArtifacts = new Array();\n        validation.validateName('Action', name);\n        this.owner = props.owner || 'AWS';\n        this.version = props.version || '1';\n        this.category = props.category;\n        this.provider = props.provider;\n        this.configuration = props.configuration;\n        this.artifactBounds = props.artifactBounds;\n        this.runOrder = 1;\n        this.stage = parent;\n    }\n    validate() {\n        return validation_1.validateArtifactBounds('input', this.inputArtifacts, this.artifactBounds.minInputs, this.artifactBounds.maxInputs, this.category, this.provider).concat(validation_1.validateArtifactBounds('output', this.outputArtifacts, this.artifactBounds.minOutputs, this.artifactBounds.maxOutputs, this.category, this.provider));\n    }\n    /**\n     * Render the Action to a CloudFormation struct\n     */\n    render() {\n        return {\n            name: this.name,\n            inputArtifacts: this.inputArtifacts.map(a => ({ name: a.name })),\n            actionTypeId: {\n                category: this.category.toString(),\n                version: this.version,\n                owner: this.owner,\n                provider: this.provider,\n            },\n            configuration: this.configuration,\n            outputArtifacts: this.outputArtifacts.map(a => ({ name: a.name })),\n            runOrder: this.runOrder\n        };\n    }\n    onStateChange(name, target, options) {\n        const rule = new events_1.EventRule(this.stage.pipeline, name, options);\n        rule.addTarget(target);\n        rule.addEventPattern({\n            detailType: ['CodePipeline Stage Execution State Change'],\n            source: ['aws.codepipeline'],\n            resources: [this.stage.pipeline.pipelineArn],\n            detail: {\n                stage: [this.stage.name],\n                action: [this.name],\n            },\n        });\n        return rule;\n    }\n    /**\n     * If an Artifact is added as a child, add it to the list of output artifacts.\n     */\n    addChild(child, name) {\n        super.addChild(child, name);\n        if (child instanceof artifact_1.Artifact) {\n            this.outputArtifacts.push(child);\n        }\n    }\n    addOutputArtifact(name) {\n        const artifact = new artifact_1.Artifact(this, name);\n        return artifact;\n    }\n    addInputArtifact(artifact) {\n        this.inputArtifacts.push(artifact);\n        return this;\n    }\n}\nexports.Action = Action;\n/**\n * Low level class for source actions.\n * It is recommended that concrete types are used instead, such as {@link AmazonS3Source} or\n * {@link CodeCommitSource}.\n */\nclass Source extends Action {\n    constructor(parent, name, props) {\n        super(parent, name, {\n            category: ActionCategory.Source,\n            owner: props.owner,\n            provider: props.provider,\n            version: props.version,\n            artifactBounds: { minInputs: 0, maxInputs: 0, minOutputs: 1, maxOutputs: 1 },\n            configuration: props.configuration\n        });\n        this.artifact = this.addOutputArtifact(props.artifactName);\n    }\n}\nexports.Source = Source;\n/**\n * Source that is provided by a specific Amazon S3 object\n */\nclass AmazonS3Source extends Source {\n    constructor(parent, name, props) {\n        super(parent, name, {\n            provider: 'S3',\n            configuration: {\n                S3Bucket: props.bucket.bucketName,\n                S3ObjectKey: props.bucketKey,\n                PollForSourceChanges: props.pollForSourceChanges || true\n            },\n            artifactName: props.artifactName\n        });\n        // pipeline needs permissions to read from the S3 bucket\n        props.bucket.grantRead(parent.pipeline.role);\n    }\n}\nexports.AmazonS3Source = AmazonS3Source;\n/**\n * Source that is provided by an AWS CodeCommit repository\n */\nclass CodeCommitSource extends Source {\n    constructor(parent, name, props) {\n        super(parent, name, {\n            provider: 'CodeCommit',\n            configuration: {\n                RepositoryName: props.repository.repositoryName,\n                BranchName: props.branch || 'master',\n                PollForSourceChanges: props.pollForSourceChanges || true\n            },\n            artifactName: props.artifactName\n        });\n        // https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-permissions-reference.html#aa-acp\n        const actions = [\n            'codecommit:GetBranch',\n            'codecommit:GetCommit',\n            'codecommit:UploadArchive',\n            'codecommit:GetUploadArchiveStatus',\n            'codecommit:CancelUploadArchive',\n        ];\n        parent.pipeline.addToRolePolicy(new core_1.PolicyStatement()\n            .addResource(props.repository.repositoryArn)\n            .addActions(...actions));\n    }\n}\nexports.CodeCommitSource = CodeCommitSource;\n/**\n * Source that is provided by a GitHub repository\n */\nclass GitHubSource extends Source {\n    constructor(parent, name, props) {\n        super(parent, name, {\n            owner: 'ThirdParty',\n            provider: 'GitHub',\n            configuration: {\n                Owner: props.owner,\n                Repo: props.repo,\n                Branch: props.branch || \"master\",\n                OAuthToken: props.oauthToken,\n                PollForSourceChanges: props.pollForSourceChanges || true\n            },\n            artifactName: props.artifactName\n        });\n    }\n}\nexports.GitHubSource = GitHubSource;\n/**\n * Low level class for build actions.\n * It is recommended that concrete types are used instead, such as {@link CodeBuildAction}.\n */\nclass BuildAction extends Action {\n    constructor(parent, name, props) {\n        super(parent, name, {\n            artifactBounds: { minInputs: 1, maxInputs: 1, minOutputs: 0, maxOutputs: 1 },\n            category: ActionCategory.Build,\n            provider: props.provider,\n            configuration: props.configuration\n        });\n        this.addInputArtifact(props.inputArtifact);\n        if (props.artifactName) {\n            this.artifact = this.addOutputArtifact(props.artifactName);\n        }\n    }\n}\nexports.BuildAction = BuildAction;\n/**\n * Build action that uses AWS CodeBuild\n */\nclass CodeBuildAction extends BuildAction {\n    constructor(parent, name, props) {\n        // This happened when ProjectName was accidentally set to the project's ARN:\n        // https://qiita.com/ikeisuke/items/2fbc0b80b9bbd981b41f\n        super(parent, name, {\n            provider: 'CodeBuild',\n            inputArtifact: props.inputArtifact,\n            artifactName: props.artifactName,\n            configuration: {\n                ProjectName: props.project.projectName\n            }\n        });\n        const actions = [\n            'codebuild:BatchGetBuilds',\n            'codebuild:StartBuild',\n            'codebuild:StopBuild',\n        ];\n        parent.pipeline.addToRolePolicy(new core_1.PolicyStatement()\n            .addResource(props.project.projectArn)\n            .addActions(...actions));\n        // allow codebuild to read and write artifacts to the pipline's artifact bucket.\n        parent.pipeline.artifactBucket.grantReadWrite(props.project.role);\n        // policy must be added as a dependency to the pipeline!!\n        // TODO: grants - build.addResourcePermission() and also make sure permission\n        // includes the pipeline role AWS principal.\n    }\n}\nexports.CodeBuildAction = CodeBuildAction;\n/**\n * Manual approval action\n */\nclass ApprovalAction extends Action {\n    constructor(parent, name) {\n        super(parent, name, {\n            category: ActionCategory.Approval,\n            provider: 'Manual',\n            artifactBounds: { minInputs: 0, maxInputs: 0, minOutputs: 0, maxOutputs: 0 }\n        });\n    }\n}\nexports.ApprovalAction = ApprovalAction;\n/**\n * @link https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-invoke-lambda-function.html\n */\nclass InvokeLambdaAction extends Action {\n    constructor(parent, name, props) {\n        super(parent, name, {\n            category: ActionCategory.Invoke,\n            provider: 'Lambda',\n            artifactBounds: defaultBounds(),\n            configuration: {\n                FunctionName: props.lambda.functionName,\n                UserParameters: props.userParameters\n            }\n        });\n        // allow pipeline to list functions\n        parent.pipeline.addToRolePolicy(new core_1.PolicyStatement()\n            .addAction('lambda:ListFunctions')\n            .addResource('*'));\n        // allow pipeline to invoke this lambda functionn\n        parent.pipeline.addToRolePolicy(new core_1.PolicyStatement()\n            .addAction('lambda:InvokeFunction')\n            .addResource(props.lambda.functionArn));\n        // allow lambda to put job results for this pipeline.\n        const addToPolicy = props.addPutJobResultPolicy !== undefined ? props.addPutJobResultPolicy : true;\n        if (addToPolicy) {\n            props.lambda.addToRolePolicy(new core_1.PolicyStatement()\n                .addResource('*') // to avoid cycles (see docs)\n                .addAction('codepipeline:PutJobSuccessResult')\n                .addAction('codepipeline:PutJobFailureResult'));\n        }\n    }\n    /**\n     * Add an input artifact\n     * @param artifact\n     */\n    addInputArtifact(artifact) {\n        super.addInputArtifact(artifact);\n        return this;\n    }\n}\nexports.InvokeLambdaAction = InvokeLambdaAction;\n// export class TestAction extends Action {\n//     constructor(parent: Stage, name: string, provider: string, artifactBounds: ActionArtifactBounds, configuration?: any) {\n//         super(parent, name, {\n//           category: ActionCategory.Test,\n//           provider,\n//           artifactBounds,\n//           configuration\n//         });\n//     }\n// }\n// export class CodeBuildTest extends TestAction {\n//     constructor(parent: Stage, name: string, project: codebuild.ProjectArnAttribute) {\n//         super(parent, name, 'CodeBuild', { minInputs: 1, maxInputs: 1, minOutputs: 0, maxOutputs: 1 }, {\n//             ProjectName: project\n//         });\n//     }\n// }\n// export class DeployAction extends Action {\n//     constructor(parent: Stage, name: string, provider: string, artifactBounds: ActionArtifactBounds, configuration?: any) {\n//         super(parent, name, {\n//           category: ActionCategory.Deploy,\n//           provider,\n//           artifactBounds,\n//           configuration\n//         });\n//     }\n// }\n// export class CodeDeploy extends DeployAction {\n//     constructor(parent: Stage, name: string, applicationName: string, deploymentGroupName: string) {\n//         super(parent, name, 'CodeDeploy', { minInputs: 1, maxInputs: 1, minOutputs: 0, maxOutputs: 0 }, {\n//             ApplicationName: applicationName,\n//             DeploymentGroupName: deploymentGroupName\n//         });\n//     }\n// }\n// export class ElasticBeanstalkDeploy extends DeployAction {\n//     constructor(parent: Stage, name: string, applicationName: string, environmentName: string) {\n//         super(parent, name, 'ElasticBeanstalk', { minInputs: 1, maxInputs: 1, minOutputs: 0, maxOutputs: 0 }, {\n//             ApplicationName: applicationName,\n//             EnvironmentName: environmentName\n//         });\n//     }\n// }\n// export class OpsWorksDeploy extends DeployAction {\n//     constructor(parent: Stage, name: string, app: string, stack: string, layer?: string) {\n//         super(parent, name, 'OpsWorks', { minInputs: 1, maxInputs: 1, minOutputs: 0, maxOutputs: 0 }, {\n//             Stack: stack,\n//             App: app,\n//             Layer: layer,\n//         });\n//     }\n// }\n// export class ECSDeploy extends DeployAction {\n//     constructor(parent: Stage, name: string, clusterName: string, serviceName: string, fileName?: string) {\n//         super(parent, name, 'ECS', { minInputs: 1, maxInputs: 1, minOutputs: 0, maxOutputs: 0 }, {\n//             ClusterName: clusterName,\n//             ServiceName: serviceName,\n//             FileName: fileName,\n//         });\n//     }\n// }\n/*\n  TODO: A Jenkins build needs a corresponding custom action for each \"Jenkins provider\".\n        This should be created automatically.\n\n  Example custom action created to execute Jenkins:\n  {\n    \"id\": {\n        \"category\": \"Test\",\n        \"provider\": \"<provider name>\",\n        \"owner\": \"Custom\",\n        \"version\": \"1\"\n    },\n    \"outputArtifactDetails\": {\n        \"minimumCount\": 0,\n        \"maximumCount\": 5\n    },\n    \"settings\": {\n        \"executionUrlTemplate\": \"https://www.google.com/job/{Config:ProjectName}/{ExternalExecutionId}\",\n        \"entityUrlTemplate\": \"https://www.google.com/job/{Config:ProjectName}\"\n    },\n    \"actionConfigurationProperties\": [\n        {\n            \"queryable\": true,\n            \"key\": true,\n            \"name\": \"ProjectName\",\n            \"required\": true,\n            \"secret\": false\n        }\n    ],\n    \"inputArtifactDetails\": {\n        \"minimumCount\": 0,\n        \"maximumCount\": 5\n    }\n  }\n*/\n// export class JenkinsBuild extends BuildAction {\n//     constructor(parent: Stage, name: string, jenkinsProvider: string, project: string) {\n//         super(parent, name, jenkinsProvider, DefaultBounds(), {\n//             ProjectName: project\n//         });\n//     }\n// }\n// export class JenkinsTest extends TestAction {\n//     constructor(parent: Stage, name: string, jenkinsProvider: string, project: string) {\n//         super(parent, name, jenkinsProvider, DefaultBounds(), {\n//             ProjectName: project\n//         });\n//     }\n// }\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_events$;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(0);\n/**\n * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline-parameter-override-functions.html\n */\nclass ArtifactAttribute extends core_1.Token {\n    constructor(artifact, attributeName) {\n        super(() => ({ 'Fn::GetArtifactAtt': [artifact.name, attributeName] }));\n    }\n}\nexports.ArtifactAttribute = ArtifactAttribute;\n/**\n * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline-parameter-override-functions.html\n */\nclass ArtifactGetParam extends core_1.Token {\n    constructor(artifact, jsonFile, keyName) {\n        super(() => ({ 'Fn::GetParam': [artifact.name, jsonFile, keyName] }));\n    }\n}\nexports.ArtifactGetParam = ArtifactGetParam;\n/**\n * An output artifact of an action. Artifacts can be used as input by some actions.\n */\nclass Artifact extends core_1.Construct {\n    constructor(parent, name) {\n        super(parent, name);\n        this.name = name;\n    }\n    /**\n     * Returns an ArtifactPath for a file within this artifact.\n     * Output is in the form \"<artifact-name>::<file-name>\"\n     * @param fileName The name of the file\n     */\n    subartifact(fileName) {\n        return new ArtifactPath(this, fileName);\n    }\n    /**\n     * The artifact attribute for the name of the S3 bucket where the artifact is stored.\n     */\n    get bucketName() {\n        return new ArtifactAttribute(this, 'BucketName');\n    }\n    /**\n     * The artifact attribute for The name of the .zip file that contains the artifact that is\n     * generated by AWS CodePipeline, such as 1ABCyZZ.zip.\n     */\n    get objectKey() {\n        return new ArtifactAttribute(this, 'ObjectKey');\n    }\n    /**\n     * The artifact attribute of the Amazon Simple Storage Service (Amazon S3) URL of the artifact,\n     * such as https://s3-us-west-2.amazonaws.com/artifactstorebucket-yivczw8jma0c/test/TemplateSo/1ABCyZZ.zip.\n     */\n    get url() {\n        return new ArtifactAttribute(this, 'URL');\n    }\n    /**\n     * Returns a token for a value inside a JSON file within this artifact.\n     * @param jsonFile The JSON file name.\n     * @param keyName The hash key.\n     */\n    getParam(jsonFile, keyName) {\n        return new ArtifactGetParam(this, jsonFile, keyName);\n    }\n    toString() {\n        return this.name;\n    }\n}\nexports.Artifact = Artifact;\n/**\n * A specific file within an output artifact.\n *\n * The most common use case for this is specifying the template file\n * for a CloudFormation action.\n */\nclass ArtifactPath {\n    constructor(artifact, fileName) {\n        this.artifact = artifact;\n        this.fileName = fileName;\n    }\n    get location() {\n        return `${this.artifact.name}::${this.fileName}`;\n    }\n}\nexports.ArtifactPath = ArtifactPath;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_iam$;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Return whether the given value is an object\n *\n * Even though arrays technically are objects, we usually want to treat them differently,\n * so we return false in those cases.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === 'object' && !exports.isArray(x);\n}\nexports.isObject = isObject;\n/**\n * Return whether the given value is an array\n */\nexports.isArray = Array.isArray;\n/**\n * Return the value of the first argument if it's not undefined, otherwise the default\n */\nfunction ifDefined(x, def) {\n    return typeof x !== 'undefined' ? x : def;\n}\nexports.ifDefined = ifDefined;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(0);\nconst events_1 = __webpack_require__(3);\nconst actions_1 = __webpack_require__(2);\nconst validation = __webpack_require__(1);\n/**\n * A stage in a pipeline. Stages are added to a pipeline by constructing a Stage with\n * the pipeline as the first argument to the constructor.\n *\n * @example\n * // add a stage to a pipeline\n * new Stage(pipeline, 'MyStage');\n */\nclass Stage extends core_1.Construct {\n    /**\n     * Append a new stage to the pipeline\n     *\n     * Only a Pipeline can be passed in as a parent because stages should\n     * always be attached to a pipeline. It's illogical to construct a Stage\n     * with any other parent.\n     */\n    constructor(parent, name) {\n        super(parent, name);\n        this._actions = new Array();\n        this.pipeline = parent;\n        validation.validateName('Stage', name);\n    }\n    /**\n     * Get a duplicate of this stage's list of actions.\n     */\n    get actions() {\n        return this._actions.slice();\n    }\n    validate() {\n        return this.validateHasActions();\n    }\n    render() {\n        return {\n            name: this.name,\n            actions: this._actions.map(action => action.render())\n        };\n    }\n    onStateChange(name, target, options) {\n        const rule = new events_1.EventRule(this.pipeline, name, options);\n        rule.addTarget(target);\n        rule.addEventPattern({\n            detailType: ['CodePipeline Stage Execution State Change'],\n            source: ['aws.codepipeline'],\n            resources: [this.pipeline.pipelineArn],\n            detail: {\n                stage: [this.name],\n            },\n        });\n        return rule;\n    }\n    /**\n     * If an action is added as a child, add it to the list of actions.\n     * TODO: This is a hack that should be removed once the CDK has an\n     *       onChildAdded type hook.\n     * @override\n     * @param child\n     * @param name\n     */\n    addChild(child, name) {\n        super.addChild(child, name);\n        if (child instanceof actions_1.Action) {\n            this._actions.push(child);\n        }\n        else {\n            throw new Error('Only Actions can be added as children to a Stage');\n        }\n    }\n    validateHasActions() {\n        if (this._actions.length === 0) {\n            return [`Stage '${this.name}' must have at least one action`];\n        }\n        return [];\n    }\n}\nexports.Stage = Stage;\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(2));\n__export(__webpack_require__(4));\n__export(__webpack_require__(9));\n__export(__webpack_require__(7));\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(0);\nconst events_1 = __webpack_require__(3);\nconst iam = __webpack_require__(5);\nconst iam_1 = __webpack_require__(5);\nconst resources_1 = __webpack_require__(10);\nconst s3_1 = __webpack_require__(11);\nconst util_1 = __webpack_require__(12);\nconst stage_1 = __webpack_require__(7);\nconst validation = __webpack_require__(1);\n/**\n * The ARN of a pipeline\n */\nclass PipelineArn extends core_1.Arn {\n}\nexports.PipelineArn = PipelineArn;\n/**\n * An AWS CodePipeline pipeline with its associated IAM role and S3 bucket.\n *\n * @example\n * // create a pipeline\n * const pipeline = new Pipeline(this, 'Pipeline');\n *\n * // add a stage\n * const sourceStage = new Stage(pipeline, 'Source');\n *\n * // add a source action to the stage\n * new CodeCommitSource(sourceStage, 'Source', {\n *     artifactName: 'SourceArtifact',\n *     repository: repo\n * });\n *\n * // ... add more stages\n */\nclass Pipeline extends core_1.Construct {\n    constructor(parent, name, props) {\n        super(parent, name);\n        this.stages = new Array();\n        props = props || {};\n        validation.validateName('Pipeline', props.pipelineName);\n        // If a bucket has been provided, use it - otherwise, create a bucket.\n        let propsBucket = props.artifactBucket;\n        if (!propsBucket) {\n            propsBucket = new s3_1.Bucket(this, 'ArtifactsBucket', {\n                removalPolicy: core_1.RemovalPolicy.Orphan\n            });\n        }\n        this.artifactBucket = propsBucket;\n        this.role = new iam.Role(this, 'Role', {\n            assumedBy: new core_1.ServicePrincipal('codepipeline.amazonaws.com')\n        });\n        const codePipeline = new resources_1.codepipeline.PipelineResource(this, 'Resource', {\n            artifactStore: new core_1.Token(() => this.renderArtifactStore()),\n            stages: new core_1.Token(() => this.renderStages()),\n            roleArn: this.role.roleArn,\n            restartExecutionOnUpdate: props && props.restartExecutionOnUpdate,\n            pipelineName: props && props.pipelineName,\n        });\n        // this will produce a DependsOn for both the role and the policy resources.\n        codePipeline.addDependency(this.role);\n        this.artifactBucket.grantReadWrite(this.role);\n        // Does not expose a Fn::GetAtt for the ARN so we'll have to make it ourselves\n        this.pipelineArn = new PipelineArn(core_1.Arn.fromComponents({\n            service: 'codepipeline',\n            resource: codePipeline.ref\n        }));\n    }\n    /**\n     * Adds a statement to the pipeline role.\n     */\n    addToRolePolicy(statement) {\n        this.role.addToPolicy(statement);\n    }\n    /**\n     * Allows the pipeline to be used as a CloudWatch event rule target.\n     *\n     * Usage:\n     *\n     *      const pipeline = new Pipeline(this, 'MyPipeline');\n     *      const rule = new EventRule(this, 'MyRule', { schedule: 'rate(1 minute)' });\n     *      rule.addTarget(pipeline);\n     *\n     */\n    get eventRuleTarget() {\n        // the first time the event rule target is retrieved, we define an IAM\n        // role assumable by the CloudWatch events service which is allowed to\n        // start the execution of this pipeline. no need to define more than one\n        // role per pipeline.\n        if (!this.eventsRole) {\n            this.eventsRole = new iam_1.Role(this, 'EventsRole', {\n                assumedBy: new core_1.ServicePrincipal('events.amazonaws.com')\n            });\n            this.eventsRole.addToPolicy(new core_1.PolicyStatement()\n                .addResource(this.pipelineArn)\n                .addAction('codepipeline:StartPipelineExecution'));\n        }\n        return {\n            id: this.name,\n            arn: this.pipelineArn,\n            roleArn: this.eventsRole.roleArn,\n        };\n    }\n    /**\n     * Defines an event rule triggered by the \"CodePipeline Pipeline Execution\n     * State Change\" event emitted from this pipeline.\n     *\n     * @param target Initial target to add to the event rule. You can also add\n     * targets and customize target inputs by calling `rule.addTarget(target[,\n     * options])` after the rule was created.\n     *\n     * @param options Additional options to pass to the event rule\n     *\n     * @param name The name of the event rule construct. If you wish to define\n     * more than a single onStateChange event, you will need to explicitly\n     * specify a name.\n     */\n    onStateChange(name, target, options) {\n        const rule = new events_1.EventRule(this, name, options);\n        rule.addTarget(target);\n        rule.addEventPattern({\n            detailType: ['CodePipeline Pipeline Execution State Change'],\n            source: ['aws.codepipeline'],\n            resources: [this.pipelineArn],\n        });\n        return rule;\n    }\n    /**\n     * Validate the pipeline structure\n     *\n     * Validation happens according to the rules documented at\n     *\n     * https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#pipeline-requirements\n     * @override\n     */\n    validate() {\n        return util_1.flatten([\n            this.validateHasStages(),\n            this.validateSourceActionLocations()\n        ]);\n    }\n    /**\n     * If a stage is added as a child, add it to the list of stages.\n     * TODO: This is a hack that should be removed once the CDK has an\n     *       onChildAdded type hook.\n     * @override\n     */\n    addChild(child, name) {\n        super.addChild(child, name);\n        if (child instanceof stage_1.Stage) {\n            this.appendStage(child);\n        }\n    }\n    appendStage(stage) {\n        if (this.stages.find(x => x.name === stage.name)) {\n            throw new Error(`A stage with name '${stage.name}' already exists`);\n        }\n        this.stages.push(stage);\n    }\n    validateSourceActionLocations() {\n        return util_1.flatMap(this.stages, (stage, i) => {\n            const onlySourceActionsPermitted = i === 0;\n            return util_1.flatMap(stage.actions, (action, _) => validation.validateSourceAction(onlySourceActionsPermitted, action.category, action.name, stage.name));\n        });\n    }\n    validateHasStages() {\n        if (this.stages.length < 2) {\n            return ['Pipeline must have at least two stages'];\n        }\n        return [];\n    }\n    renderArtifactStore() {\n        let encryptionKey;\n        const bucketKey = this.artifactBucket.encryptionKey;\n        if (bucketKey) {\n            encryptionKey = {\n                type: 'KMS',\n                id: bucketKey.keyArn,\n            };\n        }\n        const bucketName = this.artifactBucket.bucketName;\n        if (!bucketName) {\n            throw new Error('Artifacts bucket must have a bucket name');\n        }\n        return {\n            type: 'S3',\n            location: bucketName,\n            encryptionKey\n        };\n    }\n    renderStages() {\n        return this.stages.map(stage => stage.render());\n    }\n}\nexports.Pipeline = Pipeline;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_resources$;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_s3$;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(13));\n__export(__webpack_require__(14));\n__export(__webpack_require__(6));\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Map a function over an array and concatenate the results\n */\nfunction flatMap(xs, fn) {\n    return flatten(xs.map(fn));\n}\nexports.flatMap = flatMap;\n/**\n * Flatten a list of lists into a list of elements\n */\nfunction flatten(xs) {\n    return Array.prototype.concat.apply([], xs);\n}\nexports.flatten = flatten;\n/**\n * Partition a collection by removing and returning all elements that match a predicate\n *\n * Note: the input collection is modified in-place!\n */\nfunction partition(collection, pred) {\n    const ret = [];\n    let i = 0;\n    while (i < collection.length) {\n        if (pred(collection[i])) {\n            ret.push(collection.splice(i, 1)[0]);\n        }\n        else {\n            i++;\n        }\n    }\n    return ret;\n}\nexports.partition = partition;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst types_1 = __webpack_require__(6);\n/**\n * Return a new object by adding missing keys into another object\n */\nfunction applyDefaults(hash, defaults) {\n    const result = {};\n    Object.keys(hash).forEach(k => result[k] = hash[k]);\n    Object.keys(defaults)\n        .filter(k => !(k in result))\n        .forEach(k => result[k] = defaults[k]);\n    return result;\n}\nexports.applyDefaults = applyDefaults;\n/**\n * Return whether the given parameter is an empty object or empty list.\n */\nfunction isEmpty(x) {\n    if (x == null) {\n        return false;\n    }\n    if (types_1.isArray(x)) {\n        return x.length === 0;\n    }\n    return Object.keys(x).length === 0;\n}\nexports.isEmpty = isEmpty;\n/**\n * Deep clone a tree of objects, lists or scalars\n *\n * Does not support cycles.\n */\nfunction deepClone(x) {\n    if (typeof x === 'undefined') {\n        return undefined;\n    }\n    if (x === null) {\n        return null;\n    }\n    if (types_1.isArray(x)) {\n        return x.map(deepClone);\n    }\n    if (types_1.isObject(x)) {\n        return makeObject(mapObject(x, (k, v) => [k, deepClone(v)]));\n    }\n    return x;\n}\nexports.deepClone = deepClone;\n/**\n * Map over an object, treating it as a dictionary\n */\nfunction mapObject(x, fn) {\n    const ret = [];\n    Object.keys(x).forEach(key => {\n        ret.push(fn(key, x[key]));\n    });\n    return ret;\n}\nexports.mapObject = mapObject;\n/**\n * Construct an object from a list of (k, v) pairs\n */\nfunction makeObject(pairs) {\n    const ret = {};\n    for (const pair of pairs) {\n        ret[pair[0]] = pair[1];\n    }\n    return ret;\n}\nexports.makeObject = makeObject;\n/**\n * Deep get a value from a tree of nested objects\n *\n * Returns undefined if any part of the path was unset or\n * not an object.\n */\nfunction deepGet(x, path) {\n    path = path.slice();\n    while (path.length > 0 && types_1.isObject(x)) {\n        const key = path.shift();\n        x = x[key];\n    }\n    return path.length === 0 ? x : undefined;\n}\nexports.deepGet = deepGet;\n/**\n * Deep set a value in a tree of nested objects\n *\n * Throws an error if any part of the path is not an object.\n */\nfunction deepSet(x, path, value) {\n    path = path.slice();\n    if (path.length === 0) {\n        throw new Error('Path may not be empty');\n    }\n    while (path.length > 1 && types_1.isObject(x)) {\n        const key = path.shift();\n        if (!(key in x)) {\n            x[key] = {};\n        }\n        x = x[key];\n    }\n    if (!types_1.isObject(x)) {\n        throw new Error(`Expected an object, got '${x}'`);\n    }\n    x[path[0]] = value;\n}\nexports.deepSet = deepSet;\n/**\n * Recursively merge objects together\n *\n * The leftmost object is mutated and returned. Arrays are not merged\n * but overwritten just like scalars.\n *\n * If an object is merged into a non-object, the non-object is lost.\n */\nfunction deepMerge(...objects) {\n    function mergeOne(target, source) {\n        for (const key of Object.keys(source)) {\n            const value = source[key];\n            if (types_1.isObject(value)) {\n                if (!types_1.isObject(target[key])) {\n                    target[key] = {};\n                } // Overwrite on purpose\n                mergeOne(target[key], value);\n            }\n            else if (typeof value !== 'undefined') {\n                target[key] = value;\n            }\n        }\n    }\n    const others = objects.filter(x => x != null);\n    if (others.length === 0) {\n        return {};\n    }\n    const into = others.splice(0, 1)[0];\n    others.forEach(other => mergeOne(into, other));\n    return into;\n}\nexports.deepMerge = deepMerge;\n\n\n/***/ })\n/******/ ]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"
}
