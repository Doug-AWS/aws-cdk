{
  "schema": "jsii/1.0",
  "types": {
    "jsii$_aws_cdk_sns$.TopicPolicyProps": {
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "The set of topics this policy applies to."
          },
          "name": "topics",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_sns$.TopicRef"
              },
              "kind": "array"
            }
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_sns$.TopicPolicyProps",
      "module": "jsii$_aws_cdk_sns$",
      "namespace": "jsii$_aws_cdk_sns$",
      "name": "TopicPolicyProps",
      "datatype": true
    },
    "jsii$_aws_cdk_sns$.TopicPolicy": {
      "docs": {
        "comment": "Applies a policy to SNS topics."
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The IAM policy document for this policy."
          },
          "name": "document",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.PolicyDocument"
          },
          "immutable": true
        }
      ],
      "fqn": "jsii$_aws_cdk_sns$.TopicPolicy",
      "module": "jsii$_aws_cdk_sns$",
      "namespace": "jsii$_aws_cdk_sns$",
      "name": "TopicPolicy",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_sns$.TopicPolicyProps"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_sns$.TopicProps": {
      "docs": {
        "comment": "Properties for a new SNS topic"
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "default": "None",
            "comment": "A developer-defined string that can be used to identify this SNS topic."
          },
          "name": "displayName",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "Generated name",
            "comment": "A name for the topic.\n\nIf you don't specify a name, AWS CloudFormation generates a unique\nphysical ID and uses that ID for the topic name. For more information,\nsee Name Type."
          },
          "name": "topicName",
          "type": {
            "primitive": "string",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_sns$.TopicProps",
      "module": "jsii$_aws_cdk_sns$",
      "namespace": "jsii$_aws_cdk_sns$",
      "name": "TopicProps",
      "datatype": true
    },
    "jsii$_aws_cdk_sns$.Topic": {
      "docs": {
        "comment": "A new SNS topic"
      },
      "kind": "class",
      "properties": [
        {
          "name": "topicArn",
          "type": {
            "fqn": "jsii$_aws_cdk_sns$.TopicArn"
          },
          "immutable": true
        },
        {
          "name": "topicName",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.sns.TopicName",
            "optional": true
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Controls automatic creation of policy objects.\n\nSet by subclasses."
          },
          "name": "autoCreatePolicy",
          "type": {
            "primitive": "boolean"
          },
          "protected": true
        }
      ],
      "fqn": "jsii$_aws_cdk_sns$.Topic",
      "module": "jsii$_aws_cdk_sns$",
      "namespace": "jsii$_aws_cdk_sns$",
      "name": "Topic",
      "base": {
        "fqn": "jsii$_aws_cdk_sns$.TopicRef"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_sns$.TopicProps",
              "optional": true
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_sns$.TopicArn": {
      "docs": {
        "comment": "ARN of a Topic"
      },
      "kind": "class",
      "fqn": "jsii$_aws_cdk_sns$.TopicArn",
      "module": "jsii$_aws_cdk_sns$",
      "namespace": "jsii$_aws_cdk_sns$",
      "name": "TopicArn",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Arn"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_sns$.TopicRef": {
      "docs": {
        "comment": "Either a new or imported Topic"
      },
      "kind": "class",
      "properties": [
        {
          "name": "topicArn",
          "type": {
            "fqn": "jsii$_aws_cdk_sns$.TopicArn"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "Controls automatic creation of policy objects.\n\nSet by subclasses."
          },
          "name": "autoCreatePolicy",
          "type": {
            "primitive": "boolean"
          },
          "immutable": true,
          "protected": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "Returns a RuleTarget that can be used to trigger this SNS topic as a\nresult from a CloudWatch event."
          },
          "name": "eventRuleTarget",
          "type": {
            "fqn": "jsii$_aws_cdk_events$.EventRuleTarget"
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "name": "parent",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "jsii$_aws_cdk_sns$.TopicRefProps"
              }
            }
          ],
          "docs": {
            "comment": "Import a Topic defined elsewhere"
          },
          "name": "import",
          "static": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_sns$.TopicRef"
          }
        },
        {
          "docs": {
            "comment": "Export this Topic"
          },
          "name": "export",
          "returns": {
            "fqn": "jsii$_aws_cdk_sns$.TopicRefProps"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "endpoint",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "protocol",
              "type": {
                "fqn": "jsii$_aws_cdk_sns$.SubscriptionProtocol"
              }
            }
          ],
          "docs": {
            "comment": "Subscribe some endpoint to this topic"
          },
          "name": "subscribe"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "queue The target queue",
                "comment": "The target queue"
              },
              "name": "queue",
              "type": {
                "fqn": "jsii$_aws_cdk_sqs$.QueueRef"
              }
            }
          ],
          "docs": {
            "comment": "Defines a subscription from this SNS topic to an SQS queue.\n\nThe queue resource policy will be updated to allow this SNS topic to send\nmessages to the queue.\n\nTODO: change to QueueRef."
          },
          "name": "subscribeQueue",
          "returns": {
            "fqn": "jsii$_aws_cdk_sns$.Subscription"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "lambdaFunction The Lambda function to invoke",
                "comment": "The Lambda function to invoke"
              },
              "name": "lambdaFunction",
              "type": {
                "fqn": "jsii$_aws_cdk_lambda$.LambdaRef"
              }
            }
          ],
          "docs": {
            "comment": "Defines a subscription from this SNS Topic to a Lambda function.\n\nThe Lambda's resource policy will be updated to allow this topic to\ninvoke the function."
          },
          "name": "subscribeLambda",
          "returns": {
            "fqn": "jsii$_aws_cdk_sns$.Subscription"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "name A name for the subscription",
                "comment": "A name for the subscription"
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "emailAddress The email address to use.",
                "comment": "The email address to use."
              },
              "name": "emailAddress",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "jsii$_aws_cdk_sns$.EmailSubscriptionOptions",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Defines a subscription from this SNS topic to an email address."
          },
          "name": "subscribeEmail",
          "returns": {
            "fqn": "jsii$_aws_cdk_sns$.Subscription"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "name A name for the subscription",
                "comment": "A name for the subscription"
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "url The URL to invoke",
                "comment": "The URL to invoke"
              },
              "name": "url",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Defines a subscription from this SNS topic to an http:// or https:// URL."
          },
          "name": "subscribeUrl",
          "returns": {
            "fqn": "jsii$_aws_cdk_sns$.Subscription"
          }
        },
        {
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              }
            }
          ],
          "docs": {
            "comment": "Adds a statement to the IAM resource policy associated with this topic.\n\nIf this topic was created in this stack (`new Topic`), a topic policy\nwill be automatically created upon the first call to `addToPolicy`. If\nthe topic is improted (`Topic.import`), then this is a no-op."
          },
          "name": "addToResourcePolicy"
        },
        {
          "parameters": [
            {
              "name": "identity",
              "type": {
                "fqn": "jsii$_aws_cdk_iam$.IIdentityResource",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Grant topic publishing permissions to the given identity"
          },
          "name": "grantPublish"
        }
      ],
      "interfaces": [
        {
          "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget"
        }
      ],
      "fqn": "jsii$_aws_cdk_sns$.TopicRef",
      "module": "jsii$_aws_cdk_sns$",
      "namespace": "jsii$_aws_cdk_sns$",
      "name": "TopicRef",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "abstract": true,
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_sns$.TopicRefProps": {
      "docs": {
        "comment": "Reference to an external topic."
      },
      "kind": "interface",
      "properties": [
        {
          "name": "topicArn",
          "type": {
            "fqn": "jsii$_aws_cdk_sns$.TopicArn"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_sns$.TopicRefProps",
      "module": "jsii$_aws_cdk_sns$",
      "namespace": "jsii$_aws_cdk_sns$",
      "name": "TopicRefProps",
      "datatype": true
    },
    "jsii$_aws_cdk_sns$.EmailSubscriptionOptions": {
      "docs": {
        "comment": "Options for email subscriptions."
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "default": "Message text (false)",
            "comment": "Indicates if the full notification JSON should be sent to the email\naddress or just the message text."
          },
          "name": "json",
          "type": {
            "primitive": "boolean",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_sns$.EmailSubscriptionOptions",
      "module": "jsii$_aws_cdk_sns$",
      "namespace": "jsii$_aws_cdk_sns$",
      "name": "EmailSubscriptionOptions",
      "datatype": true
    },
    "jsii$_aws_cdk_sns$.SubscriptionProps": {
      "docs": {
        "comment": "Properties for creating a new subscription"
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "What type of subscription to add."
          },
          "name": "protocol",
          "type": {
            "fqn": "jsii$_aws_cdk_sns$.SubscriptionProtocol"
          }
        },
        {
          "docs": {
            "comment": "The subscription endpoint.\n\nThe meaning of this value depends on the value for 'protocol'."
          },
          "name": "endpoint",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "comment": "The topic to subscribe to."
          },
          "name": "topic",
          "type": {
            "fqn": "jsii$_aws_cdk_sns$.TopicRef"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_sns$.SubscriptionProps",
      "module": "jsii$_aws_cdk_sns$",
      "namespace": "jsii$_aws_cdk_sns$",
      "name": "SubscriptionProps",
      "datatype": true
    },
    "jsii$_aws_cdk_sns$.Subscription": {
      "docs": {
        "comment": "A new subscription.\n\nPrefer to use the `TopicRef.subscribeXxx()` methods to creating instances of\nthis class."
      },
      "kind": "class",
      "fqn": "jsii$_aws_cdk_sns$.Subscription",
      "module": "jsii$_aws_cdk_sns$",
      "namespace": "jsii$_aws_cdk_sns$",
      "name": "Subscription",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_sns$.SubscriptionProps"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_sns$.SubscriptionProtocol": {
      "docs": {
        "comment": "The type of subscription, controlling the type of the endpoint parameter."
      },
      "kind": "enum",
      "members": [
        {
          "name": "Http"
        },
        {
          "name": "Https"
        },
        {
          "name": "Email"
        },
        {
          "name": "EmailJson"
        },
        {
          "name": "Sms"
        },
        {
          "name": "Sqs"
        },
        {
          "name": "Application"
        },
        {
          "name": "Lambda"
        }
      ],
      "fqn": "jsii$_aws_cdk_sns$.SubscriptionProtocol",
      "module": "jsii$_aws_cdk_sns$",
      "namespace": "jsii$_aws_cdk_sns$",
      "name": "SubscriptionProtocol"
    }
  },
  "nametree": {
    "jsii$_aws_cdk_sns$": {
      "TopicPolicyProps": {
        "_": "jsii$_aws_cdk_sns$.TopicPolicyProps"
      },
      "TopicPolicy": {
        "_": "jsii$_aws_cdk_sns$.TopicPolicy"
      },
      "TopicProps": {
        "_": "jsii$_aws_cdk_sns$.TopicProps"
      },
      "Topic": {
        "_": "jsii$_aws_cdk_sns$.Topic"
      },
      "TopicArn": {
        "_": "jsii$_aws_cdk_sns$.TopicArn"
      },
      "TopicRef": {
        "_": "jsii$_aws_cdk_sns$.TopicRef"
      },
      "TopicRefProps": {
        "_": "jsii$_aws_cdk_sns$.TopicRefProps"
      },
      "EmailSubscriptionOptions": {
        "_": "jsii$_aws_cdk_sns$.EmailSubscriptionOptions"
      },
      "SubscriptionProps": {
        "_": "jsii$_aws_cdk_sns$.SubscriptionProps"
      },
      "Subscription": {
        "_": "jsii$_aws_cdk_sns$.Subscription"
      },
      "SubscriptionProtocol": {
        "_": "jsii$_aws_cdk_sns$.SubscriptionProtocol"
      }
    }
  },
  "typecount": 11,
  "externalTypes": {
    "jsii$_aws_cdk_core$.Construct": {
      "docs": {
        "comment": "Represents the building block of the construct graph.\nWhen a construct is created, it is always added as a child"
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "Returns the parent of this node or undefined if this is a root node."
          },
          "name": "parent",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.Construct",
            "optional": true
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The name of this construct"
          },
          "name": "name",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "All direct children of this construct."
          },
          "name": "children",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              },
              "kind": "array"
            }
          },
          "immutable": true
        },
        {
          "docs": {
            "returns": "/-separated path of this Construct.",
            "comment": "Returns the path of all constructs from root to this construct, in string form."
          },
          "name": "path",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "An array of metadata objects associated with this construct.\nThis can be used, for example, to implement support for deprecation notices, source mapping, etc."
          },
          "name": "metadata",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.MetadataEntry"
              },
              "kind": "array"
            }
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "docs": {
            "comment": "Returns a string representation of this construct."
          },
          "name": "toString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "parameters": [
            {
              "name": "depth",
              "type": {
                "primitive": "number",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Returns a string with a tree representation of this construct and it's children."
          },
          "name": "toTreeString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "a child by path or undefined if not found.",
            "comment": "Return a descendant by path, or undefined"
          },
          "name": "tryFindChild",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct",
            "optional": true
          }
        },
        {
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "Child with the given path.",
            "comment": "Return a descendant by path\n\nThrows an exception if the descendant is not found."
          },
          "name": "findChild",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "key The context key",
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "value The context value",
                "comment": "The context value"
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "This can be used to set contextual values.\nContext must be set before any children are added, since children may consult context info during construction.\nIf the key already exists, it will be overridden."
          },
          "name": "setContext"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "key The context key",
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "The context value or undefined",
            "comment": "Retrieves a value from tree context.\n\nContext is usually initialized at the root, but can be overridden at any point in the tree."
          },
          "name": "getContext",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Retrieve a value from tree-global context\n\nIt is an error if the context object is not available."
          },
          "name": "requireContext",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "type a string denoting the type of metadata",
                "comment": "a string denoting the type of metadata"
              },
              "name": "type",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "data the value of the metadata (can be a Token). If null/undefined, metadata will not be added.",
                "comment": "the value of the metadata (can be a Token). If null/undefined, metadata will not be added."
              },
              "name": "data",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "param": "from a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)",
                "comment": "a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)"
              },
              "name": "from",
              "type": {
                "primitive": "any",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Adds a metadata entry to this construct.\nEntries are arbitrary values and will also include a stack trace to allow tracing back to\nthe code location for when the entry was added. It can be used, for example, to include source\nmapping in CloudFormation templates to improve diagnostics."
          },
          "name": "addMetadata",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "message The warning message.",
                "comment": "The warning message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Adds a { warning: <message> } metadata entry to this construct."
          },
          "name": "addWarning",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "docs": {
            "returns": "An array of validation error messages, or an empty array if there the construct is valid.",
            "comment": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis."
          },
          "name": "validate",
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "returns": "A list of validation errors. If the list is empty, all constructs are valid.",
            "comment": "Invokes 'validate' on all child constructs and then on this construct (depth-first)."
          },
          "name": "validateTree",
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.ValidationError"
              },
              "kind": "array"
            }
          }
        },
        {
          "parameters": [
            {
              "name": "upTo",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Return the ancestors (including self) of this Construct up until and excluding the indicated component"
          },
          "name": "ancestors",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              },
              "kind": "array"
            }
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "props The props bag.",
                "comment": "The props bag."
              },
              "name": "props",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "param": "name The name of the required property.",
                "comment": "The name of the required property."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Throws if the `props` bag doesn't include the property `name`.\nIn the future we can add some type-checking here, maybe even auto-generate during compilation."
          },
          "name": "required",
          "protected": true,
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "child The child construct",
                "comment": "The child construct"
              },
              "name": "child",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "name": "childName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "The resolved path part name of the child",
            "comment": "Adds a child construct to this node."
          },
          "name": "addChild",
          "protected": true
        },
        {
          "docs": {
            "comment": "Locks this construct from allowing more children to be added. After this\ncall, no more children can be added to this construct or to any children."
          },
          "name": "lock",
          "protected": true
        },
        {
          "docs": {
            "comment": "Unlocks this costruct and allows mutations (adding children)."
          },
          "name": "unlock",
          "protected": true
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.Construct",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "Construct",
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_core$.PolicyDocument": {
      "kind": "class",
      "properties": [
        {
          "name": "isEmpty",
          "type": {
            "primitive": "boolean"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The number of statements already added to this policy.\nCan be used, for example, to generate uniuqe \"sid\"s within the policy."
          },
          "name": "statementCount",
          "type": {
            "primitive": "number"
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "name": "resolve",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              }
            }
          ],
          "name": "addStatement",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyDocument"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.PolicyDocument",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "PolicyDocument",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "baseDocument",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a new IAM policy document."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_resources$.sns.TopicName": {
      "kind": "class",
      "fqn": "jsii$_aws_cdk_resources$.sns.TopicName",
      "module": "jsii$_aws_cdk_resources$",
      "namespace": "jsii$_aws_cdk_resources$.sns",
      "name": "TopicName",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_core$.Arn": {
      "docs": {
        "comment": "An Amazon Resource Name (ARN).\nhttp://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"
      },
      "kind": "class",
      "methods": [
        {
          "parameters": [
            {
              "name": "components",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.ArnComponents"
              }
            }
          ],
          "docs": {
            "comment": "Creates an ARN from components.\nIf any component is the empty string,\nan empty string will be inserted into the generated ARN\nat the location that component corresponds to."
          },
          "name": "fromComponents",
          "static": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Arn"
          }
        },
        {
          "parameters": [
            {
              "name": "arn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "an ArnComponents object which allows access to the various\ncomponents of the ARN.",
            "comment": "Given an ARN, parses it and returns components.\n\nThe ARN it will be parsed and validated. The separator (`sep`) will be\nset to '/' if the 6th component includes a '/', in which case, `resource`\nwill be set to the value before the '/' and `resourceName` will be the\nrest. In case there is no '/', `resource` will be set to the 6th\ncomponents and `resourceName` will be set to the rest of the string."
          },
          "name": "parse",
          "static": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.ArnComponents"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.Arn",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "Arn",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_events$.IEventRuleTarget": {
      "docs": {
        "comment": "An abstract target for EventRules."
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "Returns the rule target specification.\nNOTE: Do not use the various `inputXxx` options. They can be set in a call to `addTarget`."
          },
          "name": "eventRuleTarget",
          "type": {
            "fqn": "jsii$_aws_cdk_events$.EventRuleTarget"
          },
          "immutable": true
        }
      ],
      "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget",
      "module": "jsii$_aws_cdk_events$",
      "namespace": "jsii$_aws_cdk_events$",
      "name": "IEventRuleTarget",
      "datatype": true
    },
    "jsii$_aws_cdk_sqs$.QueueRef": {
      "docs": {
        "comment": "Reference to a new or existing Amazon SQS queue"
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of this queue"
          },
          "name": "queueArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.sqs.QueueArn"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "The URL of this queue"
          },
          "name": "queueUrl",
          "type": {
            "fqn": "jsii$_aws_cdk_sqs$.QueueUrl"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "Controls automatic creation of policy objects.\n\nSet by subclasses."
          },
          "name": "autoCreatePolicy",
          "type": {
            "primitive": "boolean"
          },
          "immutable": true,
          "protected": true,
          "abstract": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "name": "parent",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "jsii$_aws_cdk_sqs$.QueueRefProps"
              }
            }
          ],
          "docs": {
            "comment": "Import an existing queue"
          },
          "name": "import",
          "static": true
        },
        {
          "docs": {
            "comment": "Export a queue"
          },
          "name": "export",
          "returns": {
            "fqn": "jsii$_aws_cdk_sqs$.QueueRefProps"
          }
        },
        {
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              }
            }
          ],
          "docs": {
            "comment": "Adds a statement to the IAM resource policy associated with this queue.\n\nIf this queue was created in this stack (`new Queue`), a queue policy\nwill be automatically created upon the first call to `addToPolicy`. If\nthe queue is improted (`Queue.import`), then this is a no-op."
          },
          "name": "addToResourcePolicy"
        }
      ],
      "fqn": "jsii$_aws_cdk_sqs$.QueueRef",
      "module": "jsii$_aws_cdk_sqs$",
      "namespace": "jsii$_aws_cdk_sqs$",
      "name": "QueueRef",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "abstract": true,
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_lambda$.LambdaRef": {
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The name of the function."
          },
          "name": "functionName",
          "type": {
            "fqn": "jsii$_aws_cdk_lambda$.FunctionName"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "The ARN fo the function."
          },
          "name": "functionArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.lambda.FunctionArn"
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "The IAM role associated with this function."
          },
          "name": "role",
          "type": {
            "fqn": "jsii$_aws_cdk_iam$.Role",
            "optional": true
          },
          "immutable": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "Whether the addPermission() call adds any permissions\n\nTrue for new Lambdas, false for imported Lambdas (they might live in different accounts)."
          },
          "name": "canCreatePermissions",
          "type": {
            "primitive": "boolean"
          },
          "immutable": true,
          "protected": true,
          "abstract": true
        },
        {
          "docs": {
            "comment": "Returns a RuleTarget that can be used to trigger this Lambda as a\nresult from a CloudWatch event."
          },
          "name": "eventRuleTarget",
          "type": {
            "fqn": "jsii$_aws_cdk_events$.EventRuleTarget"
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "docs": {
                "param": "parent The parent construct",
                "comment": "The parent construct"
              },
              "name": "parent",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "docs": {
                "param": "name The name of the lambda construct",
                "comment": "The name of the lambda construct"
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "ref A reference to a Lambda function. Can be created manually (see\nexample above) or obtained through a call to `lambda.export()`.",
                "comment": "A reference to a Lambda function. Can be created manually (see\nexample above) or obtained through a call to `lambda.export()`."
              },
              "name": "ref",
              "type": {
                "fqn": "jsii$_aws_cdk_lambda$.LambdaRefProps"
              }
            }
          ],
          "docs": {
            "comment": "Creates a Lambda function object which represents a function not defined\nwithin this stack.\n\n      Lambda.import(this, 'MyImportedFunction', { lambdaArn: new LambdaArn('arn:aws:...') });"
          },
          "name": "import",
          "static": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_lambda$.LambdaRef"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "name A name for the permission construct",
                "comment": "A name for the permission construct"
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "permission",
              "type": {
                "fqn": "jsii$_aws_cdk_lambda$.LambdaPermission"
              }
            }
          ],
          "docs": {
            "comment": "Adds a permission to the Lambda resource policy."
          },
          "name": "addPermission"
        },
        {
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              }
            }
          ],
          "name": "addToRolePolicy"
        }
      ],
      "interfaces": [
        {
          "fqn": "jsii$_aws_cdk_events$.IEventRuleTarget"
        }
      ],
      "fqn": "jsii$_aws_cdk_lambda$.LambdaRef",
      "module": "jsii$_aws_cdk_lambda$",
      "namespace": "jsii$_aws_cdk_lambda$",
      "name": "LambdaRef",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "abstract": true,
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_core$.PolicyStatement": {
      "docs": {
        "comment": "Represents a statement in an IAM policy document."
      },
      "subtypes": [
        "jsii$_aws_cdk_core$.PolicyStatement.Effect"
      ],
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "Indicates if this permission has a \"Principal\" section."
          },
          "name": "hasPrincipal",
          "type": {
            "primitive": "boolean"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Indicates if this permission as at least one resource associated with it."
          },
          "name": "hasResource",
          "type": {
            "primitive": "boolean"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Indicates if this permission has only a ``\"*\"`` resource associated with it."
          },
          "name": "isOnlyStarResource",
          "type": {
            "primitive": "boolean"
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "name": "action",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "name": "addAction",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "actions",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "name": "addActions",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          },
          "variadic": true
        },
        {
          "parameters": [
            {
              "name": "principal",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyPrincipal"
              }
            }
          ],
          "name": "addPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "arn",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "addAwsPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "accountId",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "addAwsAccountPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "service",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "addServicePrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "federated",
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "conditions",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "name": "addFederatedPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "name": "addAccountRootPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "resource",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "addResource",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Adds a ``\"*\"`` resource to this statement."
          },
          "name": "addAllResources",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "resources",
              "type": {
                "primitive": "any"
              },
              "variadic": true
            }
          ],
          "name": "addResources",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          },
          "variadic": true
        },
        {
          "parameters": [
            {
              "name": "sid",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "describe",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Sets the permission effect to deny access to resources."
          },
          "name": "allow",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Sets the permission effect to allow access to resources."
          },
          "name": "deny",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "Add a condition to the Policy"
          },
          "name": "addCondition",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "conditions",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "docs": {
            "comment": "Add multiple conditions to the Policy"
          },
          "name": "addConditions",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "deprecated": "For backwards compatibility. Use addCondition() instead.",
            "comment": "Add a condition to the Policy."
          },
          "name": "setCondition",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "accountId",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "limitToAccount",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "name": "resolve",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "name": "toJson",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.PolicyStatement",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "PolicyStatement",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "effect",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.PolicyStatement.Effect",
              "optional": true
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_iam$.IIdentityResource": {
      "kind": "interface",
      "methods": [
        {
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              }
            }
          ],
          "docs": {
            "comment": "Adds an IAM statement to the default inline policy associated with this\nprincipal. If a policy doesn't exist, it is created."
          },
          "name": "addToPolicy"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "policy The policy resource to attach to this principal.",
                "comment": "The policy resource to attach to this principal."
              },
              "name": "policy",
              "type": {
                "fqn": "jsii$_aws_cdk_iam$.Policy"
              }
            }
          ],
          "docs": {
            "comment": "Attaches an inline policy to this principal.\nThis is the same as calling `policy.addToXxx(principal)`."
          },
          "name": "attachInlinePolicy"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "arn The ARN of the managed policy",
                "comment": "The ARN of the managed policy"
              },
              "name": "arn",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "Attaches a managed policy to this principal."
          },
          "name": "attachManagedPolicy"
        }
      ],
      "properties": [
        {
          "docs": {
            "comment": "The IAM principal of this identity (i.e. AWS principal, service principal, etc)."
          },
          "name": "principal",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.PolicyPrincipal"
          },
          "immutable": true
        }
      ],
      "fqn": "jsii$_aws_cdk_iam$.IIdentityResource",
      "module": "jsii$_aws_cdk_iam$",
      "namespace": "jsii$_aws_cdk_iam$",
      "name": "IIdentityResource"
    },
    "jsii$_aws_cdk_events$.EventRuleTarget": {
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "A unique, user-defined identifier for the target. Acceptable values\ninclude alphanumeric characters, periods (.), hyphens (-), and\nunderscores (_)."
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The Amazon Resource Name (ARN) of the target."
          },
          "name": "arn",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.Arn"
          }
        },
        {
          "docs": {
            "comment": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management\n(IAM) role to use for this target when the rule is triggered. If one rule\ntriggers multiple targets, you can use a different IAM role for each\ntarget."
          },
          "name": "roleArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.iam.RoleArn",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The Amazon ECS task definition and task count to use, if the event target\nis an Amazon ECS task."
          },
          "name": "ecsParameters",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.events.RuleResource.EcsParametersProperty",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Settings that control shard assignment, when the target is a Kinesis\nstream. If you don't include this parameter, eventId is used as the\npartition key."
          },
          "name": "kinesisParameters",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.events.RuleResource.KinesisParametersProperty",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Parameters used when the rule invokes Amazon EC2 Systems Manager Run\nCommand."
          },
          "name": "runCommandParameters",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.events.RuleResource.RunCommandParametersProperty",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_events$.EventRuleTarget",
      "module": "jsii$_aws_cdk_events$",
      "namespace": "jsii$_aws_cdk_events$",
      "name": "EventRuleTarget",
      "datatype": true
    }
  },
  "name": "jsii$_aws_cdk_sns$",
  "package": "@aws-cdk/sns",
  "version": "0.7.2-beta",
  "dependencies": {
    "jsii$_aws_cdk_core$": {
      "package": "@aws-cdk/core",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_events$": {
      "package": "@aws-cdk/events",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_iam$": {
      "package": "@aws-cdk/iam",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_lambda$": {
      "package": "@aws-cdk/lambda",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_resources$": {
      "package": "@aws-cdk/resources",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_sqs$": {
      "package": "@aws-cdk/sqs",
      "version": "0.7.2-beta"
    }
  },
  "names": {
    "java": "com.amazonaws.cdk.sns",
    "dotnet": "Aws.Cdk.Sns",
    "js": "@aws-cdk/sns"
  },
  "nativenames": {
    "jsii$_aws_cdk_core$": {
      "java": "com.amazonaws.cdk",
      "dotnet": "Aws.Cdk",
      "js": "@aws-cdk/core"
    },
    "jsii$_aws_cdk_events$": {
      "java": "com.amazonaws.cdk.events",
      "dotnet": "Aws.Cdk.Events",
      "js": "@aws-cdk/events"
    },
    "jsii$_aws_cdk_iam$": {
      "java": "com.amazonaws.cdk.iam",
      "dotnet": "Aws.Cdk.Iam",
      "js": "@aws-cdk/iam"
    },
    "jsii$_aws_cdk_lambda$": {
      "java": "com.amazonaws.cdk.lambda",
      "dotnet": "Aws.Cdk.Lambda",
      "js": "@aws-cdk/lambda"
    },
    "jsii$_aws_cdk_resources$": {
      "java": "com.amazonaws.cdk.resources",
      "dotnet": "Aws.Cdk.Resources",
      "js": "@aws-cdk/resources"
    },
    "jsii$_aws_cdk_sqs$": {
      "java": "com.amazonaws.cdk.sqs",
      "dotnet": "Aws.Cdk.Sqs",
      "js": "@aws-cdk/sqs"
    },
    "jsii$_aws_cdk_sns$": {
      "java": "com.amazonaws.cdk.sns",
      "dotnet": "Aws.Cdk.Sns",
      "js": "@aws-cdk/sns"
    }
  },
  "readme": {
    "markdown": "## AWS SNS Construct Library\n\nAdd an SNS Topic to your stack:\n\n```ts\nimport { Topic } from '@aws-cdk/sns';\n\nconst topic = new Topic(stack, 'Topic', {\n    displayName: 'Customer subscription topic'\n});\n```\n\n### Subscriptions\n\nVarious subscriptions can be added to the topic by calling the `.subscribeXxx()` methods on the\ntopic.\n\nAdd an HTTPS Subscription to your topic:\n\n```ts\nconst myTopic = new Topic(stack, 'MyTopic');\n\nmyTopic.subscribeUrl('MyHttpsSubscription', 'https://foobar.com/');\n```\n\nSubscribe a queue to the topic:\n\n```ts\nconst myTopic = new Topic(stack, 'MyTopic');\nconst queue = new Queue(stack, 'MyQueue');\n\nmyTopic.subscribeQueue(queue);\n```\n\nNote that subscriptions of queues in different accounts need to be manually confirmed by\nreading the initial message from the queue and visiting the link found in it.\n\n### CloudWatch Event Rule Target\n\nSNS topics can be used as targets for CloudWatch event rules:\n\n```ts\nconst myTopic = new Topic(this, 'MyTopic');\nconst rule = new EventRule(this, 'Rule', { /* ... */ });\n\nrule.addTarget(myTopic);\n\n// or use as a target in an onXxx method\ncodeCommitRepo.onCommit('OnCommit', myTopic);\n```\n\nThis will result in adding a target to the event rule and will also modify the topic resource\npolicy to allow CloudWatch events to publish to the topic.\n"
  },
  "code": "var jsii$_aws_cdk_sns$ =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 5);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_core$;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_resources$;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(0);\nconst resources_1 = __webpack_require__(1);\n/**\n * Applies a policy to SNS topics.\n */\nclass TopicPolicy extends core_1.Construct {\n    constructor(parent, name, props) {\n        super(parent, name);\n        /**\n         * The IAM policy document for this policy.\n         */\n        this.document = new core_1.PolicyDocument();\n        new resources_1.sns.TopicPolicyResource(this, 'Resource', {\n            policyDocument: this.document,\n            topics: props.topics.map(t => t.topicArn)\n        });\n    }\n}\nexports.TopicPolicy = TopicPolicy;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(0);\nconst policy_1 = __webpack_require__(2);\nconst subscription_1 = __webpack_require__(4);\n/**\n * ARN of a Topic\n */\nclass TopicArn extends core_1.Arn {\n}\nexports.TopicArn = TopicArn;\n/**\n * Either a new or imported Topic\n */\nclass TopicRef extends core_1.Construct {\n    constructor() {\n        super(...arguments);\n        /**\n         * Indicates if the resource policy that allows CloudWatch events to publish\n         * notifications to this topic have been added.\n         */\n        this.eventRuleTargetPolicyAdded = false;\n    }\n    /**\n     * Import a Topic defined elsewhere\n     */\n    static import(parent, name, props) {\n        return new ImportedTopic(parent, name, props);\n    }\n    /**\n     * Export this Topic\n     */\n    export() {\n        return {\n            topicArn: new core_1.Output(this, 'TopicArn', { value: this.topicArn }).makeImportValue(),\n        };\n    }\n    /**\n     * Subscribe some endpoint to this topic\n     */\n    subscribe(name, endpoint, protocol) {\n        new subscription_1.Subscription(this, name, {\n            topic: this,\n            endpoint,\n            protocol\n        });\n    }\n    /**\n     * Defines a subscription from this SNS topic to an SQS queue.\n     *\n     * The queue resource policy will be updated to allow this SNS topic to send\n     * messages to the queue.\n     *\n     * TODO: change to QueueRef.\n     *\n     * @param name The subscription name\n     * @param queue The target queue\n     */\n    subscribeQueue(queue) {\n        const subscriptionName = queue.name + 'Subscription';\n        if (this.tryFindChild(subscriptionName)) {\n            throw new Error(`A subscription between the topic ${this.name} and the queue ${queue.name} already exists`);\n        }\n        // we use the queue name as the subscription's. there's no meaning to subscribing\n        // the same queue twice on the same topic.\n        const sub = new subscription_1.Subscription(this, subscriptionName, {\n            topic: this,\n            endpoint: queue.queueArn,\n            protocol: subscription_1.SubscriptionProtocol.Sqs\n        });\n        // add a statement to the queue resource policy which allows this topic\n        // to send messages to the queue.\n        queue.addToResourcePolicy(new core_1.PolicyStatement()\n            .addResource(queue.queueArn)\n            .addAction('sqs:SendMessage')\n            .addServicePrincipal('sns.amazonaws.com')\n            .setCondition('ArnEquals', { 'aws:SourceArn': this.topicArn }));\n        return sub;\n    }\n    /**\n     * Defines a subscription from this SNS Topic to a Lambda function.\n     *\n     * The Lambda's resource policy will be updated to allow this topic to\n     * invoke the function.\n     *\n     * @param name A name for the subscription\n     * @param lambdaFunction The Lambda function to invoke\n     */\n    subscribeLambda(lambdaFunction) {\n        const subscriptionName = lambdaFunction.name + 'Subscription';\n        if (this.tryFindChild(subscriptionName)) {\n            throw new Error(`A subscription between the topic ${this.name} and the lambda ${lambdaFunction.name} already exists`);\n        }\n        const sub = new subscription_1.Subscription(this, subscriptionName, {\n            topic: this,\n            endpoint: lambdaFunction.functionArn,\n            protocol: subscription_1.SubscriptionProtocol.Lambda\n        });\n        lambdaFunction.addPermission(this.name, {\n            sourceArn: this.topicArn,\n            principal: new core_1.ServicePrincipal('sns.amazonaws.com'),\n        });\n        return sub;\n    }\n    /**\n     * Defines a subscription from this SNS topic to an email address.\n     *\n     * @param name A name for the subscription\n     * @param emailAddress The email address to use.\n     * @param jsonFormat True if the email content should be in JSON format (default is false).\n     */\n    subscribeEmail(name, emailAddress, options) {\n        const protocol = (options && options.json ? subscription_1.SubscriptionProtocol.EmailJson : subscription_1.SubscriptionProtocol.Email);\n        return new subscription_1.Subscription(this, name, {\n            topic: this,\n            endpoint: emailAddress,\n            protocol\n        });\n    }\n    /**\n     * Defines a subscription from this SNS topic to an http:// or https:// URL.\n     *\n     * @param name A name for the subscription\n     * @param url The URL to invoke\n     */\n    subscribeUrl(name, url) {\n        if (!url.startsWith('http://') && !url.startsWith('https://')) {\n            throw new Error('URL must start with either http:// or https://');\n        }\n        const protocol = url.startsWith('https:') ? subscription_1.SubscriptionProtocol.Https : subscription_1.SubscriptionProtocol.Http;\n        return new subscription_1.Subscription(this, name, {\n            topic: this,\n            endpoint: url,\n            protocol\n        });\n    }\n    /**\n     * Adds a statement to the IAM resource policy associated with this topic.\n     *\n     * If this topic was created in this stack (`new Topic`), a topic policy\n     * will be automatically created upon the first call to `addToPolicy`. If\n     * the topic is improted (`Topic.import`), then this is a no-op.\n     */\n    addToResourcePolicy(statement) {\n        if (!this.policy && this.autoCreatePolicy) {\n            this.policy = new policy_1.TopicPolicy(this, 'Policy', { topics: [this] });\n        }\n        if (this.policy) {\n            // statements must be unique, so we use the statement index.\n            // potantially SIDs can change as a result of order change, but this should\n            // not have an impact on the policy evaluation.\n            // https://docs.aws.amazon.com/sns/latest/dg/AccessPolicyLanguage_SpecialInfo.html\n            statement.describe(this.policy.document.statementCount.toString());\n            this.policy.document.addStatement(statement);\n        }\n    }\n    /**\n     * Grant topic publishing permissions to the given identity\n     */\n    grantPublish(identity) {\n        if (!identity) {\n            return;\n        }\n        identity.addToPolicy(new core_1.PolicyStatement()\n            .addResource(this.topicArn)\n            .addActions('sns:Publish'));\n    }\n    /**\n     * Returns a RuleTarget that can be used to trigger this SNS topic as a\n     * result from a CloudWatch event.\n     */\n    get eventRuleTarget() {\n        if (!this.eventRuleTargetPolicyAdded) {\n            this.addToResourcePolicy(new core_1.PolicyStatement()\n                .addAction('sns:Publish')\n                .addPrincipal(new core_1.ServicePrincipal('events.amazonaws.com'))\n                .addResource(this.topicArn));\n            this.eventRuleTargetPolicyAdded = true;\n        }\n        return {\n            id: this.name,\n            arn: this.topicArn,\n        };\n    }\n}\nexports.TopicRef = TopicRef;\n/**\n * An imported topic\n */\nclass ImportedTopic extends TopicRef {\n    constructor(parent, name, props) {\n        super(parent, name);\n        this.autoCreatePolicy = false;\n        this.topicArn = props.topicArn;\n    }\n}\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(0);\nconst resources_1 = __webpack_require__(1);\n/**\n * A new subscription.\n *\n * Prefer to use the `TopicRef.subscribeXxx()` methods to creating instances of\n * this class.\n */\nclass Subscription extends core_1.Construct {\n    constructor(parent, name, props) {\n        super(parent, name);\n        new resources_1.sns.SubscriptionResource(this, 'Resource', {\n            endpoint: props.endpoint,\n            protocol: props.protocol,\n            topicArn: props.topic.topicArn\n        });\n    }\n}\nexports.Subscription = Subscription;\n/**\n * The type of subscription, controlling the type of the endpoint parameter.\n */\nvar SubscriptionProtocol;\n(function (SubscriptionProtocol) {\n    /**\n     * JSON-encoded message is POSTED to an HTTP url.\n     */\n    SubscriptionProtocol[\"Http\"] = \"http\";\n    /**\n     * JSON-encoded message is POSTed to an HTTPS url.\n     */\n    SubscriptionProtocol[\"Https\"] = \"https\";\n    /**\n     * Notifications are sent via email.\n     */\n    SubscriptionProtocol[\"Email\"] = \"email\";\n    /**\n     * Notifications are JSON-encoded and sent via mail.\n     */\n    SubscriptionProtocol[\"EmailJson\"] = \"email-json\";\n    /**\n     * Notification is delivered by SMS\n     */\n    SubscriptionProtocol[\"Sms\"] = \"sms\";\n    /**\n     * Notifications are enqueued into an SQS queue.\n     */\n    SubscriptionProtocol[\"Sqs\"] = \"sqs\";\n    /**\n     * JSON-encoded notifications are sent to a mobile app endpoint.\n     */\n    SubscriptionProtocol[\"Application\"] = \"application\";\n    /**\n     * Notifications trigger a Lambda function.\n     */\n    SubscriptionProtocol[\"Lambda\"] = \"lambda\";\n})(SubscriptionProtocol = exports.SubscriptionProtocol || (exports.SubscriptionProtocol = {}));\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(2));\n__export(__webpack_require__(6));\n__export(__webpack_require__(3));\n__export(__webpack_require__(4));\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst resources_1 = __webpack_require__(1);\nconst topic_ref_1 = __webpack_require__(3);\n/**\n * A new SNS topic\n */\nclass Topic extends topic_ref_1.TopicRef {\n    constructor(parent, name, props = {}) {\n        super(parent, name);\n        this.autoCreatePolicy = true;\n        const resource = new resources_1.sns.TopicResource(this, 'Resource', {\n            displayName: props.displayName,\n            topicName: props.topicName\n        });\n        this.topicArn = resource.ref;\n        this.topicName = resource.topicName;\n    }\n}\nexports.Topic = Topic;\n\n\n/***/ })\n/******/ ]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"
}
