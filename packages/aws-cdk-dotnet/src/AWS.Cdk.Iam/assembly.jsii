{
  "schema": "jsii/1.0",
  "types": {
    "jsii$_aws_cdk_iam$.RoleProps": {
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "The IAM principal (i.e. `new ServicePrincipal('sns.amazonaws.com')`)\nwhich can assume this role.\n\nYou can later modify the assume role policy document by accessing it via\nthe `assumeRolePolicy` property."
          },
          "name": "assumedBy",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.PolicyPrincipal"
          }
        },
        {
          "docs": {
            "default": "No managed policies.",
            "comment": "A list of ARNs for managed policies associated with this role.\nYou can add managed policies later using `addManagedPolicy(arn)`."
          },
          "name": "managedPolicyArns",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The path associated with this role. For information about IAM paths, see\nFriendly Names and Paths in IAM User Guide."
          },
          "name": "path",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "A name for the IAM role. For valid values, see the RoleName parameter for\nthe CreateRole action in the IAM API Reference. If you don't specify a\nname, AWS CloudFormation generates a unique physical ID and uses that ID\nfor the group name.\n\nIMPORTANT: If you specify a name, you cannot perform updates that require\nreplacement of this resource. You can perform updates that require no or\nsome interruption. If you must replace the resource, specify a new name.\n\nIf you specify a name, you must specify the CAPABILITY_NAMED_IAM value to\nacknowledge your template's capabilities. For more information, see\nAcknowledging IAM Resources in AWS CloudFormation Templates."
          },
          "name": "roleName",
          "type": {
            "primitive": "string",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_iam$.RoleProps",
      "module": "jsii$_aws_cdk_iam$",
      "namespace": "jsii$_aws_cdk_iam$",
      "name": "RoleProps",
      "datatype": true
    },
    "jsii$_aws_cdk_iam$.Role": {
      "docs": {
        "comment": "IAM Role\n\nDefines an IAM role. The role is created with an assume policy document associated with\nthe specified AWS service principal defined in `serviceAssumeRole`."
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The assume role policy document associated with this role."
          },
          "name": "assumeRolePolicy",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.PolicyDocument",
            "optional": true
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Returns the ARN of this role."
          },
          "name": "roleArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.iam.RoleArn"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Returns the name of the role."
          },
          "name": "roleName",
          "type": {
            "fqn": "jsii$_aws_cdk_iam$.RoleName"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Returns the ARN of this role."
          },
          "name": "principal",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.PolicyPrincipal"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Returns the role."
          },
          "name": "dependencyElements",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.IDependable"
              },
              "kind": "array"
            }
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              }
            }
          ],
          "docs": {
            "comment": "Adds a permission to the role's default policy document.\nIf there is no default policy attached to this role, it will be created."
          },
          "name": "addToPolicy"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "arn The ARN of the managed policy to attach.",
                "comment": "The ARN of the managed policy to attach."
              },
              "name": "arn",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "Attaches a managed policy to this role."
          },
          "name": "attachManagedPolicy"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "policy The policy to attach",
                "comment": "The policy to attach"
              },
              "name": "policy",
              "type": {
                "fqn": "jsii$_aws_cdk_iam$.Policy"
              }
            }
          ],
          "docs": {
            "comment": "Attaches a policy to this role."
          },
          "name": "attachInlinePolicy"
        }
      ],
      "interfaces": [
        {
          "fqn": "jsii$_aws_cdk_iam$.IIdentityResource"
        },
        {
          "fqn": "jsii$_aws_cdk_core$.IDependable"
        }
      ],
      "fqn": "jsii$_aws_cdk_iam$.Role",
      "module": "jsii$_aws_cdk_iam$",
      "namespace": "jsii$_aws_cdk_iam$",
      "name": "Role",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_iam$.RoleProps"
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_iam$.RoleName": {
      "kind": "class",
      "fqn": "jsii$_aws_cdk_iam$.RoleName",
      "module": "jsii$_aws_cdk_iam$",
      "namespace": "jsii$_aws_cdk_iam$",
      "name": "RoleName",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_iam$.IIdentityResource": {
      "kind": "interface",
      "methods": [
        {
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              }
            }
          ],
          "docs": {
            "comment": "Adds an IAM statement to the default inline policy associated with this\nprincipal. If a policy doesn't exist, it is created."
          },
          "name": "addToPolicy"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "policy The policy resource to attach to this principal.",
                "comment": "The policy resource to attach to this principal."
              },
              "name": "policy",
              "type": {
                "fqn": "jsii$_aws_cdk_iam$.Policy"
              }
            }
          ],
          "docs": {
            "comment": "Attaches an inline policy to this principal.\nThis is the same as calling `policy.addToXxx(principal)`."
          },
          "name": "attachInlinePolicy"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "arn The ARN of the managed policy",
                "comment": "The ARN of the managed policy"
              },
              "name": "arn",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "Attaches a managed policy to this principal."
          },
          "name": "attachManagedPolicy"
        }
      ],
      "properties": [
        {
          "docs": {
            "comment": "The IAM principal of this identity (i.e. AWS principal, service principal, etc)."
          },
          "name": "principal",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.PolicyPrincipal"
          },
          "immutable": true
        }
      ],
      "fqn": "jsii$_aws_cdk_iam$.IIdentityResource",
      "module": "jsii$_aws_cdk_iam$",
      "namespace": "jsii$_aws_cdk_iam$",
      "name": "IIdentityResource"
    },
    "jsii$_aws_cdk_iam$.PolicyProps": {
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "default": "Uses the logical ID of the policy resource, which is ensured to\nbe unique within the stack.",
            "comment": "The name of the policy. If you specify multiple policies for an entity,\nspecify unique names. For example, if you specify a list of policies for\nan IAM role, each policy must have a unique name."
          },
          "name": "policyName",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Users to attach this policy to.\nYou can also use `attachToUser(user)` to attach this policy to a user."
          },
          "name": "users",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_iam$.User"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Roles to attach this policy to.\nYou can also use `attachToRole(role)` to attach this policy to a role."
          },
          "name": "roles",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_iam$.Role"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Groups to attach this policy to.\nYou can also use `attachToGroup(group)` to attach this policy to a group."
          },
          "name": "groups",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_iam$.Group"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Initial set of permissions to add to this policy document.\nYou can also use `addPermission(statement)` to add permissions later."
          },
          "name": "statements",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              },
              "kind": "array"
            },
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_iam$.PolicyProps",
      "module": "jsii$_aws_cdk_iam$",
      "namespace": "jsii$_aws_cdk_iam$",
      "name": "PolicyProps",
      "datatype": true
    },
    "jsii$_aws_cdk_iam$.Policy": {
      "docs": {
        "comment": "The AWS::IAM::Policy resource associates an IAM policy with IAM users, roles,\nor groups. For more information about IAM policies, see [Overview of IAM\nPolicies](http://docs.aws.amazon.com/IAM/latest/UserGuide/policies_overview.html)\nin the IAM User Guide guide."
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The policy document."
          },
          "name": "document",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.PolicyDocument"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The name of this policy."
          },
          "name": "policyName",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Lists all the elements consumers should \"depend-on\"."
          },
          "name": "dependencyElements",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.IDependable"
              },
              "kind": "array"
            }
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              }
            }
          ],
          "docs": {
            "comment": "Adds a statement to the policy document."
          },
          "name": "addStatement"
        },
        {
          "parameters": [
            {
              "name": "user",
              "type": {
                "fqn": "jsii$_aws_cdk_iam$.User"
              }
            }
          ],
          "docs": {
            "comment": "Attaches this policy to a user."
          },
          "name": "attachToUser"
        },
        {
          "parameters": [
            {
              "name": "role",
              "type": {
                "fqn": "jsii$_aws_cdk_iam$.Role"
              }
            }
          ],
          "docs": {
            "comment": "Attaches this policy to a role."
          },
          "name": "attachToRole"
        },
        {
          "parameters": [
            {
              "name": "group",
              "type": {
                "fqn": "jsii$_aws_cdk_iam$.Group"
              }
            }
          ],
          "docs": {
            "comment": "Attaches this policy to a group."
          },
          "name": "attachToGroup"
        },
        {
          "docs": {
            "comment": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis."
          },
          "name": "validate",
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "interfaces": [
        {
          "fqn": "jsii$_aws_cdk_core$.IDependable"
        }
      ],
      "fqn": "jsii$_aws_cdk_iam$.Policy",
      "module": "jsii$_aws_cdk_iam$",
      "namespace": "jsii$_aws_cdk_iam$",
      "name": "Policy",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_iam$.PolicyProps",
              "optional": true
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_iam$.UserProps": {
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "Groups to add this user to. You can also use `addToGroup` to add this\nuser to a group."
          },
          "name": "groups",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_iam$.Group"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "default": "No managed policies.",
            "comment": "A list of ARNs for managed policies attacherd to this user.\nYou can use `addManagedPolicy(arn)` to attach a managed policy to this user."
          },
          "name": "managedPolicyArns",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The path for the user name. For more information about paths, see IAM\nIdentifiers in the IAM User Guide."
          },
          "name": "path",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "Generated by CloudFormation (recommended)",
            "comment": "A name for the IAM user. For valid values, see the UserName parameter for\nthe CreateUser action in the IAM API Reference. If you don't specify a\nname, AWS CloudFormation generates a unique physical ID and uses that ID\nfor the user name.\n\nIf you specify a name, you cannot perform updates that require\nreplacement of this resource. You can perform updates that require no or\nsome interruption. If you must replace the resource, specify a new name.\n\nIf you specify a name, you must specify the CAPABILITY_NAMED_IAM value to\nacknowledge your template's capabilities. For more information, see\nAcknowledging IAM Resources in AWS CloudFormation Templates."
          },
          "name": "userName",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "User won't be able to access the management console without a password.",
            "comment": "The password for the user. This is required so the user can access the\nAWS Management Console."
          },
          "name": "password",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "false",
            "comment": "Specifies whether the user is required to set a new password the next\ntime the user logs in to the AWS Management Console.\n\nIf this is set to 'true', you must also specify \"initialPassword\"."
          },
          "name": "passwordResetRequired",
          "type": {
            "primitive": "boolean",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_iam$.UserProps",
      "module": "jsii$_aws_cdk_iam$",
      "namespace": "jsii$_aws_cdk_iam$",
      "name": "UserProps",
      "datatype": true
    },
    "jsii$_aws_cdk_iam$.User": {
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "An attribute that represents the user name."
          },
          "name": "userName",
          "type": {
            "fqn": "jsii$_aws_cdk_iam$.UserName"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "An attribute that represents the user's ARN."
          },
          "name": "userArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.iam.UserArn"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Returns the ARN of this user."
          },
          "name": "principal",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.PolicyPrincipal"
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "name": "group",
              "type": {
                "fqn": "jsii$_aws_cdk_iam$.Group"
              }
            }
          ],
          "docs": {
            "comment": "Adds this user to a group."
          },
          "name": "addToGroup"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "arn The ARN of the managed policy to attach.",
                "comment": "The ARN of the managed policy to attach."
              },
              "name": "arn",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "Attaches a managed policy to the user."
          },
          "name": "attachManagedPolicy"
        },
        {
          "parameters": [
            {
              "name": "policy",
              "type": {
                "fqn": "jsii$_aws_cdk_iam$.Policy"
              }
            }
          ],
          "docs": {
            "comment": "Attaches a policy to this user."
          },
          "name": "attachInlinePolicy"
        },
        {
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              }
            }
          ],
          "docs": {
            "comment": "Adds an IAM statement to the default policy."
          },
          "name": "addToPolicy"
        }
      ],
      "interfaces": [
        {
          "fqn": "jsii$_aws_cdk_iam$.IIdentityResource"
        }
      ],
      "fqn": "jsii$_aws_cdk_iam$.User",
      "module": "jsii$_aws_cdk_iam$",
      "namespace": "jsii$_aws_cdk_iam$",
      "name": "User",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_iam$.UserProps",
              "optional": true
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_iam$.UserName": {
      "kind": "class",
      "fqn": "jsii$_aws_cdk_iam$.UserName",
      "module": "jsii$_aws_cdk_iam$",
      "namespace": "jsii$_aws_cdk_iam$",
      "name": "UserName",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_iam$.GroupProps": {
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "default": "Generated by CloudFormation (recommended)",
            "comment": "A name for the IAM group. For valid values, see the GroupName parameter\nfor the CreateGroup action in the IAM API Reference. If you don't specify\na name, AWS CloudFormation generates a unique physical ID and uses that\nID for the group name.\n\nIf you specify a name, you must specify the CAPABILITY_NAMED_IAM value to\nacknowledge your template's capabilities. For more information, see\nAcknowledging IAM Resources in AWS CloudFormation Templates."
          },
          "name": "groupName",
          "type": {
            "primitive": "string",
            "optional": true
          }
        },
        {
          "docs": {
            "default": "No managed policies.",
            "comment": "A list of ARNs for managed policies associated with group."
          },
          "name": "managedPolicyArns",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The path to the group. For more information about paths, see [IAM\nIdentifiers](http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html)\nin the IAM User Guide."
          },
          "name": "path",
          "type": {
            "primitive": "string",
            "optional": true
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_iam$.GroupProps",
      "module": "jsii$_aws_cdk_iam$",
      "namespace": "jsii$_aws_cdk_iam$",
      "name": "GroupProps",
      "datatype": true
    },
    "jsii$_aws_cdk_iam$.Group": {
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "The runtime name of this group."
          },
          "name": "groupName",
          "type": {
            "fqn": "jsii$_aws_cdk_iam$.GroupName"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The ARN of this group."
          },
          "name": "groupArn",
          "type": {
            "fqn": "jsii$_aws_cdk_resources$.iam.GroupArn"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "An \"AWS\" policy principal that represents this group."
          },
          "name": "principal",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.PolicyPrincipal"
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "docs": {
                "param": "arn The ARN of the managed policy to attach.",
                "comment": "The ARN of the managed policy to attach."
              },
              "name": "arn",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "Attaches a managed policy to this group."
          },
          "name": "attachManagedPolicy"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "policy The policy to attach.",
                "comment": "The policy to attach."
              },
              "name": "policy",
              "type": {
                "fqn": "jsii$_aws_cdk_iam$.Policy"
              }
            }
          ],
          "docs": {
            "comment": "Attaches a policy to this group."
          },
          "name": "attachInlinePolicy"
        },
        {
          "parameters": [
            {
              "name": "user",
              "type": {
                "fqn": "jsii$_aws_cdk_iam$.User"
              }
            }
          ],
          "docs": {
            "comment": "Adds a user to this group."
          },
          "name": "addUser"
        },
        {
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              }
            }
          ],
          "docs": {
            "comment": "Adds an IAM statement to the default policy."
          },
          "name": "addToPolicy"
        }
      ],
      "interfaces": [
        {
          "fqn": "jsii$_aws_cdk_iam$.IIdentityResource"
        }
      ],
      "fqn": "jsii$_aws_cdk_iam$.Group",
      "module": "jsii$_aws_cdk_iam$",
      "namespace": "jsii$_aws_cdk_iam$",
      "name": "Group",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Construct"
      },
      "initializer": {
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "jsii$_aws_cdk_iam$.GroupProps",
              "optional": true
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_iam$.GroupName": {
      "kind": "class",
      "fqn": "jsii$_aws_cdk_iam$.GroupName",
      "module": "jsii$_aws_cdk_iam$",
      "namespace": "jsii$_aws_cdk_iam$",
      "name": "GroupName",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    }
  },
  "nametree": {
    "jsii$_aws_cdk_iam$": {
      "RoleProps": {
        "_": "jsii$_aws_cdk_iam$.RoleProps"
      },
      "Role": {
        "_": "jsii$_aws_cdk_iam$.Role"
      },
      "RoleName": {
        "_": "jsii$_aws_cdk_iam$.RoleName"
      },
      "IIdentityResource": {
        "_": "jsii$_aws_cdk_iam$.IIdentityResource"
      },
      "PolicyProps": {
        "_": "jsii$_aws_cdk_iam$.PolicyProps"
      },
      "Policy": {
        "_": "jsii$_aws_cdk_iam$.Policy"
      },
      "UserProps": {
        "_": "jsii$_aws_cdk_iam$.UserProps"
      },
      "User": {
        "_": "jsii$_aws_cdk_iam$.User"
      },
      "UserName": {
        "_": "jsii$_aws_cdk_iam$.UserName"
      },
      "GroupProps": {
        "_": "jsii$_aws_cdk_iam$.GroupProps"
      },
      "Group": {
        "_": "jsii$_aws_cdk_iam$.Group"
      },
      "GroupName": {
        "_": "jsii$_aws_cdk_iam$.GroupName"
      }
    }
  },
  "typecount": 12,
  "externalTypes": {
    "jsii$_aws_cdk_core$.PolicyPrincipal": {
      "docs": {
        "comment": "Represents an IAM principal."
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "When this Principal is used in an AssumeRole policy, the action to use."
          },
          "name": "assumeRoleAction",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "docs": {
            "comment": "Return the policy fragment that identifies this principal in a Policy."
          },
          "name": "policyFragment",
          "abstract": true,
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PrincipalPolicyFragment"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.PolicyPrincipal",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "PolicyPrincipal",
      "abstract": true,
      "initializer": {
        "initializer": true
      }
    },
    "jsii$_aws_cdk_core$.Construct": {
      "docs": {
        "comment": "Represents the building block of the construct graph.\nWhen a construct is created, it is always added as a child"
      },
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "Returns the parent of this node or undefined if this is a root node."
          },
          "name": "parent",
          "type": {
            "fqn": "jsii$_aws_cdk_core$.Construct",
            "optional": true
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The name of this construct"
          },
          "name": "name",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "All direct children of this construct."
          },
          "name": "children",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              },
              "kind": "array"
            }
          },
          "immutable": true
        },
        {
          "docs": {
            "returns": "/-separated path of this Construct.",
            "comment": "Returns the path of all constructs from root to this construct, in string form."
          },
          "name": "path",
          "type": {
            "primitive": "string"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "An array of metadata objects associated with this construct.\nThis can be used, for example, to implement support for deprecation notices, source mapping, etc."
          },
          "name": "metadata",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.MetadataEntry"
              },
              "kind": "array"
            }
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "docs": {
            "comment": "Returns a string representation of this construct."
          },
          "name": "toString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "parameters": [
            {
              "name": "depth",
              "type": {
                "primitive": "number",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Returns a string with a tree representation of this construct and it's children."
          },
          "name": "toTreeString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "a child by path or undefined if not found.",
            "comment": "Return a descendant by path, or undefined"
          },
          "name": "tryFindChild",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct",
            "optional": true
          }
        },
        {
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "Child with the given path.",
            "comment": "Return a descendant by path\n\nThrows an exception if the descendant is not found."
          },
          "name": "findChild",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "key The context key",
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "value The context value",
                "comment": "The context value"
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "This can be used to set contextual values.\nContext must be set before any children are added, since children may consult context info during construction.\nIf the key already exists, it will be overridden."
          },
          "name": "setContext"
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "key The context key",
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "The context value or undefined",
            "comment": "Retrieves a value from tree context.\n\nContext is usually initialized at the root, but can be overridden at any point in the tree."
          },
          "name": "getContext",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Retrieve a value from tree-global context\n\nIt is an error if the context object is not available."
          },
          "name": "requireContext",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "type a string denoting the type of metadata",
                "comment": "a string denoting the type of metadata"
              },
              "name": "type",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "param": "data the value of the metadata (can be a Token). If null/undefined, metadata will not be added.",
                "comment": "the value of the metadata (can be a Token). If null/undefined, metadata will not be added."
              },
              "name": "data",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "param": "from a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)",
                "comment": "a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)"
              },
              "name": "from",
              "type": {
                "primitive": "any",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Adds a metadata entry to this construct.\nEntries are arbitrary values and will also include a stack trace to allow tracing back to\nthe code location for when the entry was added. It can be used, for example, to include source\nmapping in CloudFormation templates to improve diagnostics."
          },
          "name": "addMetadata",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "message The warning message.",
                "comment": "The warning message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Adds a { warning: <message> } metadata entry to this construct."
          },
          "name": "addWarning",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.Construct"
          }
        },
        {
          "docs": {
            "returns": "An array of validation error messages, or an empty array if there the construct is valid.",
            "comment": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis."
          },
          "name": "validate",
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "returns": "A list of validation errors. If the list is empty, all constructs are valid.",
            "comment": "Invokes 'validate' on all child constructs and then on this construct (depth-first)."
          },
          "name": "validateTree",
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.ValidationError"
              },
              "kind": "array"
            }
          }
        },
        {
          "parameters": [
            {
              "name": "upTo",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct",
                "optional": true
              }
            }
          ],
          "docs": {
            "comment": "Return the ancestors (including self) of this Construct up until and excluding the indicated component"
          },
          "name": "ancestors",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              },
              "kind": "array"
            }
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "props The props bag.",
                "comment": "The props bag."
              },
              "name": "props",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "param": "name The name of the required property.",
                "comment": "The name of the required property."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "comment": "Throws if the `props` bag doesn't include the property `name`.\nIn the future we can add some type-checking here, maybe even auto-generate during compilation."
          },
          "name": "required",
          "protected": true,
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "docs": {
                "param": "child The child construct",
                "comment": "The child construct"
              },
              "name": "child",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.Construct"
              }
            },
            {
              "name": "childName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "docs": {
            "returns": "The resolved path part name of the child",
            "comment": "Adds a child construct to this node."
          },
          "name": "addChild",
          "protected": true
        },
        {
          "docs": {
            "comment": "Locks this construct from allowing more children to be added. After this\ncall, no more children can be added to this construct or to any children."
          },
          "name": "lock",
          "protected": true
        },
        {
          "docs": {
            "comment": "Unlocks this costruct and allows mutations (adding children)."
          },
          "name": "unlock",
          "protected": true
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.Construct",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "Construct",
      "initializer": {
        "parameters": [
          {
            "docs": {
              "param": "parent The parent construct",
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_core$.IDependable": {
      "docs": {
        "comment": "Represents a construct that can be \"depended on\" via `addDependency`."
      },
      "kind": "interface",
      "properties": [
        {
          "docs": {
            "comment": "Returns the set of all stack elements (resources, parameters, conditions)\nthat should be added when a resource \"depends on\" this construct."
          },
          "name": "dependencyElements",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "jsii$_aws_cdk_core$.IDependable"
              },
              "kind": "array"
            }
          },
          "immutable": true
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.IDependable",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "IDependable",
      "datatype": true
    },
    "jsii$_aws_cdk_core$.PolicyDocument": {
      "kind": "class",
      "properties": [
        {
          "name": "isEmpty",
          "type": {
            "primitive": "boolean"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "The number of statements already added to this policy.\nCan be used, for example, to generate uniuqe \"sid\"s within the policy."
          },
          "name": "statementCount",
          "type": {
            "primitive": "number"
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "name": "resolve",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
              }
            }
          ],
          "name": "addStatement",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyDocument"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.PolicyDocument",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "PolicyDocument",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "baseDocument",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a new IAM policy document."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_resources$.iam.RoleArn": {
      "kind": "class",
      "fqn": "jsii$_aws_cdk_resources$.iam.RoleArn",
      "module": "jsii$_aws_cdk_resources$",
      "namespace": "jsii$_aws_cdk_resources$.iam",
      "name": "RoleArn",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Arn"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_core$.PolicyStatement": {
      "docs": {
        "comment": "Represents a statement in an IAM policy document."
      },
      "subtypes": [
        "jsii$_aws_cdk_core$.PolicyStatement.Effect"
      ],
      "kind": "class",
      "properties": [
        {
          "docs": {
            "comment": "Indicates if this permission has a \"Principal\" section."
          },
          "name": "hasPrincipal",
          "type": {
            "primitive": "boolean"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Indicates if this permission as at least one resource associated with it."
          },
          "name": "hasResource",
          "type": {
            "primitive": "boolean"
          },
          "immutable": true
        },
        {
          "docs": {
            "comment": "Indicates if this permission has only a ``\"*\"`` resource associated with it."
          },
          "name": "isOnlyStarResource",
          "type": {
            "primitive": "boolean"
          },
          "immutable": true
        }
      ],
      "methods": [
        {
          "parameters": [
            {
              "name": "action",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "name": "addAction",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "actions",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "name": "addActions",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          },
          "variadic": true
        },
        {
          "parameters": [
            {
              "name": "principal",
              "type": {
                "fqn": "jsii$_aws_cdk_core$.PolicyPrincipal"
              }
            }
          ],
          "name": "addPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "arn",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "addAwsPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "accountId",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "addAwsAccountPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "service",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "addServicePrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "federated",
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "conditions",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "name": "addFederatedPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "name": "addAccountRootPrincipal",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "resource",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "addResource",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Adds a ``\"*\"`` resource to this statement."
          },
          "name": "addAllResources",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "resources",
              "type": {
                "primitive": "any"
              },
              "variadic": true
            }
          ],
          "name": "addResources",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          },
          "variadic": true
        },
        {
          "parameters": [
            {
              "name": "sid",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "describe",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Sets the permission effect to deny access to resources."
          },
          "name": "allow",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Sets the permission effect to allow access to resources."
          },
          "name": "deny",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "comment": "Add a condition to the Policy"
          },
          "name": "addCondition",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "conditions",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "docs": {
            "comment": "Add multiple conditions to the Policy"
          },
          "name": "addConditions",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "docs": {
            "deprecated": "For backwards compatibility. Use addCondition() instead.",
            "comment": "Add a condition to the Policy."
          },
          "name": "setCondition",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "parameters": [
            {
              "name": "accountId",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "name": "limitToAccount",
          "returns": {
            "fqn": "jsii$_aws_cdk_core$.PolicyStatement"
          }
        },
        {
          "name": "resolve",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "name": "toJson",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.PolicyStatement",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "PolicyStatement",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Token"
      },
      "initializer": {
        "parameters": [
          {
            "name": "effect",
            "type": {
              "fqn": "jsii$_aws_cdk_core$.PolicyStatement.Effect",
              "optional": true
            }
          }
        ],
        "initializer": true
      }
    },
    "jsii$_aws_cdk_core$.Token": {
      "docs": {
        "comment": "Represents a lazy-evaluated value. Can be used to delay evaluation of a certain value\nin case, for example, that it requires some context or late-bound data."
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "returns": "The resolved value for this token."
          },
          "name": "resolve",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "fqn": "jsii$_aws_cdk_core$.Token",
      "module": "jsii$_aws_cdk_core$",
      "namespace": "jsii$_aws_cdk_core$",
      "name": "Token",
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_resources$.iam.UserArn": {
      "kind": "class",
      "fqn": "jsii$_aws_cdk_resources$.iam.UserArn",
      "module": "jsii$_aws_cdk_resources$",
      "namespace": "jsii$_aws_cdk_resources$.iam",
      "name": "UserArn",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Arn"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    },
    "jsii$_aws_cdk_resources$.iam.GroupArn": {
      "kind": "class",
      "fqn": "jsii$_aws_cdk_resources$.iam.GroupArn",
      "module": "jsii$_aws_cdk_resources$",
      "namespace": "jsii$_aws_cdk_resources$.iam",
      "name": "GroupArn",
      "base": {
        "fqn": "jsii$_aws_cdk_core$.Arn"
      },
      "initializer": {
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "primitive": "any",
              "optional": true
            }
          }
        ],
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true
      }
    }
  },
  "name": "jsii$_aws_cdk_iam$",
  "package": "@aws-cdk/iam",
  "version": "0.7.2-beta",
  "dependencies": {
    "jsii$_aws_cdk_core$": {
      "package": "@aws-cdk/core",
      "version": "0.7.2-beta"
    },
    "jsii$_aws_cdk_resources$": {
      "package": "@aws-cdk/resources",
      "version": "0.7.2-beta"
    }
  },
  "names": {
    "java": "com.amazonaws.cdk.iam",
    "dotnet": "AWS.Cdk.Iam",
    "js": "@aws-cdk/iam"
  },
  "nativenames": {
    "jsii$_aws_cdk_core$": {
      "java": "com.amazonaws.cdk",
      "dotnet": "AWS.Cdk",
      "js": "@aws-cdk/core"
    },
    "jsii$_aws_cdk_resources$": {
      "java": "com.amazonaws.cdk.resources",
      "dotnet": "AWS.Cdk.Resources",
      "js": "@aws-cdk/resources"
    },
    "jsii$_aws_cdk_iam$": {
      "java": "com.amazonaws.cdk.iam",
      "dotnet": "AWS.Cdk.Iam",
      "js": "@aws-cdk/iam"
    }
  },
  "readme": {
    "markdown": "## AWS IAM Construct Library\n\nDefine a role and add permissions to it. This will automatically create and\nattach an IAM policy to the role:\n\n```ts\nconst role = new Role(this, 'MyRole', {\n  assumedBy: new ServicePrincipal('sns.amazonaws.com')\n});\nrole.addPermission(new Permission('*', 'lambda:InvokeFunction'));\n```\n\nDefine a policy and attach it to groups, users and roles. Note that it is possible to attach\nthe policy either by calling `xxx.attachPolicy(policy)` or `policy.attachToXxx(xxx)`.\n\n```ts\nconst user = new User(this, 'MyUser', { password: '1234' });\nconst group = new Group(this, 'MyGroup');\n\nconst policy = new Policy(this, 'MyPolicy');\npolicy.attachToUser(user);\ngroup.attachPolicy(policy);\n```\n\nManaged policies can be attached using `xxx.attachManagedPolicy(arn)`:\n\n```ts\nconst group = new Group(this, 'MyGroup');\ngroup.attachManagedPolicy('arn:aws:iam::aws:policy/AdministratorAccess');\n```\n\n### Features\n\n * Policy name uniqueness is enforced. If two policies by the same name are attached to the same\n   principal, the attachment will fail.\n * Policy names are not required - the CDK logical ID will be used and ensured to be unique.\n"
  },
  "code": "var jsii$_aws_cdk_iam$ =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_core$;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = jsii$_aws_cdk_resources$;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(0);\nconst resources_1 = __webpack_require__(1);\nconst util_1 = __webpack_require__(3);\n/**\n * The AWS::IAM::Policy resource associates an IAM policy with IAM users, roles,\n * or groups. For more information about IAM policies, see [Overview of IAM\n * Policies](http://docs.aws.amazon.com/IAM/latest/UserGuide/policies_overview.html)\n * in the IAM User Guide guide.\n */\nclass Policy extends core_1.Construct {\n    constructor(parent, name, props = {}) {\n        super(parent, name);\n        /**\n         * The policy document.\n         */\n        this.document = new core_1.PolicyDocument();\n        this.roles = new Array();\n        this.users = new Array();\n        this.groups = new Array();\n        const resource = new resources_1.iam.PolicyResource(this, 'Resource', {\n            policyDocument: this.document,\n            policyName: new core_1.Token(() => this.policyName),\n            roles: util_1.undefinedIfEmpty(() => this.roles.map(r => r.roleName)),\n            users: util_1.undefinedIfEmpty(() => this.users.map(u => u.userName)),\n            groups: util_1.undefinedIfEmpty(() => this.groups.map(g => g.groupName)),\n        });\n        // generatePolicyName will take the last 128 characters of the logical id since\n        // policy names are limited to 128. the last 8 chars are a stack-unique hash, so\n        // that shouod be sufficient to ensure uniqueness within a principal.\n        this.policyName = props.policyName || util_1.generatePolicyName(resource.logicalId);\n        this.dependencyElements = [resource];\n        if (props.users) {\n            props.users.forEach(u => this.attachToUser(u));\n        }\n        if (props.groups) {\n            props.groups.forEach(g => this.attachToGroup(g));\n        }\n        if (props.roles) {\n            props.roles.forEach(r => this.attachToRole(r));\n        }\n        if (props.statements) {\n            props.statements.forEach(p => this.addStatement(p));\n        }\n    }\n    /**\n     * Adds a statement to the policy document.\n     */\n    addStatement(statement) {\n        this.document.addStatement(statement);\n    }\n    /**\n     * Attaches this policy to a user.\n     */\n    attachToUser(user) {\n        if (this.users.find(u => u === user)) {\n            return;\n        }\n        this.users.push(user);\n        user.attachInlinePolicy(this);\n    }\n    /**\n     * Attaches this policy to a role.\n     */\n    attachToRole(role) {\n        if (this.roles.find(r => r === role)) {\n            return;\n        }\n        this.roles.push(role);\n        role.attachInlinePolicy(this);\n    }\n    /**\n     * Attaches this policy to a group.\n     */\n    attachToGroup(group) {\n        if (this.groups.find(g => g === group)) {\n            return;\n        }\n        this.groups.push(group);\n        group.attachInlinePolicy(this);\n    }\n    validate() {\n        const result = new Array();\n        // validate that the policy document is not empty\n        if (this.document.isEmpty) {\n            result.push('Policy is empty. You must add statements to the policy');\n        }\n        // validate that the policy is attached to at least one principal (role, user or group).\n        if (this.groups.length + this.users.length + this.roles.length === 0) {\n            result.push(`Policy must be attached to at least one principal: user, group or role`);\n        }\n        return result;\n    }\n}\nexports.Policy = Policy;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(0);\nconst MAX_POLICY_NAME_LEN = 128;\nfunction undefinedIfEmpty(f) {\n    return new core_1.Token(() => {\n        const array = f();\n        return (array && array.length > 0) ? array : undefined;\n    });\n}\nexports.undefinedIfEmpty = undefinedIfEmpty;\n/**\n * Used to generate a unique policy name based on the policy resource construct.\n * The logical ID of the resource is a great candidate as long as it doesn't exceed\n * 128 characters, so we take the last 128 characters (in order to make sure the hash\n * is there).\n */\nfunction generatePolicyName(logicalId) {\n    return logicalId.substring(Math.max(logicalId.length - MAX_POLICY_NAME_LEN, 0), logicalId.length);\n}\nexports.generatePolicyName = generatePolicyName;\n/**\n * Helper class that maintains the set of attached policies for a principal.\n */\nclass AttachedPolicies {\n    constructor() {\n        this.policies = new Array();\n    }\n    /**\n     * Adds a policy to the list of attached policies.\n     *\n     * If this policy is already, attached, returns false.\n     * If there is another policy attached with the same name, throws an exception.\n     */\n    attach(policy) {\n        if (this.policies.find(p => p === policy)) {\n            return; // already attached\n        }\n        if (this.policies.find(p => p.policyName === policy.policyName)) {\n            throw new Error(`A policy named \"${policy.policyName}\" is already attached`);\n        }\n        this.policies.push(policy);\n    }\n}\nexports.AttachedPolicies = AttachedPolicies;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(5));\n__export(__webpack_require__(2));\n__export(__webpack_require__(6));\n__export(__webpack_require__(7));\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(0);\nconst resources_1 = __webpack_require__(1);\nconst policy_1 = __webpack_require__(2);\nconst util_1 = __webpack_require__(3);\n/**\n * IAM Role\n *\n * Defines an IAM role. The role is created with an assume policy document associated with\n * the specified AWS service principal defined in `serviceAssumeRole`.\n */\nclass Role extends core_1.Construct {\n    constructor(parent, name, props) {\n        super(parent, name);\n        this.attachedPolicies = new util_1.AttachedPolicies();\n        this.assumeRolePolicy = createAssumeRolePolicy(props.assumedBy);\n        this.managedPolicies = props.managedPolicyArns || [];\n        const role = new resources_1.iam.RoleResource(this, 'Resource', {\n            assumeRolePolicyDocument: this.assumeRolePolicy,\n            managedPolicyArns: util_1.undefinedIfEmpty(() => this.managedPolicies),\n            path: props.path,\n            roleName: props.roleName,\n        });\n        this.roleArn = role.roleArn;\n        this.principal = new core_1.ArnPrincipal(this.roleArn);\n        this.roleName = role.ref;\n        this.dependencyElements = [role];\n    }\n    /**\n     * Adds a permission to the role's default policy document.\n     * If there is no default policy attached to this role, it will be created.\n     * @param permission The permission statement to add to the policy document\n     */\n    addToPolicy(statement) {\n        if (!this.defaultPolicy) {\n            this.defaultPolicy = new policy_1.Policy(this, 'DefaultPolicy');\n            this.attachInlinePolicy(this.defaultPolicy);\n            this.dependencyElements.push(this.defaultPolicy);\n        }\n        this.defaultPolicy.addStatement(statement);\n    }\n    /**\n     * Attaches a managed policy to this role.\n     * @param arn The ARN of the managed policy to attach.\n     */\n    attachManagedPolicy(arn) {\n        this.managedPolicies.push(arn);\n    }\n    /**\n     * Attaches a policy to this role.\n     * @param policy The policy to attach\n     */\n    attachInlinePolicy(policy) {\n        this.attachedPolicies.attach(policy);\n        policy.attachToRole(this);\n    }\n}\nexports.Role = Role;\nclass RoleName extends core_1.Token {\n}\nexports.RoleName = RoleName;\nfunction createAssumeRolePolicy(principal) {\n    return new core_1.PolicyDocument()\n        .addStatement(new core_1.PolicyStatement()\n        .addPrincipal(principal)\n        .addAction(principal.assumeRoleAction));\n}\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(0);\nconst resources_1 = __webpack_require__(1);\nconst policy_1 = __webpack_require__(2);\nconst util_1 = __webpack_require__(3);\nclass User extends core_1.Construct {\n    constructor(parent, name, props = {}) {\n        super(parent, name);\n        this.groups = new Array();\n        this.managedPolicies = new Array();\n        this.attachedPolicies = new util_1.AttachedPolicies();\n        const user = new resources_1.iam.UserResource(this, 'Resource', {\n            userName: props.userName,\n            groups: util_1.undefinedIfEmpty(() => this.groups),\n            managedPolicyArns: util_1.undefinedIfEmpty(() => this.managedPolicies),\n            path: props.path,\n            loginProfile: this.parseLoginProfile(props)\n        });\n        this.userName = user.ref;\n        this.userArn = user.userArn;\n        this.principal = new core_1.ArnPrincipal(this.userArn);\n        if (props.groups) {\n            props.groups.forEach(g => this.addToGroup(g));\n        }\n    }\n    /**\n     * Adds this user to a group.\n     */\n    addToGroup(group) {\n        this.groups.push(group.groupName);\n    }\n    /**\n     * Attaches a managed policy to the user.\n     * @param arn The ARN of the managed policy to attach.\n     */\n    attachManagedPolicy(arn) {\n        this.managedPolicies.push(arn);\n    }\n    /**\n     * Attaches a policy to this user.\n     */\n    attachInlinePolicy(policy) {\n        this.attachedPolicies.attach(policy);\n        policy.attachToUser(this);\n    }\n    /**\n     * Adds an IAM statement to the default policy.\n     */\n    addToPolicy(statement) {\n        if (!this.defaultPolicy) {\n            this.defaultPolicy = new policy_1.Policy(this, 'DefaultPolicy');\n            this.defaultPolicy.attachToUser(this);\n        }\n        this.defaultPolicy.addStatement(statement);\n    }\n    parseLoginProfile(props) {\n        if (props.password) {\n            return {\n                password: props.password,\n                passwordResetRequired: props.passwordResetRequired\n            };\n        }\n        if (props.passwordResetRequired) {\n            throw new Error('Cannot set \"passwordResetRequired\" without specifying \"initialPassword\"');\n        }\n        return undefined; // no console access\n    }\n}\nexports.User = User;\nclass UserName extends core_1.Token {\n}\nexports.UserName = UserName;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __webpack_require__(0);\nconst resources_1 = __webpack_require__(1);\nconst policy_1 = __webpack_require__(2);\nconst util_1 = __webpack_require__(3);\nclass Group extends core_1.Construct {\n    constructor(parent, name, props = {}) {\n        super(parent, name);\n        this.attachedPolicies = new util_1.AttachedPolicies();\n        this.managedPolicies = props.managedPolicyArns || [];\n        const group = new resources_1.iam.GroupResource(this, 'Resource', {\n            groupName: props.groupName,\n            managedPolicyArns: util_1.undefinedIfEmpty(() => this.managedPolicies),\n            path: props.path,\n        });\n        this.groupName = group.ref;\n        this.groupArn = group.groupArn;\n        this.principal = new core_1.ArnPrincipal(this.groupArn);\n    }\n    /**\n     * Attaches a managed policy to this group.\n     * @param arn The ARN of the managed policy to attach.\n     */\n    attachManagedPolicy(arn) {\n        this.managedPolicies.push(arn);\n    }\n    /**\n     * Attaches a policy to this group.\n     * @param policy The policy to attach.\n     */\n    attachInlinePolicy(policy) {\n        this.attachedPolicies.attach(policy);\n        policy.attachToGroup(this);\n    }\n    /**\n     * Adds a user to this group.\n     */\n    addUser(user) {\n        user.addToGroup(this);\n    }\n    /**\n     * Adds an IAM statement to the default policy.\n     */\n    addToPolicy(statement) {\n        if (!this.defaultPolicy) {\n            this.defaultPolicy = new policy_1.Policy(this, 'DefaultPolicy');\n            this.defaultPolicy.attachToGroup(this);\n        }\n        this.defaultPolicy.addStatement(statement);\n    }\n}\nexports.Group = Group;\nclass GroupName extends core_1.Token {\n}\nexports.GroupName = GroupName;\n\n\n/***/ })\n/******/ ]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"
}
